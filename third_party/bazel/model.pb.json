{"file":[{"name":"build/bazel/semver/semver.proto","package":"build.bazel.semver","messageType":[{"name":"SemVer","field":[{"name":"major","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"major"},{"name":"minor","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"minor"},{"name":"patch","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"patch"},{"name":"prerelease","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"prerelease"}]}],"options":{"javaPackage":"build.bazel.semver","javaOuterClassname":"SemverProto","javaMultipleFiles":true,"goPackage":"github.com/bazelbuild/remote-apis/build/bazel/semver","objcClassPrefix":"SMV","csharpNamespace":"Build.Bazel.Semver"},"sourceCodeInfo":{"location":[{"span":[14,0,40,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2018 The Bazel Authors.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,27]},{"path":[8],"span":[18,0,47]},{"path":[8,37],"span":[18,0,47]},{"path":[8],"span":[19,0,75]},{"path":[8,11],"span":[19,0,75]},{"path":[8],"span":[20,0,34]},{"path":[8,10],"span":[20,0,34]},{"path":[8],"span":[21,0,44]},{"path":[8,8],"span":[21,0,44]},{"path":[8],"span":[22,0,43]},{"path":[8,1],"span":[22,0,43]},{"path":[8],"span":[23,0,33]},{"path":[8,36],"span":[23,0,33]},{"path":[4,0],"span":[26,0,40,1],"leadingComments":" The full version of a given tool.\n"},{"path":[4,0,1],"span":[26,8,14]},{"path":[4,0,2,0],"span":[28,2,18],"leadingComments":" The major version, e.g 10 for 10.2.3.\n"},{"path":[4,0,2,0,5],"span":[28,2,7]},{"path":[4,0,2,0,1],"span":[28,8,13]},{"path":[4,0,2,0,3],"span":[28,16,17]},{"path":[4,0,2,1],"span":[31,2,18],"leadingComments":" The minor version, e.g. 2 for 10.2.3.\n"},{"path":[4,0,2,1,5],"span":[31,2,7]},{"path":[4,0,2,1,1],"span":[31,8,13]},{"path":[4,0,2,1,3],"span":[31,16,17]},{"path":[4,0,2,2],"span":[34,2,18],"leadingComments":" The patch version, e.g 3 for 10.2.3.\n"},{"path":[4,0,2,2,5],"span":[34,2,7]},{"path":[4,0,2,2,1],"span":[34,8,13]},{"path":[4,0,2,2,3],"span":[34,16,17]},{"path":[4,0,2,3],"span":[39,2,24],"leadingComments":" The pre-release version. Either this field or major/minor/patch fields\n must be filled. They are mutually exclusive. Pre-release versions are\n assumed to be earlier than any released versions.\n"},{"path":[4,0,2,3,5],"span":[39,2,8]},{"path":[4,0,2,3,1],"span":[39,9,19]},{"path":[4,0,2,3,3],"span":[39,22,23]}]},"syntax":"proto3","bufExtension":{"isImport":false,"moduleInfo":{"name":{"remote":"buf.build","owner":"bazel","repository":"remote-apis"}},"isSyntaxUnspecified":false}},{"name":"google/api/http.proto","package":"google.api","messageType":[{"name":"Http","field":[{"name":"rules","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.api.HttpRule","jsonName":"rules"},{"name":"fully_decode_reserved_expansion","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"fullyDecodeReservedExpansion"}]},{"name":"HttpRule","field":[{"name":"selector","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"selector"},{"name":"get","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"get"},{"name":"put","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"put"},{"name":"post","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"post"},{"name":"delete","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"delete"},{"name":"patch","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"patch"},{"name":"custom","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.CustomHttpPattern","oneofIndex":0,"jsonName":"custom"},{"name":"body","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"body"},{"name":"response_body","number":12,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"responseBody"},{"name":"additional_bindings","number":11,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.api.HttpRule","jsonName":"additionalBindings"}],"oneofDecl":[{"name":"pattern"}]},{"name":"CustomHttpPattern","field":[{"name":"kind","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"kind"},{"name":"path","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"path"}]}],"options":{"javaPackage":"com.google.api","javaOuterClassname":"HttpProto","javaMultipleFiles":true,"goPackage":"google.golang.org/genproto/googleapis/api/annotations;annotations","ccEnableArenas":true,"objcClassPrefix":"GAPI"},"sourceCodeInfo":{"location":[{"span":[14,0,378,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2023 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,19]},{"path":[8],"span":[18,0,31]},{"path":[8,31],"span":[18,0,31]},{"path":[8],"span":[19,0,88]},{"path":[8,11],"span":[19,0,88]},{"path":[8],"span":[20,0,34]},{"path":[8,10],"span":[20,0,34]},{"path":[8],"span":[21,0,42]},{"path":[8,8],"span":[21,0,42]},{"path":[8],"span":[22,0,39]},{"path":[8,1],"span":[22,0,39]},{"path":[8],"span":[23,0,34]},{"path":[8,36],"span":[23,0,34]},{"path":[4,0],"span":[28,0,41,1],"leadingComments":" Defines the HTTP configuration for an API service. It contains a list of\n [HttpRule][google.api.HttpRule], each specifying the mapping of an RPC method\n to one or more HTTP REST API methods.\n"},{"path":[4,0,1],"span":[28,8,12]},{"path":[4,0,2,0],"span":[32,2,30],"leadingComments":" A list of HTTP configuration rules that apply to individual API methods.\n\n **NOTE:** All service configuration rules follow \"last one wins\" order.\n"},{"path":[4,0,2,0,4],"span":[32,2,10]},{"path":[4,0,2,0,6],"span":[32,11,19]},{"path":[4,0,2,0,1],"span":[32,20,25]},{"path":[4,0,2,0,3],"span":[32,28,29]},{"path":[4,0,2,1],"span":[40,2,43],"leadingComments":" When set to true, URL path parameters will be fully URI-decoded except in\n cases of single segment matches in reserved expansion, where \"%2F\" will be\n left encoded.\n\n The default behavior is to not decode RFC 6570 reserved characters in multi\n segment matches.\n"},{"path":[4,0,2,1,5],"span":[40,2,6]},{"path":[4,0,2,1,1],"span":[40,7,38]},{"path":[4,0,2,1,3],"span":[40,41,42]},{"path":[4,1],"span":[315,0,369,1],"leadingComments":" # gRPC Transcoding\n\n gRPC Transcoding is a feature for mapping between a gRPC method and one or\n more HTTP REST endpoints. It allows developers to build a single API service\n that supports both gRPC APIs and REST APIs. Many systems, including [Google\n APIs](https://github.com/googleapis/googleapis),\n [Cloud Endpoints](https://cloud.google.com/endpoints), [gRPC\n Gateway](https://github.com/grpc-ecosystem/grpc-gateway),\n and [Envoy](https://github.com/envoyproxy/envoy) proxy support this feature\n and use it for large scale production services.\n\n `HttpRule` defines the schema of the gRPC/REST mapping. The mapping specifies\n how different portions of the gRPC request message are mapped to the URL\n path, URL query parameters, and HTTP request body. It also controls how the\n gRPC response message is mapped to the HTTP response body. `HttpRule` is\n typically specified as an `google.api.http` annotation on the gRPC method.\n\n Each mapping specifies a URL path template and an HTTP method. The path\n template may refer to one or more fields in the gRPC request message, as long\n as each field is a non-repeated field with a primitive (non-message) type.\n The path template controls how fields of the request message are mapped to\n the URL path.\n\n Example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n             get: \"/v1/{name=messages/*}\"\n         };\n       }\n     }\n     message GetMessageRequest {\n       string name = 1; // Mapped to URL path.\n     }\n     message Message {\n       string text = 1; // The resource content.\n     }\n\n This enables an HTTP REST to gRPC mapping as below:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456`  | `GetMessage(name: \"messages/123456\")`\n\n Any fields in the request message which are not bound by the path template\n automatically become HTTP query parameters if there is no HTTP request body.\n For example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n             get:\"/v1/messages/{message_id}\"\n         };\n       }\n     }\n     message GetMessageRequest {\n       message SubMessage {\n         string subfield = 1;\n       }\n       string message_id = 1; // Mapped to URL path.\n       int64 revision = 2;    // Mapped to URL query parameter `revision`.\n       SubMessage sub = 3;    // Mapped to URL query parameter `sub.subfield`.\n     }\n\n This enables a HTTP JSON to RPC mapping as below:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456?revision=2&sub.subfield=foo` |\n `GetMessage(message_id: \"123456\" revision: 2 sub: SubMessage(subfield:\n \"foo\"))`\n\n Note that fields which are mapped to URL query parameters must have a\n primitive type or a repeated primitive type or a non-repeated message type.\n In the case of a repeated type, the parameter can be repeated in the URL\n as `...?param=A&param=B`. In the case of a message type, each field of the\n message is mapped to a separate parameter, such as\n `...?foo.a=A&foo.b=B&foo.c=C`.\n\n For HTTP methods that allow a request body, the `body` field\n specifies the mapping. Consider a REST update method on the\n message resource collection:\n\n     service Messaging {\n       rpc UpdateMessage(UpdateMessageRequest) returns (Message) {\n         option (google.api.http) = {\n           patch: \"/v1/messages/{message_id}\"\n           body: \"message\"\n         };\n       }\n     }\n     message UpdateMessageRequest {\n       string message_id = 1; // mapped to the URL\n       Message message = 2;   // mapped to the body\n     }\n\n The following HTTP JSON to RPC mapping is enabled, where the\n representation of the JSON in the request body is determined by\n protos JSON encoding:\n\n HTTP | gRPC\n -----|-----\n `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id:\n \"123456\" message { text: \"Hi!\" })`\n\n The special name `*` can be used in the body mapping to define that\n every field not bound by the path template should be mapped to the\n request body.  This enables the following alternative definition of\n the update method:\n\n     service Messaging {\n       rpc UpdateMessage(Message) returns (Message) {\n         option (google.api.http) = {\n           patch: \"/v1/messages/{message_id}\"\n           body: \"*\"\n         };\n       }\n     }\n     message Message {\n       string message_id = 1;\n       string text = 2;\n     }\n\n\n The following HTTP JSON to RPC mapping is enabled:\n\n HTTP | gRPC\n -----|-----\n `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id:\n \"123456\" text: \"Hi!\")`\n\n Note that when using `*` in the body mapping, it is not possible to\n have HTTP parameters, as all fields not bound by the path end in\n the body. This makes this option more rarely used in practice when\n defining REST APIs. The common usage of `*` is in custom methods\n which don't use the URL at all for transferring data.\n\n It is possible to define multiple HTTP methods for one RPC by using\n the `additional_bindings` option. Example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n           get: \"/v1/messages/{message_id}\"\n           additional_bindings {\n             get: \"/v1/users/{user_id}/messages/{message_id}\"\n           }\n         };\n       }\n     }\n     message GetMessageRequest {\n       string message_id = 1;\n       string user_id = 2;\n     }\n\n This enables the following two alternative HTTP JSON to RPC mappings:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456` | `GetMessage(message_id: \"123456\")`\n `GET /v1/users/me/messages/123456` | `GetMessage(user_id: \"me\" message_id:\n \"123456\")`\n\n ## Rules for HTTP mapping\n\n 1. Leaf request fields (recursive expansion nested messages in the request\n    message) are classified into three categories:\n    - Fields referred by the path template. They are passed via the URL path.\n    - Fields referred by the [HttpRule.body][google.api.HttpRule.body]. They\n    are passed via the HTTP\n      request body.\n    - All other fields are passed via the URL query parameters, and the\n      parameter name is the field path in the request message. A repeated\n      field can be represented as multiple query parameters under the same\n      name.\n  2. If [HttpRule.body][google.api.HttpRule.body] is \"*\", there is no URL\n  query parameter, all fields\n     are passed via URL path and HTTP request body.\n  3. If [HttpRule.body][google.api.HttpRule.body] is omitted, there is no HTTP\n  request body, all\n     fields are passed via URL path and URL query parameters.\n\n ### Path template syntax\n\n     Template = \"/\" Segments [ Verb ] ;\n     Segments = Segment { \"/\" Segment } ;\n     Segment  = \"*\" | \"**\" | LITERAL | Variable ;\n     Variable = \"{\" FieldPath [ \"=\" Segments ] \"}\" ;\n     FieldPath = IDENT { \".\" IDENT } ;\n     Verb     = \":\" LITERAL ;\n\n The syntax `*` matches a single URL path segment. The syntax `**` matches\n zero or more URL path segments, which must be the last part of the URL path\n except the `Verb`.\n\n The syntax `Variable` matches part of the URL path as specified by its\n template. A variable template must not contain other variables. If a variable\n matches a single path segment, its template may be omitted, e.g. `{var}`\n is equivalent to `{var=*}`.\n\n The syntax `LITERAL` matches literal text in the URL path. If the `LITERAL`\n contains any reserved character, such characters should be percent-encoded\n before the matching.\n\n If a variable contains exactly one path segment, such as `\"{var}\"` or\n `\"{var=*}\"`, when such a variable is expanded into a URL path on the client\n side, all characters except `[-_.~0-9a-zA-Z]` are percent-encoded. The\n server side does the reverse decoding. Such variables show up in the\n [Discovery\n Document](https://developers.google.com/discovery/v1/reference/apis) as\n `{var}`.\n\n If a variable contains multiple path segments, such as `\"{var=foo/*}\"`\n or `\"{var=**}\"`, when such a variable is expanded into a URL path on the\n client side, all characters except `[-_.~/0-9a-zA-Z]` are percent-encoded.\n The server side does the reverse decoding, except \"%2F\" and \"%2f\" are left\n unchanged. Such variables show up in the\n [Discovery\n Document](https://developers.google.com/discovery/v1/reference/apis) as\n `{+var}`.\n\n ## Using gRPC API Service Configuration\n\n gRPC API Service Configuration (service config) is a configuration language\n for configuring a gRPC service to become a user-facing product. The\n service config is simply the YAML representation of the `google.api.Service`\n proto message.\n\n As an alternative to annotating your proto file, you can configure gRPC\n transcoding in your service config YAML files. You do this by specifying a\n `HttpRule` that maps the gRPC method to a REST endpoint, achieving the same\n effect as the proto annotation. This can be particularly useful if you\n have a proto that is reused in multiple services. Note that any transcoding\n specified in the service config will override any matching transcoding\n configuration in the proto.\n\n Example:\n\n     http:\n       rules:\n         # Selects a gRPC method and applies HttpRule to it.\n         - selector: example.v1.Messaging.GetMessage\n           get: /v1/messages/{message_id}/{sub.subfield}\n\n ## Special notes\n\n When gRPC Transcoding is used to map a gRPC to JSON REST endpoints, the\n proto to JSON conversion must follow the [proto3\n specification](https://developers.google.com/protocol-buffers/docs/proto3#json).\n\n While the single segment variable follows the semantics of\n [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String\n Expansion, the multi segment variable **does not** follow RFC 6570 Section\n 3.2.3 Reserved Expansion. The reason is that the Reserved Expansion\n does not expand special characters like `?` and `#`, which would lead\n to invalid URLs. As the result, gRPC Transcoding uses a custom encoding\n for multi segment variables.\n\n The path variables **must not** refer to any repeated or mapped field,\n because client libraries are not capable of handling such variable expansion.\n\n The path variables **must not** capture the leading \"/\" character. The reason\n is that the most common use case \"{var}\" does not capture the leading \"/\"\n character. For consistency, all path variables must share the same behavior.\n\n Repeated message fields must not be mapped to URL query parameters, because\n no client library can support such complicated mapping.\n\n If an API needs to use a JSON array for request or response body, it can map\n the request or response body to a repeated field. However, some gRPC\n Transcoding implementations may not support this feature.\n"},{"path":[4,1,1],"span":[315,8,16]},{"path":[4,1,2,0],"span":[320,2,22],"leadingComments":" Selects a method to which this rule applies.\n\n Refer to [selector][google.api.DocumentationRule.selector] for syntax\n details.\n"},{"path":[4,1,2,0,5],"span":[320,2,8]},{"path":[4,1,2,0,1],"span":[320,9,17]},{"path":[4,1,2,0,3],"span":[320,20,21]},{"path":[4,1,8,0],"span":[325,2,347,3],"leadingComments":" Determines the URL pattern is matched by this rules. This pattern can be\n used with any of the {get|put|post|delete|patch} methods. A custom method\n can be defined using the 'custom' field.\n"},{"path":[4,1,8,0,1],"span":[325,8,15]},{"path":[4,1,2,1],"span":[328,4,19],"leadingComments":" Maps to HTTP GET. Used for listing and getting information about\n resources.\n"},{"path":[4,1,2,1,5],"span":[328,4,10]},{"path":[4,1,2,1,1],"span":[328,11,14]},{"path":[4,1,2,1,3],"span":[328,17,18]},{"path":[4,1,2,2],"span":[331,4,19],"leadingComments":" Maps to HTTP PUT. Used for replacing a resource.\n"},{"path":[4,1,2,2,5],"span":[331,4,10]},{"path":[4,1,2,2,1],"span":[331,11,14]},{"path":[4,1,2,2,3],"span":[331,17,18]},{"path":[4,1,2,3],"span":[334,4,20],"leadingComments":" Maps to HTTP POST. Used for creating a resource or performing an action.\n"},{"path":[4,1,2,3,5],"span":[334,4,10]},{"path":[4,1,2,3,1],"span":[334,11,15]},{"path":[4,1,2,3,3],"span":[334,18,19]},{"path":[4,1,2,4],"span":[337,4,22],"leadingComments":" Maps to HTTP DELETE. Used for deleting a resource.\n"},{"path":[4,1,2,4,5],"span":[337,4,10]},{"path":[4,1,2,4,1],"span":[337,11,17]},{"path":[4,1,2,4,3],"span":[337,20,21]},{"path":[4,1,2,5],"span":[340,4,21],"leadingComments":" Maps to HTTP PATCH. Used for updating a resource.\n"},{"path":[4,1,2,5,5],"span":[340,4,10]},{"path":[4,1,2,5,1],"span":[340,11,16]},{"path":[4,1,2,5,3],"span":[340,19,20]},{"path":[4,1,2,6],"span":[346,4,33],"leadingComments":" The custom pattern is used for specifying an HTTP method that is not\n included in the `pattern` field, such as HEAD, or \"*\" to leave the\n HTTP method unspecified for this rule. The wild-card rule is useful\n for services that provide content to Web (HTML) clients.\n"},{"path":[4,1,2,6,6],"span":[346,4,21]},{"path":[4,1,2,6,1],"span":[346,22,28]},{"path":[4,1,2,6,3],"span":[346,31,32]},{"path":[4,1,2,7],"span":[355,2,18],"leadingComments":" The name of the request field whose value is mapped to the HTTP request\n body, or `*` for mapping all request fields not captured by the path\n pattern to the HTTP body, or omitted for not having any HTTP request body.\n\n NOTE: the referred field must be present at the top-level of the request\n message type.\n"},{"path":[4,1,2,7,5],"span":[355,2,8]},{"path":[4,1,2,7,1],"span":[355,9,13]},{"path":[4,1,2,7,3],"span":[355,16,17]},{"path":[4,1,2,8],"span":[363,2,28],"leadingComments":" Optional. The name of the response field whose value is mapped to the HTTP\n response body. When omitted, the entire response message will be used\n as the HTTP response body.\n\n NOTE: The referred field must be present at the top-level of the response\n message type.\n"},{"path":[4,1,2,8,5],"span":[363,2,8]},{"path":[4,1,2,8,1],"span":[363,9,22]},{"path":[4,1,2,8,3],"span":[363,25,27]},{"path":[4,1,2,9],"span":[368,2,45],"leadingComments":" Additional HTTP bindings for the selector. Nested bindings must\n not contain an `additional_bindings` field themselves (that is,\n the nesting may only be one level deep).\n"},{"path":[4,1,2,9,4],"span":[368,2,10]},{"path":[4,1,2,9,6],"span":[368,11,19]},{"path":[4,1,2,9,1],"span":[368,20,39]},{"path":[4,1,2,9,3],"span":[368,42,44]},{"path":[4,2],"span":[372,0,378,1],"leadingComments":" A custom pattern is used for defining custom HTTP verb.\n"},{"path":[4,2,1],"span":[372,8,25]},{"path":[4,2,2,0],"span":[374,2,18],"leadingComments":" The name of this custom HTTP verb.\n"},{"path":[4,2,2,0,5],"span":[374,2,8]},{"path":[4,2,2,0,1],"span":[374,9,13]},{"path":[4,2,2,0,3],"span":[374,16,17]},{"path":[4,2,2,1],"span":[377,2,18],"leadingComments":" The path matched by this custom verb.\n"},{"path":[4,2,2,1,5],"span":[377,2,8]},{"path":[4,2,2,1,1],"span":[377,9,13]},{"path":[4,2,2,1,3],"span":[377,16,17]}]},"syntax":"proto3","bufExtension":{"isImport":true,"moduleInfo":{"name":{"remote":"buf.build","owner":"googleapis","repository":"googleapis"},"commit":"cc916c31859748a68fd229a3c8d7a2e8"},"isSyntaxUnspecified":false}},{"name":"google/protobuf/descriptor.proto","package":"google.protobuf","messageType":[{"name":"FileDescriptorSet","field":[{"name":"file","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.FileDescriptorProto","jsonName":"file"}]},{"name":"FileDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"package","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"package"},{"name":"dependency","number":3,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"dependency"},{"name":"public_dependency","number":10,"label":"LABEL_REPEATED","type":"TYPE_INT32","jsonName":"publicDependency"},{"name":"weak_dependency","number":11,"label":"LABEL_REPEATED","type":"TYPE_INT32","jsonName":"weakDependency"},{"name":"message_type","number":4,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.DescriptorProto","jsonName":"messageType"},{"name":"enum_type","number":5,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumDescriptorProto","jsonName":"enumType"},{"name":"service","number":6,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.ServiceDescriptorProto","jsonName":"service"},{"name":"extension","number":7,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.FieldDescriptorProto","jsonName":"extension"},{"name":"options","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.FileOptions","jsonName":"options"},{"name":"source_code_info","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.SourceCodeInfo","jsonName":"sourceCodeInfo"},{"name":"syntax","number":12,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"syntax"},{"name":"edition","number":13,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"edition"}]},{"name":"DescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"field","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.FieldDescriptorProto","jsonName":"field"},{"name":"extension","number":6,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.FieldDescriptorProto","jsonName":"extension"},{"name":"nested_type","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.DescriptorProto","jsonName":"nestedType"},{"name":"enum_type","number":4,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumDescriptorProto","jsonName":"enumType"},{"name":"extension_range","number":5,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.DescriptorProto.ExtensionRange","jsonName":"extensionRange"},{"name":"oneof_decl","number":8,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.OneofDescriptorProto","jsonName":"oneofDecl"},{"name":"options","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.MessageOptions","jsonName":"options"},{"name":"reserved_range","number":9,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.DescriptorProto.ReservedRange","jsonName":"reservedRange"},{"name":"reserved_name","number":10,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"reservedName"}],"nestedType":[{"name":"ExtensionRange","field":[{"name":"start","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"start"},{"name":"end","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"end"},{"name":"options","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.ExtensionRangeOptions","jsonName":"options"}]},{"name":"ReservedRange","field":[{"name":"start","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"start"},{"name":"end","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"end"}]}]},{"name":"ExtensionRangeOptions","field":[{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}]},{"name":"FieldDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"number","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"number"},{"name":"label","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FieldDescriptorProto.Label","jsonName":"label"},{"name":"type","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FieldDescriptorProto.Type","jsonName":"type"},{"name":"type_name","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"typeName"},{"name":"extendee","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"extendee"},{"name":"default_value","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"defaultValue"},{"name":"oneof_index","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"oneofIndex"},{"name":"json_name","number":10,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"jsonName"},{"name":"options","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.FieldOptions","jsonName":"options"},{"name":"proto3_optional","number":17,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"proto3Optional"}],"enumType":[{"name":"Type","value":[{"name":"TYPE_DOUBLE","number":1},{"name":"TYPE_FLOAT","number":2},{"name":"TYPE_INT64","number":3},{"name":"TYPE_UINT64","number":4},{"name":"TYPE_INT32","number":5},{"name":"TYPE_FIXED64","number":6},{"name":"TYPE_FIXED32","number":7},{"name":"TYPE_BOOL","number":8},{"name":"TYPE_STRING","number":9},{"name":"TYPE_GROUP","number":10},{"name":"TYPE_MESSAGE","number":11},{"name":"TYPE_BYTES","number":12},{"name":"TYPE_UINT32","number":13},{"name":"TYPE_ENUM","number":14},{"name":"TYPE_SFIXED32","number":15},{"name":"TYPE_SFIXED64","number":16},{"name":"TYPE_SINT32","number":17},{"name":"TYPE_SINT64","number":18}]},{"name":"Label","value":[{"name":"LABEL_OPTIONAL","number":1},{"name":"LABEL_REQUIRED","number":2},{"name":"LABEL_REPEATED","number":3}]}]},{"name":"OneofDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"options","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.OneofOptions","jsonName":"options"}]},{"name":"EnumDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"value","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumValueDescriptorProto","jsonName":"value"},{"name":"options","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumOptions","jsonName":"options"},{"name":"reserved_range","number":4,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumDescriptorProto.EnumReservedRange","jsonName":"reservedRange"},{"name":"reserved_name","number":5,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"reservedName"}],"nestedType":[{"name":"EnumReservedRange","field":[{"name":"start","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"start"},{"name":"end","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"end"}]}]},{"name":"EnumValueDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"number","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"number"},{"name":"options","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumValueOptions","jsonName":"options"}]},{"name":"ServiceDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"method","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.MethodDescriptorProto","jsonName":"method"},{"name":"options","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.ServiceOptions","jsonName":"options"}]},{"name":"MethodDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"input_type","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"inputType"},{"name":"output_type","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"outputType"},{"name":"options","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.MethodOptions","jsonName":"options"},{"name":"client_streaming","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"clientStreaming"},{"name":"server_streaming","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"serverStreaming"}]},{"name":"FileOptions","field":[{"name":"java_package","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"javaPackage"},{"name":"java_outer_classname","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"javaOuterClassname"},{"name":"java_multiple_files","number":10,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"javaMultipleFiles"},{"name":"java_generate_equals_and_hash","number":20,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"javaGenerateEqualsAndHash","options":{"deprecated":true}},{"name":"java_string_check_utf8","number":27,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"javaStringCheckUtf8"},{"name":"optimize_for","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FileOptions.OptimizeMode","defaultValue":"SPEED","jsonName":"optimizeFor"},{"name":"go_package","number":11,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"goPackage"},{"name":"cc_generic_services","number":16,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"ccGenericServices"},{"name":"java_generic_services","number":17,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"javaGenericServices"},{"name":"py_generic_services","number":18,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"pyGenericServices"},{"name":"php_generic_services","number":42,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"phpGenericServices"},{"name":"deprecated","number":23,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"cc_enable_arenas","number":31,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"true","jsonName":"ccEnableArenas"},{"name":"objc_class_prefix","number":36,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"objcClassPrefix"},{"name":"csharp_namespace","number":37,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"csharpNamespace"},{"name":"swift_prefix","number":39,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"swiftPrefix"},{"name":"php_class_prefix","number":40,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"phpClassPrefix"},{"name":"php_namespace","number":41,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"phpNamespace"},{"name":"php_metadata_namespace","number":44,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"phpMetadataNamespace"},{"name":"ruby_package","number":45,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"rubyPackage"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"enumType":[{"name":"OptimizeMode","value":[{"name":"SPEED","number":1},{"name":"CODE_SIZE","number":2},{"name":"LITE_RUNTIME","number":3}]}],"extensionRange":[{"start":1000,"end":536870912}],"reservedRange":[{"start":38,"end":39}]},{"name":"MessageOptions","field":[{"name":"message_set_wire_format","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"messageSetWireFormat"},{"name":"no_standard_descriptor_accessor","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"noStandardDescriptorAccessor"},{"name":"deprecated","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"map_entry","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"mapEntry"},{"name":"deprecated_legacy_json_field_conflicts","number":11,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"deprecatedLegacyJsonFieldConflicts","options":{"deprecated":true}},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}],"reservedRange":[{"start":4,"end":5},{"start":5,"end":6},{"start":6,"end":7},{"start":8,"end":9},{"start":9,"end":10}]},{"name":"FieldOptions","field":[{"name":"ctype","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FieldOptions.CType","defaultValue":"STRING","jsonName":"ctype"},{"name":"packed","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"packed"},{"name":"jstype","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FieldOptions.JSType","defaultValue":"JS_NORMAL","jsonName":"jstype"},{"name":"lazy","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"lazy"},{"name":"unverified_lazy","number":15,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"unverifiedLazy"},{"name":"deprecated","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"weak","number":10,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"weak"},{"name":"debug_redact","number":16,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"debugRedact"},{"name":"retention","number":17,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FieldOptions.OptionRetention","jsonName":"retention"},{"name":"target","number":18,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FieldOptions.OptionTargetType","jsonName":"target"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"enumType":[{"name":"CType","value":[{"name":"STRING","number":0},{"name":"CORD","number":1},{"name":"STRING_PIECE","number":2}]},{"name":"JSType","value":[{"name":"JS_NORMAL","number":0},{"name":"JS_STRING","number":1},{"name":"JS_NUMBER","number":2}]},{"name":"OptionRetention","value":[{"name":"RETENTION_UNKNOWN","number":0},{"name":"RETENTION_RUNTIME","number":1},{"name":"RETENTION_SOURCE","number":2}]},{"name":"OptionTargetType","value":[{"name":"TARGET_TYPE_UNKNOWN","number":0},{"name":"TARGET_TYPE_FILE","number":1},{"name":"TARGET_TYPE_EXTENSION_RANGE","number":2},{"name":"TARGET_TYPE_MESSAGE","number":3},{"name":"TARGET_TYPE_FIELD","number":4},{"name":"TARGET_TYPE_ONEOF","number":5},{"name":"TARGET_TYPE_ENUM","number":6},{"name":"TARGET_TYPE_ENUM_ENTRY","number":7},{"name":"TARGET_TYPE_SERVICE","number":8},{"name":"TARGET_TYPE_METHOD","number":9}]}],"extensionRange":[{"start":1000,"end":536870912}],"reservedRange":[{"start":4,"end":5}]},{"name":"OneofOptions","field":[{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}]},{"name":"EnumOptions","field":[{"name":"allow_alias","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"allowAlias"},{"name":"deprecated","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"deprecated_legacy_json_field_conflicts","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"deprecatedLegacyJsonFieldConflicts","options":{"deprecated":true}},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}],"reservedRange":[{"start":5,"end":6}]},{"name":"EnumValueOptions","field":[{"name":"deprecated","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}]},{"name":"ServiceOptions","field":[{"name":"deprecated","number":33,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}]},{"name":"MethodOptions","field":[{"name":"deprecated","number":33,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"idempotency_level","number":34,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.MethodOptions.IdempotencyLevel","defaultValue":"IDEMPOTENCY_UNKNOWN","jsonName":"idempotencyLevel"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"enumType":[{"name":"IdempotencyLevel","value":[{"name":"IDEMPOTENCY_UNKNOWN","number":0},{"name":"NO_SIDE_EFFECTS","number":1},{"name":"IDEMPOTENT","number":2}]}],"extensionRange":[{"start":1000,"end":536870912}]},{"name":"UninterpretedOption","field":[{"name":"name","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption.NamePart","jsonName":"name"},{"name":"identifier_value","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"identifierValue"},{"name":"positive_int_value","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_UINT64","jsonName":"positiveIntValue"},{"name":"negative_int_value","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"negativeIntValue"},{"name":"double_value","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_DOUBLE","jsonName":"doubleValue"},{"name":"string_value","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_BYTES","jsonName":"stringValue"},{"name":"aggregate_value","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"aggregateValue"}],"nestedType":[{"name":"NamePart","field":[{"name":"name_part","number":1,"label":"LABEL_REQUIRED","type":"TYPE_STRING","jsonName":"namePart"},{"name":"is_extension","number":2,"label":"LABEL_REQUIRED","type":"TYPE_BOOL","jsonName":"isExtension"}]}]},{"name":"SourceCodeInfo","field":[{"name":"location","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.SourceCodeInfo.Location","jsonName":"location"}],"nestedType":[{"name":"Location","field":[{"name":"path","number":1,"label":"LABEL_REPEATED","type":"TYPE_INT32","jsonName":"path","options":{"packed":true}},{"name":"span","number":2,"label":"LABEL_REPEATED","type":"TYPE_INT32","jsonName":"span","options":{"packed":true}},{"name":"leading_comments","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"leadingComments"},{"name":"trailing_comments","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"trailingComments"},{"name":"leading_detached_comments","number":6,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"leadingDetachedComments"}]}]},{"name":"GeneratedCodeInfo","field":[{"name":"annotation","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.GeneratedCodeInfo.Annotation","jsonName":"annotation"}],"nestedType":[{"name":"Annotation","field":[{"name":"path","number":1,"label":"LABEL_REPEATED","type":"TYPE_INT32","jsonName":"path","options":{"packed":true}},{"name":"source_file","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"sourceFile"},{"name":"begin","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"begin"},{"name":"end","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"end"},{"name":"semantic","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.GeneratedCodeInfo.Annotation.Semantic","jsonName":"semantic"}],"enumType":[{"name":"Semantic","value":[{"name":"NONE","number":0},{"name":"SET","number":1},{"name":"ALIAS","number":2}]}]}]}],"options":{"javaPackage":"com.google.protobuf","javaOuterClassname":"DescriptorProtos","optimizeFor":"SPEED","goPackage":"google.golang.org/protobuf/types/descriptorpb","ccEnableArenas":true,"objcClassPrefix":"GPB","csharpNamespace":"Google.Protobuf.Reflection"},"sourceCodeInfo":{"location":[{"span":[38,0,974,1]},{"path":[12],"span":[38,0,18],"leadingDetachedComments":[" Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"," Author: kenton@google.com (Kenton Varda)\n  Based on original Protocol Buffers design by\n  Sanjay Ghemawat, Jeff Dean, and others.\n\n The messages in this file describe the definitions found in .proto files.\n A valid .proto file can be translated directly to a FileDescriptorProto\n without any other information (e.g. without reading its imports).\n"]},{"path":[2],"span":[40,0,24]},{"path":[8],"span":[42,0,68]},{"path":[8,11],"span":[42,0,68]},{"path":[8],"span":[43,0,44]},{"path":[8,1],"span":[43,0,44]},{"path":[8],"span":[44,0,49]},{"path":[8,8],"span":[44,0,49]},{"path":[8],"span":[45,0,55]},{"path":[8,37],"span":[45,0,55]},{"path":[8],"span":[46,0,33]},{"path":[8,36],"span":[46,0,33]},{"path":[8],"span":[47,0,31]},{"path":[8,31],"span":[47,0,31]},{"path":[8],"span":[51,0,28]},{"path":[8,9],"span":[51,0,28],"leadingComments":" descriptor.proto must be optimized for speed because reflection-based\n algorithms don't work during bootstrapping.\n"},{"path":[4,0],"span":[55,0,57,1],"leadingComments":" The protocol compiler can output a FileDescriptorSet containing the .proto\n files it parses.\n"},{"path":[4,0,1],"span":[55,8,25]},{"path":[4,0,2,0],"span":[56,2,40]},{"path":[4,0,2,0,4],"span":[56,2,10]},{"path":[4,0,2,0,6],"span":[56,11,30]},{"path":[4,0,2,0,1],"span":[56,31,35]},{"path":[4,0,2,0,3],"span":[56,38,39]},{"path":[4,1],"span":[60,0,94,1],"leadingComments":" Describes a complete .proto file.\n"},{"path":[4,1,1],"span":[60,8,27]},{"path":[4,1,2,0],"span":[61,2,27],"trailingComments":" file name, relative to root of source tree\n"},{"path":[4,1,2,0,4],"span":[61,2,10]},{"path":[4,1,2,0,5],"span":[61,11,17]},{"path":[4,1,2,0,1],"span":[61,18,22]},{"path":[4,1,2,0,3],"span":[61,25,26]},{"path":[4,1,2,1],"span":[62,2,30],"trailingComments":" e.g. \"foo\", \"foo.bar\", etc.\n"},{"path":[4,1,2,1,4],"span":[62,2,10]},{"path":[4,1,2,1,5],"span":[62,11,17]},{"path":[4,1,2,1,1],"span":[62,18,25]},{"path":[4,1,2,1,3],"span":[62,28,29]},{"path":[4,1,2,2],"span":[65,2,33],"leadingComments":" Names of files imported by this file.\n"},{"path":[4,1,2,2,4],"span":[65,2,10]},{"path":[4,1,2,2,5],"span":[65,11,17]},{"path":[4,1,2,2,1],"span":[65,18,28]},{"path":[4,1,2,2,3],"span":[65,31,32]},{"path":[4,1,2,3],"span":[67,2,40],"leadingComments":" Indexes of the public imported files in the dependency list above.\n"},{"path":[4,1,2,3,4],"span":[67,2,10]},{"path":[4,1,2,3,5],"span":[67,11,16]},{"path":[4,1,2,3,1],"span":[67,17,34]},{"path":[4,1,2,3,3],"span":[67,37,39]},{"path":[4,1,2,4],"span":[70,2,38],"leadingComments":" Indexes of the weak imported files in the dependency list.\n For Google-internal migration only. Do not use.\n"},{"path":[4,1,2,4,4],"span":[70,2,10]},{"path":[4,1,2,4,5],"span":[70,11,16]},{"path":[4,1,2,4,1],"span":[70,17,32]},{"path":[4,1,2,4,3],"span":[70,35,37]},{"path":[4,1,2,5],"span":[73,2,44],"leadingComments":" All top-level definitions in this file.\n"},{"path":[4,1,2,5,4],"span":[73,2,10]},{"path":[4,1,2,5,6],"span":[73,11,26]},{"path":[4,1,2,5,1],"span":[73,27,39]},{"path":[4,1,2,5,3],"span":[73,42,43]},{"path":[4,1,2,6],"span":[74,2,45]},{"path":[4,1,2,6,4],"span":[74,2,10]},{"path":[4,1,2,6,6],"span":[74,11,30]},{"path":[4,1,2,6,1],"span":[74,31,40]},{"path":[4,1,2,6,3],"span":[74,43,44]},{"path":[4,1,2,7],"span":[75,2,46]},{"path":[4,1,2,7,4],"span":[75,2,10]},{"path":[4,1,2,7,6],"span":[75,11,33]},{"path":[4,1,2,7,1],"span":[75,34,41]},{"path":[4,1,2,7,3],"span":[75,44,45]},{"path":[4,1,2,8],"span":[76,2,46]},{"path":[4,1,2,8,4],"span":[76,2,10]},{"path":[4,1,2,8,6],"span":[76,11,31]},{"path":[4,1,2,8,1],"span":[76,32,41]},{"path":[4,1,2,8,3],"span":[76,44,45]},{"path":[4,1,2,9],"span":[78,2,35]},{"path":[4,1,2,9,4],"span":[78,2,10]},{"path":[4,1,2,9,6],"span":[78,11,22]},{"path":[4,1,2,9,1],"span":[78,23,30]},{"path":[4,1,2,9,3],"span":[78,33,34]},{"path":[4,1,2,10],"span":[84,2,47],"leadingComments":" This field contains optional information about the original source code.\n You may safely remove this entire field without harming runtime\n functionality of the descriptors -- the information is needed only by\n development tools.\n"},{"path":[4,1,2,10,4],"span":[84,2,10]},{"path":[4,1,2,10,6],"span":[84,11,25]},{"path":[4,1,2,10,1],"span":[84,26,42]},{"path":[4,1,2,10,3],"span":[84,45,46]},{"path":[4,1,2,11],"span":[90,2,30],"leadingComments":" The syntax of the proto file.\n The supported values are \"proto2\", \"proto3\", and \"editions\".\n\n If `edition` is present, this value must be \"editions\".\n"},{"path":[4,1,2,11,4],"span":[90,2,10]},{"path":[4,1,2,11,5],"span":[90,11,17]},{"path":[4,1,2,11,1],"span":[90,18,24]},{"path":[4,1,2,11,3],"span":[90,27,29]},{"path":[4,1,2,12],"span":[93,2,31],"leadingComments":" The edition of the proto file, which is an opaque string.\n"},{"path":[4,1,2,12,4],"span":[93,2,10]},{"path":[4,1,2,12,5],"span":[93,11,17]},{"path":[4,1,2,12,1],"span":[93,18,25]},{"path":[4,1,2,12,3],"span":[93,28,30]},{"path":[4,2],"span":[97,0,129,1],"leadingComments":" Describes a message type.\n"},{"path":[4,2,1],"span":[97,8,23]},{"path":[4,2,2,0],"span":[98,2,27]},{"path":[4,2,2,0,4],"span":[98,2,10]},{"path":[4,2,2,0,5],"span":[98,11,17]},{"path":[4,2,2,0,1],"span":[98,18,22]},{"path":[4,2,2,0,3],"span":[98,25,26]},{"path":[4,2,2,1],"span":[100,2,42]},{"path":[4,2,2,1,4],"span":[100,2,10]},{"path":[4,2,2,1,6],"span":[100,11,31]},{"path":[4,2,2,1,1],"span":[100,32,37]},{"path":[4,2,2,1,3],"span":[100,40,41]},{"path":[4,2,2,2],"span":[101,2,46]},{"path":[4,2,2,2,4],"span":[101,2,10]},{"path":[4,2,2,2,6],"span":[101,11,31]},{"path":[4,2,2,2,1],"span":[101,32,41]},{"path":[4,2,2,2,3],"span":[101,44,45]},{"path":[4,2,2,3],"span":[103,2,43]},{"path":[4,2,2,3,4],"span":[103,2,10]},{"path":[4,2,2,3,6],"span":[103,11,26]},{"path":[4,2,2,3,1],"span":[103,27,38]},{"path":[4,2,2,3,3],"span":[103,41,42]},{"path":[4,2,2,4],"span":[104,2,45]},{"path":[4,2,2,4,4],"span":[104,2,10]},{"path":[4,2,2,4,6],"span":[104,11,30]},{"path":[4,2,2,4,1],"span":[104,31,40]},{"path":[4,2,2,4,3],"span":[104,43,44]},{"path":[4,2,3,0],"span":[106,2,111,3]},{"path":[4,2,3,0,1],"span":[106,10,24]},{"path":[4,2,3,0,2,0],"span":[107,4,29],"trailingComments":" Inclusive.\n"},{"path":[4,2,3,0,2,0,4],"span":[107,4,12]},{"path":[4,2,3,0,2,0,5],"span":[107,13,18]},{"path":[4,2,3,0,2,0,1],"span":[107,19,24]},{"path":[4,2,3,0,2,0,3],"span":[107,27,28]},{"path":[4,2,3,0,2,1],"span":[108,4,27],"trailingComments":" Exclusive.\n"},{"path":[4,2,3,0,2,1,4],"span":[108,4,12]},{"path":[4,2,3,0,2,1,5],"span":[108,13,18]},{"path":[4,2,3,0,2,1,1],"span":[108,19,22]},{"path":[4,2,3,0,2,1,3],"span":[108,25,26]},{"path":[4,2,3,0,2,2],"span":[110,4,47]},{"path":[4,2,3,0,2,2,4],"span":[110,4,12]},{"path":[4,2,3,0,2,2,6],"span":[110,13,34]},{"path":[4,2,3,0,2,2,1],"span":[110,35,42]},{"path":[4,2,3,0,2,2,3],"span":[110,45,46]},{"path":[4,2,2,5],"span":[112,2,46]},{"path":[4,2,2,5,4],"span":[112,2,10]},{"path":[4,2,2,5,6],"span":[112,11,25]},{"path":[4,2,2,5,1],"span":[112,26,41]},{"path":[4,2,2,5,3],"span":[112,44,45]},{"path":[4,2,2,6],"span":[114,2,47]},{"path":[4,2,2,6,4],"span":[114,2,10]},{"path":[4,2,2,6,6],"span":[114,11,31]},{"path":[4,2,2,6,1],"span":[114,32,42]},{"path":[4,2,2,6,3],"span":[114,45,46]},{"path":[4,2,2,7],"span":[116,2,38]},{"path":[4,2,2,7,4],"span":[116,2,10]},{"path":[4,2,2,7,6],"span":[116,11,25]},{"path":[4,2,2,7,1],"span":[116,26,33]},{"path":[4,2,2,7,3],"span":[116,36,37]},{"path":[4,2,3,1],"span":[121,2,124,3],"leadingComments":" Range of reserved tag numbers. Reserved tag numbers may not be used by\n fields or extension ranges in the same message. Reserved ranges may\n not overlap.\n"},{"path":[4,2,3,1,1],"span":[121,10,23]},{"path":[4,2,3,1,2,0],"span":[122,4,29],"trailingComments":" Inclusive.\n"},{"path":[4,2,3,1,2,0,4],"span":[122,4,12]},{"path":[4,2,3,1,2,0,5],"span":[122,13,18]},{"path":[4,2,3,1,2,0,1],"span":[122,19,24]},{"path":[4,2,3,1,2,0,3],"span":[122,27,28]},{"path":[4,2,3,1,2,1],"span":[123,4,27],"trailingComments":" Exclusive.\n"},{"path":[4,2,3,1,2,1,4],"span":[123,4,12]},{"path":[4,2,3,1,2,1,5],"span":[123,13,18]},{"path":[4,2,3,1,2,1,1],"span":[123,19,22]},{"path":[4,2,3,1,2,1,3],"span":[123,25,26]},{"path":[4,2,2,8],"span":[125,2,44]},{"path":[4,2,2,8,4],"span":[125,2,10]},{"path":[4,2,2,8,6],"span":[125,11,24]},{"path":[4,2,2,8,1],"span":[125,25,39]},{"path":[4,2,2,8,3],"span":[125,42,43]},{"path":[4,2,2,9],"span":[128,2,37],"leadingComments":" Reserved field names, which may not be used by fields in the same message.\n A given name may only be reserved once.\n"},{"path":[4,2,2,9,4],"span":[128,2,10]},{"path":[4,2,2,9,5],"span":[128,11,17]},{"path":[4,2,2,9,1],"span":[128,18,31]},{"path":[4,2,2,9,3],"span":[128,34,36]},{"path":[4,3],"span":[131,0,137,1]},{"path":[4,3,1],"span":[131,8,29]},{"path":[4,3,2,0],"span":[133,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,3,2,0,4],"span":[133,2,10]},{"path":[4,3,2,0,6],"span":[133,11,30]},{"path":[4,3,2,0,1],"span":[133,31,51]},{"path":[4,3,2,0,3],"span":[133,54,57]},{"path":[4,3,5],"span":[136,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,3,5,0],"span":[136,13,24]},{"path":[4,3,5,0,1],"span":[136,13,17]},{"path":[4,3,5,0,2],"span":[136,21,24]},{"path":[4,4],"span":[140,0,240,1],"leadingComments":" Describes a field within a message.\n"},{"path":[4,4,1],"span":[140,8,28]},{"path":[4,4,4,0],"span":[141,2,172,3]},{"path":[4,4,4,0,1],"span":[141,7,11]},{"path":[4,4,4,0,2,0],"span":[144,4,20],"leadingComments":" 0 is reserved for errors.\n Order is weird for historical reasons.\n"},{"path":[4,4,4,0,2,0,1],"span":[144,4,15]},{"path":[4,4,4,0,2,0,2],"span":[144,18,19]},{"path":[4,4,4,0,2,1],"span":[145,4,19]},{"path":[4,4,4,0,2,1,1],"span":[145,4,14]},{"path":[4,4,4,0,2,1,2],"span":[145,17,18]},{"path":[4,4,4,0,2,2],"span":[148,4,19],"leadingComments":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n negative values are likely.\n"},{"path":[4,4,4,0,2,2,1],"span":[148,4,14]},{"path":[4,4,4,0,2,2,2],"span":[148,17,18]},{"path":[4,4,4,0,2,3],"span":[149,4,20]},{"path":[4,4,4,0,2,3,1],"span":[149,4,15]},{"path":[4,4,4,0,2,3,2],"span":[149,18,19]},{"path":[4,4,4,0,2,4],"span":[152,4,19],"leadingComments":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n negative values are likely.\n"},{"path":[4,4,4,0,2,4,1],"span":[152,4,14]},{"path":[4,4,4,0,2,4,2],"span":[152,17,18]},{"path":[4,4,4,0,2,5],"span":[153,4,21]},{"path":[4,4,4,0,2,5,1],"span":[153,4,16]},{"path":[4,4,4,0,2,5,2],"span":[153,19,20]},{"path":[4,4,4,0,2,6],"span":[154,4,21]},{"path":[4,4,4,0,2,6,1],"span":[154,4,16]},{"path":[4,4,4,0,2,6,2],"span":[154,19,20]},{"path":[4,4,4,0,2,7],"span":[155,4,18]},{"path":[4,4,4,0,2,7,1],"span":[155,4,13]},{"path":[4,4,4,0,2,7,2],"span":[155,16,17]},{"path":[4,4,4,0,2,8],"span":[156,4,20]},{"path":[4,4,4,0,2,8,1],"span":[156,4,15]},{"path":[4,4,4,0,2,8,2],"span":[156,18,19]},{"path":[4,4,4,0,2,9],"span":[161,4,20],"leadingComments":" Tag-delimited aggregate.\n Group type is deprecated and not supported in proto3. However, Proto3\n implementations should still be able to parse the group wire format and\n treat group fields as unknown fields.\n"},{"path":[4,4,4,0,2,9,1],"span":[161,4,14]},{"path":[4,4,4,0,2,9,2],"span":[161,17,19]},{"path":[4,4,4,0,2,10],"span":[162,4,22],"trailingComments":" Length-delimited aggregate.\n"},{"path":[4,4,4,0,2,10,1],"span":[162,4,16]},{"path":[4,4,4,0,2,10,2],"span":[162,19,21]},{"path":[4,4,4,0,2,11],"span":[165,4,20],"leadingComments":" New in version 2.\n"},{"path":[4,4,4,0,2,11,1],"span":[165,4,14]},{"path":[4,4,4,0,2,11,2],"span":[165,17,19]},{"path":[4,4,4,0,2,12],"span":[166,4,21]},{"path":[4,4,4,0,2,12,1],"span":[166,4,15]},{"path":[4,4,4,0,2,12,2],"span":[166,18,20]},{"path":[4,4,4,0,2,13],"span":[167,4,19]},{"path":[4,4,4,0,2,13,1],"span":[167,4,13]},{"path":[4,4,4,0,2,13,2],"span":[167,16,18]},{"path":[4,4,4,0,2,14],"span":[168,4,23]},{"path":[4,4,4,0,2,14,1],"span":[168,4,17]},{"path":[4,4,4,0,2,14,2],"span":[168,20,22]},{"path":[4,4,4,0,2,15],"span":[169,4,23]},{"path":[4,4,4,0,2,15,1],"span":[169,4,17]},{"path":[4,4,4,0,2,15,2],"span":[169,20,22]},{"path":[4,4,4,0,2,16],"span":[170,4,21],"trailingComments":" Uses ZigZag encoding.\n"},{"path":[4,4,4,0,2,16,1],"span":[170,4,15]},{"path":[4,4,4,0,2,16,2],"span":[170,18,20]},{"path":[4,4,4,0,2,17],"span":[171,4,21],"trailingComments":" Uses ZigZag encoding.\n"},{"path":[4,4,4,0,2,17,1],"span":[171,4,15]},{"path":[4,4,4,0,2,17,2],"span":[171,18,20]},{"path":[4,4,4,1],"span":[174,2,179,3]},{"path":[4,4,4,1,1],"span":[174,7,12]},{"path":[4,4,4,1,2,0],"span":[176,4,23],"leadingComments":" 0 is reserved for errors\n"},{"path":[4,4,4,1,2,0,1],"span":[176,4,18]},{"path":[4,4,4,1,2,0,2],"span":[176,21,22]},{"path":[4,4,4,1,2,1],"span":[177,4,23]},{"path":[4,4,4,1,2,1,1],"span":[177,4,18]},{"path":[4,4,4,1,2,1,2],"span":[177,21,22]},{"path":[4,4,4,1,2,2],"span":[178,4,23]},{"path":[4,4,4,1,2,2,1],"span":[178,4,18]},{"path":[4,4,4,1,2,2,2],"span":[178,21,22]},{"path":[4,4,2,0],"span":[181,2,27]},{"path":[4,4,2,0,4],"span":[181,2,10]},{"path":[4,4,2,0,5],"span":[181,11,17]},{"path":[4,4,2,0,1],"span":[181,18,22]},{"path":[4,4,2,0,3],"span":[181,25,26]},{"path":[4,4,2,1],"span":[182,2,28]},{"path":[4,4,2,1,4],"span":[182,2,10]},{"path":[4,4,2,1,5],"span":[182,11,16]},{"path":[4,4,2,1,1],"span":[182,17,23]},{"path":[4,4,2,1,3],"span":[182,26,27]},{"path":[4,4,2,2],"span":[183,2,27]},{"path":[4,4,2,2,4],"span":[183,2,10]},{"path":[4,4,2,2,6],"span":[183,11,16]},{"path":[4,4,2,2,1],"span":[183,17,22]},{"path":[4,4,2,2,3],"span":[183,25,26]},{"path":[4,4,2,3],"span":[187,2,25],"leadingComments":" If type_name is set, this need not be set.  If both this and type_name\n are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n"},{"path":[4,4,2,3,4],"span":[187,2,10]},{"path":[4,4,2,3,6],"span":[187,11,15]},{"path":[4,4,2,3,1],"span":[187,16,20]},{"path":[4,4,2,3,3],"span":[187,23,24]},{"path":[4,4,2,4],"span":[194,2,32],"leadingComments":" For message and enum types, this is the name of the type.  If the name\n starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n rules are used to find the type (i.e. first the nested types within this\n message are searched, then within the parent, on up to the root\n namespace).\n"},{"path":[4,4,2,4,4],"span":[194,2,10]},{"path":[4,4,2,4,5],"span":[194,11,17]},{"path":[4,4,2,4,1],"span":[194,18,27]},{"path":[4,4,2,4,3],"span":[194,30,31]},{"path":[4,4,2,5],"span":[198,2,31],"leadingComments":" For extensions, this is the name of the type being extended.  It is\n resolved in the same manner as type_name.\n"},{"path":[4,4,2,5,4],"span":[198,2,10]},{"path":[4,4,2,5,5],"span":[198,11,17]},{"path":[4,4,2,5,1],"span":[198,18,26]},{"path":[4,4,2,5,3],"span":[198,29,30]},{"path":[4,4,2,6],"span":[204,2,36],"leadingComments":" For numeric types, contains the original text representation of the value.\n For booleans, \"true\" or \"false\".\n For strings, contains the default text contents (not escaped in any way).\n For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n"},{"path":[4,4,2,6,4],"span":[204,2,10]},{"path":[4,4,2,6,5],"span":[204,11,17]},{"path":[4,4,2,6,1],"span":[204,18,31]},{"path":[4,4,2,6,3],"span":[204,34,35]},{"path":[4,4,2,7],"span":[208,2,33],"leadingComments":" If set, gives the index of a oneof in the containing type's oneof_decl\n list.  This field is a member of that oneof.\n"},{"path":[4,4,2,7,4],"span":[208,2,10]},{"path":[4,4,2,7,5],"span":[208,11,16]},{"path":[4,4,2,7,1],"span":[208,17,28]},{"path":[4,4,2,7,3],"span":[208,31,32]},{"path":[4,4,2,8],"span":[214,2,33],"leadingComments":" JSON name of this field. The value is set by protocol compiler. If the\n user has set a \"json_name\" option on this field, that option's value\n will be used. Otherwise, it's deduced from the field's name by converting\n it to camelCase.\n"},{"path":[4,4,2,8,4],"span":[214,2,10]},{"path":[4,4,2,8,5],"span":[214,11,17]},{"path":[4,4,2,8,1],"span":[214,18,27]},{"path":[4,4,2,8,3],"span":[214,30,32]},{"path":[4,4,2,9],"span":[216,2,36]},{"path":[4,4,2,9,4],"span":[216,2,10]},{"path":[4,4,2,9,6],"span":[216,11,23]},{"path":[4,4,2,9,1],"span":[216,24,31]},{"path":[4,4,2,9,3],"span":[216,34,35]},{"path":[4,4,2,10],"span":[239,2,37],"leadingComments":" If true, this is a proto3 \"optional\". When a proto3 field is optional, it\n tracks presence regardless of field type.\n\n When proto3_optional is true, this field must be belong to a oneof to\n signal to old proto3 clients that presence is tracked for this field. This\n oneof is known as a \"synthetic\" oneof, and this field must be its sole\n member (each proto3 optional field gets its own synthetic oneof). Synthetic\n oneofs exist in the descriptor only, and do not generate any API. Synthetic\n oneofs must be ordered after all \"real\" oneofs.\n\n For message fields, proto3_optional doesn't create any semantic change,\n since non-repeated message fields always track presence. However it still\n indicates the semantic detail of whether the user wrote \"optional\" or not.\n This can be useful for round-tripping the .proto file. For consistency we\n give message fields a synthetic oneof also, even though it is not required\n to track presence. This is especially important because the parser can't\n tell if a field is a message or an enum, so it must always create a\n synthetic oneof.\n\n Proto2 optional fields do not set this flag, because they already indicate\n optional with `LABEL_OPTIONAL`.\n"},{"path":[4,4,2,10,4],"span":[239,2,10]},{"path":[4,4,2,10,5],"span":[239,11,15]},{"path":[4,4,2,10,1],"span":[239,16,31]},{"path":[4,4,2,10,3],"span":[239,34,36]},{"path":[4,5],"span":[243,0,246,1],"leadingComments":" Describes a oneof.\n"},{"path":[4,5,1],"span":[243,8,28]},{"path":[4,5,2,0],"span":[244,2,27]},{"path":[4,5,2,0,4],"span":[244,2,10]},{"path":[4,5,2,0,5],"span":[244,11,17]},{"path":[4,5,2,0,1],"span":[244,18,22]},{"path":[4,5,2,0,3],"span":[244,25,26]},{"path":[4,5,2,1],"span":[245,2,36]},{"path":[4,5,2,1,4],"span":[245,2,10]},{"path":[4,5,2,1,6],"span":[245,11,23]},{"path":[4,5,2,1,1],"span":[245,24,31]},{"path":[4,5,2,1,3],"span":[245,34,35]},{"path":[4,6],"span":[249,0,275,1],"leadingComments":" Describes an enum type.\n"},{"path":[4,6,1],"span":[249,8,27]},{"path":[4,6,2,0],"span":[250,2,27]},{"path":[4,6,2,0,4],"span":[250,2,10]},{"path":[4,6,2,0,5],"span":[250,11,17]},{"path":[4,6,2,0,1],"span":[250,18,22]},{"path":[4,6,2,0,3],"span":[250,25,26]},{"path":[4,6,2,1],"span":[252,2,46]},{"path":[4,6,2,1,4],"span":[252,2,10]},{"path":[4,6,2,1,6],"span":[252,11,35]},{"path":[4,6,2,1,1],"span":[252,36,41]},{"path":[4,6,2,1,3],"span":[252,44,45]},{"path":[4,6,2,2],"span":[254,2,35]},{"path":[4,6,2,2,4],"span":[254,2,10]},{"path":[4,6,2,2,6],"span":[254,11,22]},{"path":[4,6,2,2,1],"span":[254,23,30]},{"path":[4,6,2,2,3],"span":[254,33,34]},{"path":[4,6,3,0],"span":[262,2,265,3],"leadingComments":" Range of reserved numeric values. Reserved values may not be used by\n entries in the same enum. Reserved ranges may not overlap.\n\n Note that this is distinct from DescriptorProto.ReservedRange in that it\n is inclusive such that it can appropriately represent the entire int32\n domain.\n"},{"path":[4,6,3,0,1],"span":[262,10,27]},{"path":[4,6,3,0,2,0],"span":[263,4,29],"trailingComments":" Inclusive.\n"},{"path":[4,6,3,0,2,0,4],"span":[263,4,12]},{"path":[4,6,3,0,2,0,5],"span":[263,13,18]},{"path":[4,6,3,0,2,0,1],"span":[263,19,24]},{"path":[4,6,3,0,2,0,3],"span":[263,27,28]},{"path":[4,6,3,0,2,1],"span":[264,4,27],"trailingComments":" Inclusive.\n"},{"path":[4,6,3,0,2,1,4],"span":[264,4,12]},{"path":[4,6,3,0,2,1,5],"span":[264,13,18]},{"path":[4,6,3,0,2,1,1],"span":[264,19,22]},{"path":[4,6,3,0,2,1,3],"span":[264,25,26]},{"path":[4,6,2,3],"span":[270,2,48],"leadingComments":" Range of reserved numeric values. Reserved numeric values may not be used\n by enum values in the same enum declaration. Reserved ranges may not\n overlap.\n"},{"path":[4,6,2,3,4],"span":[270,2,10]},{"path":[4,6,2,3,6],"span":[270,11,28]},{"path":[4,6,2,3,1],"span":[270,29,43]},{"path":[4,6,2,3,3],"span":[270,46,47]},{"path":[4,6,2,4],"span":[274,2,36],"leadingComments":" Reserved enum value names, which may not be reused. A given name may only\n be reserved once.\n"},{"path":[4,6,2,4,4],"span":[274,2,10]},{"path":[4,6,2,4,5],"span":[274,11,17]},{"path":[4,6,2,4,1],"span":[274,18,31]},{"path":[4,6,2,4,3],"span":[274,34,35]},{"path":[4,7],"span":[278,0,283,1],"leadingComments":" Describes a value within an enum.\n"},{"path":[4,7,1],"span":[278,8,32]},{"path":[4,7,2,0],"span":[279,2,27]},{"path":[4,7,2,0,4],"span":[279,2,10]},{"path":[4,7,2,0,5],"span":[279,11,17]},{"path":[4,7,2,0,1],"span":[279,18,22]},{"path":[4,7,2,0,3],"span":[279,25,26]},{"path":[4,7,2,1],"span":[280,2,28]},{"path":[4,7,2,1,4],"span":[280,2,10]},{"path":[4,7,2,1,5],"span":[280,11,16]},{"path":[4,7,2,1,1],"span":[280,17,23]},{"path":[4,7,2,1,3],"span":[280,26,27]},{"path":[4,7,2,2],"span":[282,2,40]},{"path":[4,7,2,2,4],"span":[282,2,10]},{"path":[4,7,2,2,6],"span":[282,11,27]},{"path":[4,7,2,2,1],"span":[282,28,35]},{"path":[4,7,2,2,3],"span":[282,38,39]},{"path":[4,8],"span":[286,0,291,1],"leadingComments":" Describes a service.\n"},{"path":[4,8,1],"span":[286,8,30]},{"path":[4,8,2,0],"span":[287,2,27]},{"path":[4,8,2,0,4],"span":[287,2,10]},{"path":[4,8,2,0,5],"span":[287,11,17]},{"path":[4,8,2,0,1],"span":[287,18,22]},{"path":[4,8,2,0,3],"span":[287,25,26]},{"path":[4,8,2,1],"span":[288,2,44]},{"path":[4,8,2,1,4],"span":[288,2,10]},{"path":[4,8,2,1,6],"span":[288,11,32]},{"path":[4,8,2,1,1],"span":[288,33,39]},{"path":[4,8,2,1,3],"span":[288,42,43]},{"path":[4,8,2,2],"span":[290,2,38]},{"path":[4,8,2,2,4],"span":[290,2,10]},{"path":[4,8,2,2,6],"span":[290,11,25]},{"path":[4,8,2,2,1],"span":[290,26,33]},{"path":[4,8,2,2,3],"span":[290,36,37]},{"path":[4,9],"span":[294,0,308,1],"leadingComments":" Describes a method of a service.\n"},{"path":[4,9,1],"span":[294,8,29]},{"path":[4,9,2,0],"span":[295,2,27]},{"path":[4,9,2,0,4],"span":[295,2,10]},{"path":[4,9,2,0,5],"span":[295,11,17]},{"path":[4,9,2,0,1],"span":[295,18,22]},{"path":[4,9,2,0,3],"span":[295,25,26]},{"path":[4,9,2,1],"span":[299,2,33],"leadingComments":" Input and output type names.  These are resolved in the same way as\n FieldDescriptorProto.type_name, but must refer to a message type.\n"},{"path":[4,9,2,1,4],"span":[299,2,10]},{"path":[4,9,2,1,5],"span":[299,11,17]},{"path":[4,9,2,1,1],"span":[299,18,28]},{"path":[4,9,2,1,3],"span":[299,31,32]},{"path":[4,9,2,2],"span":[300,2,34]},{"path":[4,9,2,2,4],"span":[300,2,10]},{"path":[4,9,2,2,5],"span":[300,11,17]},{"path":[4,9,2,2,1],"span":[300,18,29]},{"path":[4,9,2,2,3],"span":[300,32,33]},{"path":[4,9,2,3],"span":[302,2,37]},{"path":[4,9,2,3,4],"span":[302,2,10]},{"path":[4,9,2,3,6],"span":[302,11,24]},{"path":[4,9,2,3,1],"span":[302,25,32]},{"path":[4,9,2,3,3],"span":[302,35,36]},{"path":[4,9,2,4],"span":[305,2,55],"leadingComments":" Identifies if client streams multiple client messages\n"},{"path":[4,9,2,4,4],"span":[305,2,10]},{"path":[4,9,2,4,5],"span":[305,11,15]},{"path":[4,9,2,4,1],"span":[305,16,32]},{"path":[4,9,2,4,3],"span":[305,35,36]},{"path":[4,9,2,4,8],"span":[305,37,54]},{"path":[4,9,2,4,7],"span":[305,38,53]},{"path":[4,9,2,5],"span":[307,2,55],"leadingComments":" Identifies if server streams multiple server messages\n"},{"path":[4,9,2,5,4],"span":[307,2,10]},{"path":[4,9,2,5,5],"span":[307,11,15]},{"path":[4,9,2,5,1],"span":[307,16,32]},{"path":[4,9,2,5,3],"span":[307,35,36]},{"path":[4,9,2,5,8],"span":[307,37,54]},{"path":[4,9,2,5,7],"span":[307,38,53]},{"path":[4,10],"span":[342,0,458,1],"leadingDetachedComments":[" ===================================================================\n Options\n"," Each of the definitions above may have \"options\" attached.  These are\n just annotations which may cause code to be generated slightly differently\n or may contain hints for code that manipulates protocol messages.\n\n Clients may define custom options as extensions of the *Options messages.\n These extensions may not yet be known at parsing time, so the parser cannot\n store the values in them.  Instead it stores them in a field in the *Options\n message called uninterpreted_option. This field must have the same name\n across all *Options messages. We then use this field to populate the\n extensions when we build a descriptor, at which point all protos have been\n parsed and so all extensions are known.\n\n Extension numbers for custom options may be chosen as follows:\n * For options which will only be used within a single application or\n   organization, or for experimental options, use field numbers 50000\n   through 99999.  It is up to you to ensure that you do not use the\n   same number for multiple options.\n * For options which will be published and used publicly by multiple\n   independent entities, e-mail protobuf-global-extension-registry@google.com\n   to reserve extension numbers. Simply provide your project name (e.g.\n   Objective-C plugin) and your project website (if available) -- there's no\n   need to explain how you intend to use them. Usually you only need one\n   extension number. You can declare multiple options with only one extension\n   number by putting them in a sub-message. See the Custom Options section of\n   the docs for examples:\n   https://developers.google.com/protocol-buffers/docs/proto#options\n   If this turns out to be popular, a web service will be set up\n   to automatically assign option numbers.\n"]},{"path":[4,10,1],"span":[342,8,19]},{"path":[4,10,2,0],"span":[348,2,35],"leadingComments":" Sets the Java package where classes generated from this .proto will be\n placed.  By default, the proto package is used, but this is often\n inappropriate because proto packages do not normally start with backwards\n domain names.\n"},{"path":[4,10,2,0,4],"span":[348,2,10]},{"path":[4,10,2,0,5],"span":[348,11,17]},{"path":[4,10,2,0,1],"span":[348,18,30]},{"path":[4,10,2,0,3],"span":[348,33,34]},{"path":[4,10,2,1],"span":[355,2,43],"leadingComments":" Controls the name of the wrapper Java class generated for the .proto file.\n That class will always contain the .proto file's getDescriptor() method as\n well as any top-level extensions defined in the .proto file.\n If java_multiple_files is disabled, then all the other classes from the\n .proto file will be nested inside the single wrapper outer class.\n"},{"path":[4,10,2,1,4],"span":[355,2,10]},{"path":[4,10,2,1,5],"span":[355,11,17]},{"path":[4,10,2,1,1],"span":[355,18,38]},{"path":[4,10,2,1,3],"span":[355,41,42]},{"path":[4,10,2,2],"span":[363,2,59],"leadingComments":" If enabled, then the Java code generator will generate a separate .java\n file for each top-level message, enum, and service defined in the .proto\n file.  Thus, these types will *not* be nested inside the wrapper class\n named by java_outer_classname.  However, the wrapper class will still be\n generated to contain the file's getDescriptor() method as well as any\n top-level extensions defined in the file.\n"},{"path":[4,10,2,2,4],"span":[363,2,10]},{"path":[4,10,2,2,5],"span":[363,11,15]},{"path":[4,10,2,2,1],"span":[363,16,35]},{"path":[4,10,2,2,3],"span":[363,38,40]},{"path":[4,10,2,2,8],"span":[363,41,58]},{"path":[4,10,2,2,7],"span":[363,42,57]},{"path":[4,10,2,3],"span":[366,2,69],"leadingComments":" This option does nothing.\n"},{"path":[4,10,2,3,4],"span":[366,2,10]},{"path":[4,10,2,3,5],"span":[366,11,15]},{"path":[4,10,2,3,1],"span":[366,16,45]},{"path":[4,10,2,3,3],"span":[366,48,50]},{"path":[4,10,2,3,8],"span":[366,51,68]},{"path":[4,10,2,3,8,3],"span":[366,52,67]},{"path":[4,10,2,4],"span":[374,2,62],"leadingComments":" If set true, then the Java2 code generator will generate code that\n throws an exception whenever an attempt is made to assign a non-UTF-8\n byte sequence to a string field.\n Message reflection will do the same.\n However, an extension field still accepts non-UTF-8 byte sequences.\n This option has no effect on when used with the lite runtime.\n"},{"path":[4,10,2,4,4],"span":[374,2,10]},{"path":[4,10,2,4,5],"span":[374,11,15]},{"path":[4,10,2,4,1],"span":[374,16,38]},{"path":[4,10,2,4,3],"span":[374,41,43]},{"path":[4,10,2,4,8],"span":[374,44,61]},{"path":[4,10,2,4,7],"span":[374,45,60]},{"path":[4,10,4,0],"span":[377,2,382,3],"leadingComments":" Generated classes can be optimized for speed or code size.\n"},{"path":[4,10,4,0,1],"span":[377,7,19]},{"path":[4,10,4,0,2,0],"span":[378,4,14],"trailingComments":" Generate complete code for parsing, serialization,\n"},{"path":[4,10,4,0,2,0,1],"span":[378,4,9]},{"path":[4,10,4,0,2,0,2],"span":[378,12,13]},{"path":[4,10,4,0,2,1],"span":[380,4,18],"leadingComments":" etc.\n","trailingComments":" Use ReflectionOps to implement these methods.\n"},{"path":[4,10,4,0,2,1,1],"span":[380,4,13]},{"path":[4,10,4,0,2,1,2],"span":[380,16,17]},{"path":[4,10,4,0,2,2],"span":[381,4,21],"trailingComments":" Generate code using MessageLite and the lite runtime.\n"},{"path":[4,10,4,0,2,2,1],"span":[381,4,16]},{"path":[4,10,4,0,2,2,2],"span":[381,19,20]},{"path":[4,10,2,5],"span":[383,2,59]},{"path":[4,10,2,5,4],"span":[383,2,10]},{"path":[4,10,2,5,6],"span":[383,11,23]},{"path":[4,10,2,5,1],"span":[383,24,36]},{"path":[4,10,2,5,3],"span":[383,39,40]},{"path":[4,10,2,5,8],"span":[383,41,58]},{"path":[4,10,2,5,7],"span":[383,42,57]},{"path":[4,10,2,6],"span":[390,2,34],"leadingComments":" Sets the Go package where structs generated from this .proto will be\n placed. If omitted, the Go package will be derived from the following:\n   - The basename of the package import path, if provided.\n   - Otherwise, the package statement in the .proto file, if present.\n   - Otherwise, the basename of the .proto file, without extension.\n"},{"path":[4,10,2,6,4],"span":[390,2,10]},{"path":[4,10,2,6,5],"span":[390,11,17]},{"path":[4,10,2,6,1],"span":[390,18,28]},{"path":[4,10,2,6,3],"span":[390,31,33]},{"path":[4,10,2,7],"span":[402,2,59],"leadingComments":" Should generic services be generated in each language?  \"Generic\" services\n are not specific to any particular RPC system.  They are generated by the\n main code generators in each language (without additional plugins).\n Generic services were the only kind of service generation supported by\n early versions of google.protobuf.\n\n Generic services are now considered deprecated in favor of using plugins\n that generate code specific to your particular RPC system.  Therefore,\n these default to false.  Old code which depends on generic services should\n explicitly set them to true.\n"},{"path":[4,10,2,7,4],"span":[402,2,10]},{"path":[4,10,2,7,5],"span":[402,11,15]},{"path":[4,10,2,7,1],"span":[402,16,35]},{"path":[4,10,2,7,3],"span":[402,38,40]},{"path":[4,10,2,7,8],"span":[402,41,58]},{"path":[4,10,2,7,7],"span":[402,42,57]},{"path":[4,10,2,8],"span":[403,2,61]},{"path":[4,10,2,8,4],"span":[403,2,10]},{"path":[4,10,2,8,5],"span":[403,11,15]},{"path":[4,10,2,8,1],"span":[403,16,37]},{"path":[4,10,2,8,3],"span":[403,40,42]},{"path":[4,10,2,8,8],"span":[403,43,60]},{"path":[4,10,2,8,7],"span":[403,44,59]},{"path":[4,10,2,9],"span":[404,2,59]},{"path":[4,10,2,9,4],"span":[404,2,10]},{"path":[4,10,2,9,5],"span":[404,11,15]},{"path":[4,10,2,9,1],"span":[404,16,35]},{"path":[4,10,2,9,3],"span":[404,38,40]},{"path":[4,10,2,9,8],"span":[404,41,58]},{"path":[4,10,2,9,7],"span":[404,42,57]},{"path":[4,10,2,10],"span":[405,2,60]},{"path":[4,10,2,10,4],"span":[405,2,10]},{"path":[4,10,2,10,5],"span":[405,11,15]},{"path":[4,10,2,10,1],"span":[405,16,36]},{"path":[4,10,2,10,3],"span":[405,39,41]},{"path":[4,10,2,10,8],"span":[405,42,59]},{"path":[4,10,2,10,7],"span":[405,43,58]},{"path":[4,10,2,11],"span":[411,2,50],"leadingComments":" Is this file deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for everything in the file, or it will be completely ignored; in the very\n least, this is a formalization for deprecating files.\n"},{"path":[4,10,2,11,4],"span":[411,2,10]},{"path":[4,10,2,11,5],"span":[411,11,15]},{"path":[4,10,2,11,1],"span":[411,16,26]},{"path":[4,10,2,11,3],"span":[411,29,31]},{"path":[4,10,2,11,8],"span":[411,32,49]},{"path":[4,10,2,11,7],"span":[411,33,48]},{"path":[4,10,2,12],"span":[415,2,55],"leadingComments":" Enables the use of arenas for the proto messages in this file. This applies\n only to generated classes for C++.\n"},{"path":[4,10,2,12,4],"span":[415,2,10]},{"path":[4,10,2,12,5],"span":[415,11,15]},{"path":[4,10,2,12,1],"span":[415,16,32]},{"path":[4,10,2,12,3],"span":[415,35,37]},{"path":[4,10,2,12,8],"span":[415,38,54]},{"path":[4,10,2,12,7],"span":[415,39,53]},{"path":[4,10,2,13],"span":[419,2,41],"leadingComments":" Sets the objective c class prefix which is prepended to all objective c\n generated classes from this .proto. There is no default.\n"},{"path":[4,10,2,13,4],"span":[419,2,10]},{"path":[4,10,2,13,5],"span":[419,11,17]},{"path":[4,10,2,13,1],"span":[419,18,35]},{"path":[4,10,2,13,3],"span":[419,38,40]},{"path":[4,10,2,14],"span":[422,2,40],"leadingComments":" Namespace for generated classes; defaults to the package.\n"},{"path":[4,10,2,14,4],"span":[422,2,10]},{"path":[4,10,2,14,5],"span":[422,11,17]},{"path":[4,10,2,14,1],"span":[422,18,34]},{"path":[4,10,2,14,3],"span":[422,37,39]},{"path":[4,10,2,15],"span":[428,2,36],"leadingComments":" By default Swift generators will take the proto package and CamelCase it\n replacing '.' with underscore and use that to prefix the types/symbols\n defined. When this options is provided, they will use this value instead\n to prefix the types/symbols defined.\n"},{"path":[4,10,2,15,4],"span":[428,2,10]},{"path":[4,10,2,15,5],"span":[428,11,17]},{"path":[4,10,2,15,1],"span":[428,18,30]},{"path":[4,10,2,15,3],"span":[428,33,35]},{"path":[4,10,2,16],"span":[432,2,40],"leadingComments":" Sets the php class prefix which is prepended to all php generated classes\n from this .proto. Default is empty.\n"},{"path":[4,10,2,16,4],"span":[432,2,10]},{"path":[4,10,2,16,5],"span":[432,11,17]},{"path":[4,10,2,16,1],"span":[432,18,34]},{"path":[4,10,2,16,3],"span":[432,37,39]},{"path":[4,10,2,17],"span":[437,2,37],"leadingComments":" Use this option to change the namespace of php generated classes. Default\n is empty. When this option is empty, the package name will be used for\n determining the namespace.\n"},{"path":[4,10,2,17,4],"span":[437,2,10]},{"path":[4,10,2,17,5],"span":[437,11,17]},{"path":[4,10,2,17,1],"span":[437,18,31]},{"path":[4,10,2,17,3],"span":[437,34,36]},{"path":[4,10,2,18],"span":[442,2,46],"leadingComments":" Use this option to change the namespace of php generated metadata classes.\n Default is empty. When this option is empty, the proto file name will be\n used for determining the namespace.\n"},{"path":[4,10,2,18,4],"span":[442,2,10]},{"path":[4,10,2,18,5],"span":[442,11,17]},{"path":[4,10,2,18,1],"span":[442,18,40]},{"path":[4,10,2,18,3],"span":[442,43,45]},{"path":[4,10,2,19],"span":[447,2,36],"leadingComments":" Use this option to change the package of ruby generated classes. Default\n is empty. When this option is not set, the package name will be used for\n determining the ruby package.\n"},{"path":[4,10,2,19,4],"span":[447,2,10]},{"path":[4,10,2,19,5],"span":[447,11,17]},{"path":[4,10,2,19,1],"span":[447,18,30]},{"path":[4,10,2,19,3],"span":[447,33,35]},{"path":[4,10,2,20],"span":[451,2,58],"leadingComments":" The parser stores options it doesn't recognize here.\n See the documentation for the \"Options\" section above.\n"},{"path":[4,10,2,20,4],"span":[451,2,10]},{"path":[4,10,2,20,6],"span":[451,11,30]},{"path":[4,10,2,20,1],"span":[451,31,51]},{"path":[4,10,2,20,3],"span":[451,54,57]},{"path":[4,10,5],"span":[455,2,25],"leadingComments":" Clients can define custom options in extensions of this message.\n See the documentation for the \"Options\" section above.\n"},{"path":[4,10,5,0],"span":[455,13,24]},{"path":[4,10,5,0,1],"span":[455,13,17]},{"path":[4,10,5,0,2],"span":[455,21,24]},{"path":[4,10,9],"span":[457,2,14]},{"path":[4,10,9,0],"span":[457,11,13]},{"path":[4,10,9,0,1],"span":[457,11,13]},{"path":[4,10,9,0,2],"span":[457,11,13]},{"path":[4,11],"span":[460,0,537,1]},{"path":[4,11,1],"span":[460,8,22]},{"path":[4,11,2,0],"span":[479,2,62],"leadingComments":" Set true to use the old proto1 MessageSet wire format for extensions.\n This is provided for backwards-compatibility with the MessageSet wire\n format.  You should not use this for any other reason:  It's less\n efficient, has fewer features, and is more complicated.\n\n The message must be defined exactly as follows:\n   message Foo {\n     option message_set_wire_format = true;\n     extensions 4 to max;\n   }\n Note that the message cannot have any defined fields; MessageSets only\n have extensions.\n\n All extensions of your type must be singular messages; e.g. they cannot\n be int32s, enums, or repeated messages.\n\n Because this is an option, the above two restrictions are not enforced by\n the protocol compiler.\n"},{"path":[4,11,2,0,4],"span":[479,2,10]},{"path":[4,11,2,0,5],"span":[479,11,15]},{"path":[4,11,2,0,1],"span":[479,16,39]},{"path":[4,11,2,0,3],"span":[479,42,43]},{"path":[4,11,2,0,8],"span":[479,44,61]},{"path":[4,11,2,0,7],"span":[479,45,60]},{"path":[4,11,2,1],"span":[484,2,70],"leadingComments":" Disables the generation of the standard \"descriptor()\" accessor, which can\n conflict with a field of the same name.  This is meant to make migration\n from proto1 easier; new code should avoid fields named \"descriptor\".\n"},{"path":[4,11,2,1,4],"span":[484,2,10]},{"path":[4,11,2,1,5],"span":[484,11,15]},{"path":[4,11,2,1,1],"span":[484,16,47]},{"path":[4,11,2,1,3],"span":[484,50,51]},{"path":[4,11,2,1,8],"span":[484,52,69]},{"path":[4,11,2,1,7],"span":[484,53,68]},{"path":[4,11,2,2],"span":[490,2,49],"leadingComments":" Is this message deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the message, or it will be completely ignored; in the very least,\n this is a formalization for deprecating messages.\n"},{"path":[4,11,2,2,4],"span":[490,2,10]},{"path":[4,11,2,2,5],"span":[490,11,15]},{"path":[4,11,2,2,1],"span":[490,16,26]},{"path":[4,11,2,2,3],"span":[490,29,30]},{"path":[4,11,2,2,8],"span":[490,31,48]},{"path":[4,11,2,2,7],"span":[490,32,47]},{"path":[4,11,9],"span":[492,2,19]},{"path":[4,11,9,0],"span":[492,11,12]},{"path":[4,11,9,0,1],"span":[492,11,12]},{"path":[4,11,9,0,2],"span":[492,11,12]},{"path":[4,11,9,1],"span":[492,14,15]},{"path":[4,11,9,1,1],"span":[492,14,15]},{"path":[4,11,9,1,2],"span":[492,14,15]},{"path":[4,11,9,2],"span":[492,17,18]},{"path":[4,11,9,2,1],"span":[492,17,18]},{"path":[4,11,9,2,2],"span":[492,17,18]},{"path":[4,11,2,3],"span":[515,2,30],"leadingComments":" NOTE: Do not set the option in .proto files. Always use the maps syntax\n instead. The option should only be implicitly set by the proto compiler\n parser.\n\n Whether the message is an automatically generated map entry type for the\n maps field.\n\n For maps fields:\n     map<KeyType, ValueType> map_field = 1;\n The parsed descriptor looks like:\n     message MapFieldEntry {\n         option map_entry = true;\n         optional KeyType key = 1;\n         optional ValueType value = 2;\n     }\n     repeated MapFieldEntry map_field = 1;\n\n Implementations may choose not to generate the map_entry=true message, but\n use a native map in the target language to hold the keys and values.\n The reflection APIs in such implementations still need to work as\n if the field is a repeated message field.\n"},{"path":[4,11,2,3,4],"span":[515,2,10]},{"path":[4,11,2,3,5],"span":[515,11,15]},{"path":[4,11,2,3,1],"span":[515,16,25]},{"path":[4,11,2,3,3],"span":[515,28,29]},{"path":[4,11,9],"span":[517,2,13],"trailingComments":" javalite_serializable\n"},{"path":[4,11,9,3],"span":[517,11,12]},{"path":[4,11,9,3,1],"span":[517,11,12]},{"path":[4,11,9,3,2],"span":[517,11,12]},{"path":[4,11,9],"span":[518,2,13],"trailingComments":" javanano_as_lite\n"},{"path":[4,11,9,4],"span":[518,11,12]},{"path":[4,11,9,4,1],"span":[518,11,12]},{"path":[4,11,9,4,2],"span":[518,11,12]},{"path":[4,11,2,4],"span":[530,2,80],"leadingComments":" Enable the legacy handling of JSON field name conflicts.  This lowercases\n and strips underscored from the fields before comparison in proto3 only.\n The new behavior takes `json_name` into account and applies to proto2 as\n well.\n\n This should only be used as a temporary measure against broken builds due\n to the change in behavior for JSON field name conflicts.\n\n TODO(b/261750190) This is legacy behavior we plan to remove once downstream\n teams have had time to migrate.\n"},{"path":[4,11,2,4,4],"span":[530,2,10]},{"path":[4,11,2,4,5],"span":[530,11,15]},{"path":[4,11,2,4,1],"span":[530,16,54]},{"path":[4,11,2,4,3],"span":[530,57,59]},{"path":[4,11,2,4,8],"span":[530,60,79]},{"path":[4,11,2,4,8,3],"span":[530,61,78]},{"path":[4,11,2,5],"span":[533,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,11,2,5,4],"span":[533,2,10]},{"path":[4,11,2,5,6],"span":[533,11,30]},{"path":[4,11,2,5,1],"span":[533,31,51]},{"path":[4,11,2,5,3],"span":[533,54,57]},{"path":[4,11,5],"span":[536,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,11,5,0],"span":[536,13,24]},{"path":[4,11,5,0,1],"span":[536,13,17]},{"path":[4,11,5,0,2],"span":[536,21,24]},{"path":[4,12],"span":[539,0,670,1]},{"path":[4,12,1],"span":[539,8,20]},{"path":[4,12,2,0],"span":[544,2,46],"leadingComments":" The ctype option instructs the C++ code generator to use a different\n representation of the field than it normally would.  See the specific\n options below.  This option is not yet implemented in the open source\n release -- sorry, we'll try to include it in a future version!\n"},{"path":[4,12,2,0,4],"span":[544,2,10]},{"path":[4,12,2,0,6],"span":[544,11,16]},{"path":[4,12,2,0,1],"span":[544,17,22]},{"path":[4,12,2,0,3],"span":[544,25,26]},{"path":[4,12,2,0,8],"span":[544,27,45]},{"path":[4,12,2,0,7],"span":[544,28,44]},{"path":[4,12,4,0],"span":[545,2,552,3]},{"path":[4,12,4,0,1],"span":[545,7,12]},{"path":[4,12,4,0,2,0],"span":[547,4,15],"leadingComments":" Default mode.\n"},{"path":[4,12,4,0,2,0,1],"span":[547,4,10]},{"path":[4,12,4,0,2,0,2],"span":[547,13,14]},{"path":[4,12,4,0,2,1],"span":[549,4,13]},{"path":[4,12,4,0,2,1,1],"span":[549,4,8]},{"path":[4,12,4,0,2,1,2],"span":[549,11,12]},{"path":[4,12,4,0,2,2],"span":[551,4,21]},{"path":[4,12,4,0,2,2,1],"span":[551,4,16]},{"path":[4,12,4,0,2,2,2],"span":[551,19,20]},{"path":[4,12,2,1],"span":[558,2,27],"leadingComments":" The packed option can be enabled for repeated primitive fields to enable\n a more efficient representation on the wire. Rather than repeatedly\n writing the tag and type for each element, the entire array is encoded as\n a single length-delimited blob. In proto3, only explicit setting it to\n false will avoid using packed encoding.\n"},{"path":[4,12,2,1,4],"span":[558,2,10]},{"path":[4,12,2,1,5],"span":[558,11,15]},{"path":[4,12,2,1,1],"span":[558,16,22]},{"path":[4,12,2,1,3],"span":[558,25,26]},{"path":[4,12,2,2],"span":[571,2,51],"leadingComments":" The jstype option determines the JavaScript type used for values of the\n field.  The option is permitted only for 64 bit integral and fixed types\n (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n is represented as JavaScript string, which avoids loss of precision that\n can happen when a large value is converted to a floating point JavaScript.\n Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n use the JavaScript \"number\" type.  The behavior of the default option\n JS_NORMAL is implementation dependent.\n\n This option is an enum to permit additional types to be added, e.g.\n goog.math.Integer.\n"},{"path":[4,12,2,2,4],"span":[571,2,10]},{"path":[4,12,2,2,6],"span":[571,11,17]},{"path":[4,12,2,2,1],"span":[571,18,24]},{"path":[4,12,2,2,3],"span":[571,27,28]},{"path":[4,12,2,2,8],"span":[571,29,50]},{"path":[4,12,2,2,7],"span":[571,30,49]},{"path":[4,12,4,1],"span":[572,2,581,3]},{"path":[4,12,4,1,1],"span":[572,7,13]},{"path":[4,12,4,1,2,0],"span":[574,4,18],"leadingComments":" Use the default type.\n"},{"path":[4,12,4,1,2,0,1],"span":[574,4,13]},{"path":[4,12,4,1,2,0,2],"span":[574,16,17]},{"path":[4,12,4,1,2,1],"span":[577,4,18],"leadingComments":" Use JavaScript strings.\n"},{"path":[4,12,4,1,2,1,1],"span":[577,4,13]},{"path":[4,12,4,1,2,1,2],"span":[577,16,17]},{"path":[4,12,4,1,2,2],"span":[580,4,18],"leadingComments":" Use JavaScript numbers.\n"},{"path":[4,12,4,1,2,2,1],"span":[580,4,13]},{"path":[4,12,4,1,2,2,2],"span":[580,16,17]},{"path":[4,12,2,3],"span":[613,2,43],"leadingComments":" Should this field be parsed lazily?  Lazy applies only to message-type\n fields.  It means that when the outer message is initially parsed, the\n inner message's contents will not be parsed but instead stored in encoded\n form.  The inner message will actually be parsed when it is first accessed.\n\n This is only a hint.  Implementations are free to choose whether to use\n eager or lazy parsing regardless of the value of this option.  However,\n setting this option true suggests that the protocol author believes that\n using lazy parsing on this field is worth the additional bookkeeping\n overhead typically needed to implement it.\n\n This option does not affect the public interface of any generated code;\n all method signatures remain the same.  Furthermore, thread-safety of the\n interface is not affected by this option; const methods remain safe to\n call from multiple threads concurrently, while non-const methods continue\n to require exclusive access.\n\n Note that implementations may choose not to check required fields within\n a lazy sub-message.  That is, calling IsInitialized() on the outer message\n may return true even if the inner message has missing required fields.\n This is necessary because otherwise the inner message would have to be\n parsed in order to perform the check, defeating the purpose of lazy\n parsing.  An implementation which chooses not to check required fields\n must be consistent about it.  That is, for any particular sub-message, the\n implementation must either *always* check its required fields, or *never*\n check its required fields, regardless of whether or not the message has\n been parsed.\n\n As of May 2022, lazy verifies the contents of the byte stream during\n parsing.  An invalid byte stream will cause the overall parsing to fail.\n"},{"path":[4,12,2,3,4],"span":[613,2,10]},{"path":[4,12,2,3,5],"span":[613,11,15]},{"path":[4,12,2,3,1],"span":[613,16,20]},{"path":[4,12,2,3,3],"span":[613,23,24]},{"path":[4,12,2,3,8],"span":[613,25,42]},{"path":[4,12,2,3,7],"span":[613,26,41]},{"path":[4,12,2,4],"span":[618,2,55],"leadingComments":" unverified_lazy does no correctness checks on the byte stream. This should\n only be used where lazy with verification is prohibitive for performance\n reasons.\n"},{"path":[4,12,2,4,4],"span":[618,2,10]},{"path":[4,12,2,4,5],"span":[618,11,15]},{"path":[4,12,2,4,1],"span":[618,16,31]},{"path":[4,12,2,4,3],"span":[618,34,36]},{"path":[4,12,2,4,8],"span":[618,37,54]},{"path":[4,12,2,4,7],"span":[618,38,53]},{"path":[4,12,2,5],"span":[624,2,49],"leadingComments":" Is this field deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for accessors, or it will be completely ignored; in the very least, this\n is a formalization for deprecating fields.\n"},{"path":[4,12,2,5,4],"span":[624,2,10]},{"path":[4,12,2,5,5],"span":[624,11,15]},{"path":[4,12,2,5,1],"span":[624,16,26]},{"path":[4,12,2,5,3],"span":[624,29,30]},{"path":[4,12,2,5,8],"span":[624,31,48]},{"path":[4,12,2,5,7],"span":[624,32,47]},{"path":[4,12,2,6],"span":[627,2,44],"leadingComments":" For Google-internal migration only. Do not use.\n"},{"path":[4,12,2,6,4],"span":[627,2,10]},{"path":[4,12,2,6,5],"span":[627,11,15]},{"path":[4,12,2,6,1],"span":[627,16,20]},{"path":[4,12,2,6,3],"span":[627,23,25]},{"path":[4,12,2,6,8],"span":[627,26,43]},{"path":[4,12,2,6,7],"span":[627,27,42]},{"path":[4,12,2,7],"span":[631,2,52],"leadingComments":" Indicate that the field value should not be printed out when using debug\n formats, e.g. when the field contains sensitive credentials.\n"},{"path":[4,12,2,7,4],"span":[631,2,10]},{"path":[4,12,2,7,5],"span":[631,11,15]},{"path":[4,12,2,7,1],"span":[631,16,28]},{"path":[4,12,2,7,3],"span":[631,31,33]},{"path":[4,12,2,7,8],"span":[631,34,51]},{"path":[4,12,2,7,7],"span":[631,35,50]},{"path":[4,12,4,2],"span":[636,2,640,3],"leadingComments":" If set to RETENTION_SOURCE, the option will be omitted from the binary.\n Note: as of January 2023, support for this is in progress and does not yet\n have an effect (b/264593489).\n"},{"path":[4,12,4,2,1],"span":[636,7,22]},{"path":[4,12,4,2,2,0],"span":[637,4,26]},{"path":[4,12,4,2,2,0,1],"span":[637,4,21]},{"path":[4,12,4,2,2,0,2],"span":[637,24,25]},{"path":[4,12,4,2,2,1],"span":[638,4,26]},{"path":[4,12,4,2,2,1,1],"span":[638,4,21]},{"path":[4,12,4,2,2,1,2],"span":[638,24,25]},{"path":[4,12,4,2,2,2],"span":[639,4,25]},{"path":[4,12,4,2,2,2,1],"span":[639,4,20]},{"path":[4,12,4,2,2,2,2],"span":[639,23,24]},{"path":[4,12,2,8],"span":[642,2,42]},{"path":[4,12,2,8,4],"span":[642,2,10]},{"path":[4,12,2,8,6],"span":[642,11,26]},{"path":[4,12,2,8,1],"span":[642,27,36]},{"path":[4,12,2,8,3],"span":[642,39,41]},{"path":[4,12,4,3],"span":[648,2,659,3],"leadingComments":" This indicates the types of entities that the field may apply to when used\n as an option. If it is unset, then the field may be freely used as an\n option on any kind of entity. Note: as of January 2023, support for this is\n in progress and does not yet have an effect (b/264593489).\n"},{"path":[4,12,4,3,1],"span":[648,7,23]},{"path":[4,12,4,3,2,0],"span":[649,4,28]},{"path":[4,12,4,3,2,0,1],"span":[649,4,23]},{"path":[4,12,4,3,2,0,2],"span":[649,26,27]},{"path":[4,12,4,3,2,1],"span":[650,4,25]},{"path":[4,12,4,3,2,1,1],"span":[650,4,20]},{"path":[4,12,4,3,2,1,2],"span":[650,23,24]},{"path":[4,12,4,3,2,2],"span":[651,4,36]},{"path":[4,12,4,3,2,2,1],"span":[651,4,31]},{"path":[4,12,4,3,2,2,2],"span":[651,34,35]},{"path":[4,12,4,3,2,3],"span":[652,4,28]},{"path":[4,12,4,3,2,3,1],"span":[652,4,23]},{"path":[4,12,4,3,2,3,2],"span":[652,26,27]},{"path":[4,12,4,3,2,4],"span":[653,4,26]},{"path":[4,12,4,3,2,4,1],"span":[653,4,21]},{"path":[4,12,4,3,2,4,2],"span":[653,24,25]},{"path":[4,12,4,3,2,5],"span":[654,4,26]},{"path":[4,12,4,3,2,5,1],"span":[654,4,21]},{"path":[4,12,4,3,2,5,2],"span":[654,24,25]},{"path":[4,12,4,3,2,6],"span":[655,4,25]},{"path":[4,12,4,3,2,6,1],"span":[655,4,20]},{"path":[4,12,4,3,2,6,2],"span":[655,23,24]},{"path":[4,12,4,3,2,7],"span":[656,4,31]},{"path":[4,12,4,3,2,7,1],"span":[656,4,26]},{"path":[4,12,4,3,2,7,2],"span":[656,29,30]},{"path":[4,12,4,3,2,8],"span":[657,4,28]},{"path":[4,12,4,3,2,8,1],"span":[657,4,23]},{"path":[4,12,4,3,2,8,2],"span":[657,26,27]},{"path":[4,12,4,3,2,9],"span":[658,4,27]},{"path":[4,12,4,3,2,9,1],"span":[658,4,22]},{"path":[4,12,4,3,2,9,2],"span":[658,25,26]},{"path":[4,12,2,9],"span":[661,2,40]},{"path":[4,12,2,9,4],"span":[661,2,10]},{"path":[4,12,2,9,6],"span":[661,11,27]},{"path":[4,12,2,9,1],"span":[661,28,34]},{"path":[4,12,2,9,3],"span":[661,37,39]},{"path":[4,12,2,10],"span":[664,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,12,2,10,4],"span":[664,2,10]},{"path":[4,12,2,10,6],"span":[664,11,30]},{"path":[4,12,2,10,1],"span":[664,31,51]},{"path":[4,12,2,10,3],"span":[664,54,57]},{"path":[4,12,5],"span":[667,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,12,5,0],"span":[667,13,24]},{"path":[4,12,5,0,1],"span":[667,13,17]},{"path":[4,12,5,0,2],"span":[667,21,24]},{"path":[4,12,9],"span":[669,2,13],"trailingComments":" removed jtype\n"},{"path":[4,12,9,0],"span":[669,11,12]},{"path":[4,12,9,0,1],"span":[669,11,12]},{"path":[4,12,9,0,2],"span":[669,11,12]},{"path":[4,13],"span":[672,0,678,1]},{"path":[4,13,1],"span":[672,8,20]},{"path":[4,13,2,0],"span":[674,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,13,2,0,4],"span":[674,2,10]},{"path":[4,13,2,0,6],"span":[674,11,30]},{"path":[4,13,2,0,1],"span":[674,31,51]},{"path":[4,13,2,0,3],"span":[674,54,57]},{"path":[4,13,5],"span":[677,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,13,5,0],"span":[677,13,24]},{"path":[4,13,5,0,1],"span":[677,13,17]},{"path":[4,13,5,0,2],"span":[677,21,24]},{"path":[4,14],"span":[680,0,707,1]},{"path":[4,14,1],"span":[680,8,19]},{"path":[4,14,2,0],"span":[684,2,32],"leadingComments":" Set this option to true to allow mapping different tag names to the same\n value.\n"},{"path":[4,14,2,0,4],"span":[684,2,10]},{"path":[4,14,2,0,5],"span":[684,11,15]},{"path":[4,14,2,0,1],"span":[684,16,27]},{"path":[4,14,2,0,3],"span":[684,30,31]},{"path":[4,14,2,1],"span":[690,2,49],"leadingComments":" Is this enum deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum, or it will be completely ignored; in the very least, this\n is a formalization for deprecating enums.\n"},{"path":[4,14,2,1,4],"span":[690,2,10]},{"path":[4,14,2,1,5],"span":[690,11,15]},{"path":[4,14,2,1,1],"span":[690,16,26]},{"path":[4,14,2,1,3],"span":[690,29,30]},{"path":[4,14,2,1,8],"span":[690,31,48]},{"path":[4,14,2,1,7],"span":[690,32,47]},{"path":[4,14,9],"span":[692,2,13],"trailingComments":" javanano_as_lite\n"},{"path":[4,14,9,0],"span":[692,11,12]},{"path":[4,14,9,0,1],"span":[692,11,12]},{"path":[4,14,9,0,2],"span":[692,11,12]},{"path":[4,14,2,2],"span":[700,2,79],"leadingComments":" Enable the legacy handling of JSON field name conflicts.  This lowercases\n and strips underscored from the fields before comparison in proto3 only.\n The new behavior takes `json_name` into account and applies to proto2 as\n well.\n TODO(b/261750190) Remove this legacy behavior once downstream teams have\n had time to migrate.\n"},{"path":[4,14,2,2,4],"span":[700,2,10]},{"path":[4,14,2,2,5],"span":[700,11,15]},{"path":[4,14,2,2,1],"span":[700,16,54]},{"path":[4,14,2,2,3],"span":[700,57,58]},{"path":[4,14,2,2,8],"span":[700,59,78]},{"path":[4,14,2,2,8,3],"span":[700,60,77]},{"path":[4,14,2,3],"span":[703,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,14,2,3,4],"span":[703,2,10]},{"path":[4,14,2,3,6],"span":[703,11,30]},{"path":[4,14,2,3,1],"span":[703,31,51]},{"path":[4,14,2,3,3],"span":[703,54,57]},{"path":[4,14,5],"span":[706,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,14,5,0],"span":[706,13,24]},{"path":[4,14,5,0,1],"span":[706,13,17]},{"path":[4,14,5,0,2],"span":[706,21,24]},{"path":[4,15],"span":[709,0,721,1]},{"path":[4,15,1],"span":[709,8,24]},{"path":[4,15,2,0],"span":[714,2,49],"leadingComments":" Is this enum value deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum value, or it will be completely ignored; in the very least,\n this is a formalization for deprecating enum values.\n"},{"path":[4,15,2,0,4],"span":[714,2,10]},{"path":[4,15,2,0,5],"span":[714,11,15]},{"path":[4,15,2,0,1],"span":[714,16,26]},{"path":[4,15,2,0,3],"span":[714,29,30]},{"path":[4,15,2,0,8],"span":[714,31,48]},{"path":[4,15,2,0,7],"span":[714,32,47]},{"path":[4,15,2,1],"span":[717,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,15,2,1,4],"span":[717,2,10]},{"path":[4,15,2,1,6],"span":[717,11,30]},{"path":[4,15,2,1,1],"span":[717,31,51]},{"path":[4,15,2,1,3],"span":[717,54,57]},{"path":[4,15,5],"span":[720,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,15,5,0],"span":[720,13,24]},{"path":[4,15,5,0,1],"span":[720,13,17]},{"path":[4,15,5,0,2],"span":[720,21,24]},{"path":[4,16],"span":[723,0,741,1]},{"path":[4,16,1],"span":[723,8,22]},{"path":[4,16,2,0],"span":[734,2,50],"leadingComments":" Is this service deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the service, or it will be completely ignored; in the very least,\n this is a formalization for deprecating services.\n","leadingDetachedComments":[" Note:  Field numbers 1 through 32 are reserved for Google's internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n"]},{"path":[4,16,2,0,4],"span":[734,2,10]},{"path":[4,16,2,0,5],"span":[734,11,15]},{"path":[4,16,2,0,1],"span":[734,16,26]},{"path":[4,16,2,0,3],"span":[734,29,31]},{"path":[4,16,2,0,8],"span":[734,32,49]},{"path":[4,16,2,0,7],"span":[734,33,48]},{"path":[4,16,2,1],"span":[737,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,16,2,1,4],"span":[737,2,10]},{"path":[4,16,2,1,6],"span":[737,11,30]},{"path":[4,16,2,1,1],"span":[737,31,51]},{"path":[4,16,2,1,3],"span":[737,54,57]},{"path":[4,16,5],"span":[740,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,16,5,0],"span":[740,13,24]},{"path":[4,16,5,0,1],"span":[740,13,17]},{"path":[4,16,5,0,2],"span":[740,21,24]},{"path":[4,17],"span":[743,0,772,1]},{"path":[4,17,1],"span":[743,8,21]},{"path":[4,17,2,0],"span":[754,2,50],"leadingComments":" Is this method deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the method, or it will be completely ignored; in the very least,\n this is a formalization for deprecating methods.\n","leadingDetachedComments":[" Note:  Field numbers 1 through 32 are reserved for Google's internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n"]},{"path":[4,17,2,0,4],"span":[754,2,10]},{"path":[4,17,2,0,5],"span":[754,11,15]},{"path":[4,17,2,0,1],"span":[754,16,26]},{"path":[4,17,2,0,3],"span":[754,29,31]},{"path":[4,17,2,0,8],"span":[754,32,49]},{"path":[4,17,2,0,7],"span":[754,33,48]},{"path":[4,17,4,0],"span":[759,2,763,3],"leadingComments":" Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n or neither? HTTP based RPC implementation may choose GET verb for safe\n methods, and PUT verb for idempotent methods instead of the default POST.\n"},{"path":[4,17,4,0,1],"span":[759,7,23]},{"path":[4,17,4,0,2,0],"span":[760,4,28]},{"path":[4,17,4,0,2,0,1],"span":[760,4,23]},{"path":[4,17,4,0,2,0,2],"span":[760,26,27]},{"path":[4,17,4,0,2,1],"span":[761,4,24],"trailingComments":" implies idempotent\n"},{"path":[4,17,4,0,2,1,1],"span":[761,4,19]},{"path":[4,17,4,0,2,1,2],"span":[761,22,23]},{"path":[4,17,4,0,2,2],"span":[762,4,19],"trailingComments":" idempotent, but may have side effects\n"},{"path":[4,17,4,0,2,2,1],"span":[762,4,14]},{"path":[4,17,4,0,2,2,2],"span":[762,17,18]},{"path":[4,17,2,1],"span":[764,2,765,38]},{"path":[4,17,2,1,4],"span":[764,2,10]},{"path":[4,17,2,1,6],"span":[764,11,27]},{"path":[4,17,2,1,1],"span":[764,28,45]},{"path":[4,17,2,1,3],"span":[764,48,50]},{"path":[4,17,2,1,8],"span":[765,6,37]},{"path":[4,17,2,1,7],"span":[765,7,36]},{"path":[4,17,2,2],"span":[768,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,17,2,2,4],"span":[768,2,10]},{"path":[4,17,2,2,6],"span":[768,11,30]},{"path":[4,17,2,2,1],"span":[768,31,51]},{"path":[4,17,2,2,3],"span":[768,54,57]},{"path":[4,17,5],"span":[771,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,17,5,0],"span":[771,13,24]},{"path":[4,17,5,0,1],"span":[771,13,17]},{"path":[4,17,5,0,2],"span":[771,21,24]},{"path":[4,18],"span":[780,0,800,1],"leadingComments":" A message representing a option the parser does not recognize. This only\n appears in options protos created by the compiler::Parser class.\n DescriptorPool resolves these when building Descriptor objects. Therefore,\n options protos in descriptor objects (e.g. returned by Descriptor::options(),\n or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n in them.\n"},{"path":[4,18,1],"span":[780,8,27]},{"path":[4,18,3,0],"span":[786,2,789,3],"leadingComments":" The name of the uninterpreted option.  Each string represents a segment in\n a dot-separated name.  is_extension is true iff a segment represents an\n extension (denoted with parentheses in options specs in .proto files).\n E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"moo\", false] } represents\n \"foo.(bar.baz).moo\".\n"},{"path":[4,18,3,0,1],"span":[786,10,18]},{"path":[4,18,3,0,2,0],"span":[787,4,34]},{"path":[4,18,3,0,2,0,4],"span":[787,4,12]},{"path":[4,18,3,0,2,0,5],"span":[787,13,19]},{"path":[4,18,3,0,2,0,1],"span":[787,20,29]},{"path":[4,18,3,0,2,0,3],"span":[787,32,33]},{"path":[4,18,3,0,2,1],"span":[788,4,35]},{"path":[4,18,3,0,2,1,4],"span":[788,4,12]},{"path":[4,18,3,0,2,1,5],"span":[788,13,17]},{"path":[4,18,3,0,2,1,1],"span":[788,18,30]},{"path":[4,18,3,0,2,1,3],"span":[788,33,34]},{"path":[4,18,2,0],"span":[790,2,29]},{"path":[4,18,2,0,4],"span":[790,2,10]},{"path":[4,18,2,0,6],"span":[790,11,19]},{"path":[4,18,2,0,1],"span":[790,20,24]},{"path":[4,18,2,0,3],"span":[790,27,28]},{"path":[4,18,2,1],"span":[794,2,39],"leadingComments":" The value of the uninterpreted option, in whatever type the tokenizer\n identified it as during parsing. Exactly one of these should be set.\n"},{"path":[4,18,2,1,4],"span":[794,2,10]},{"path":[4,18,2,1,5],"span":[794,11,17]},{"path":[4,18,2,1,1],"span":[794,18,34]},{"path":[4,18,2,1,3],"span":[794,37,38]},{"path":[4,18,2,2],"span":[795,2,41]},{"path":[4,18,2,2,4],"span":[795,2,10]},{"path":[4,18,2,2,5],"span":[795,11,17]},{"path":[4,18,2,2,1],"span":[795,18,36]},{"path":[4,18,2,2,3],"span":[795,39,40]},{"path":[4,18,2,3],"span":[796,2,40]},{"path":[4,18,2,3,4],"span":[796,2,10]},{"path":[4,18,2,3,5],"span":[796,11,16]},{"path":[4,18,2,3,1],"span":[796,17,35]},{"path":[4,18,2,3,3],"span":[796,38,39]},{"path":[4,18,2,4],"span":[797,2,35]},{"path":[4,18,2,4,4],"span":[797,2,10]},{"path":[4,18,2,4,5],"span":[797,11,17]},{"path":[4,18,2,4,1],"span":[797,18,30]},{"path":[4,18,2,4,3],"span":[797,33,34]},{"path":[4,18,2,5],"span":[798,2,34]},{"path":[4,18,2,5,4],"span":[798,2,10]},{"path":[4,18,2,5,5],"span":[798,11,16]},{"path":[4,18,2,5,1],"span":[798,17,29]},{"path":[4,18,2,5,3],"span":[798,32,33]},{"path":[4,18,2,6],"span":[799,2,38]},{"path":[4,18,2,6,4],"span":[799,2,10]},{"path":[4,18,2,6,5],"span":[799,11,17]},{"path":[4,18,2,6,1],"span":[799,18,33]},{"path":[4,18,2,6,3],"span":[799,36,37]},{"path":[4,19],"span":[807,0,936,1],"leadingComments":" Encapsulates information about the original source file from which a\n FileDescriptorProto was generated.\n","leadingDetachedComments":[" ===================================================================\n Optional source code info\n"]},{"path":[4,19,1],"span":[807,8,22]},{"path":[4,19,2,0],"span":[851,2,33],"leadingComments":" A Location identifies a piece of source code in a .proto file which\n corresponds to a particular definition.  This information is intended\n to be useful to IDEs, code indexers, documentation generators, and similar\n tools.\n\n For example, say we have a file like:\n   message Foo {\n     optional string foo = 1;\n   }\n Let's look at just the field definition:\n   optional string foo = 1;\n   ^       ^^     ^^  ^  ^^^\n   a       bc     de  f  ghi\n We have the following locations:\n   span   path               represents\n   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n\n Notes:\n - A location may refer to a repeated field itself (i.e. not to any\n   particular index within it).  This is used whenever a set of elements are\n   logically enclosed in a single code segment.  For example, an entire\n   extend block (possibly containing multiple extension definitions) will\n   have an outer location whose path refers to the \"extensions\" repeated\n   field without an index.\n - Multiple locations may have the same path.  This happens when a single\n   logical declaration is spread out across multiple places.  The most\n   obvious example is the \"extend\" block again -- there may be multiple\n   extend blocks in the same scope, each of which will have the same path.\n - A location's span is not always a subset of its parent's span.  For\n   example, the \"extendee\" of an extension declaration appears at the\n   beginning of the \"extend\" block and is shared by all extensions within\n   the block.\n - Just because a location's span is a subset of some other location's span\n   does not mean that it is a descendant.  For example, a \"group\" defines\n   both a type and a field in a single declaration.  Thus, the locations\n   corresponding to the type and field and their components will overlap.\n - Code which tries to interpret locations should probably be designed to\n   ignore those that it doesn't understand, as more types of locations could\n   be recorded in the future.\n"},{"path":[4,19,2,0,4],"span":[851,2,10]},{"path":[4,19,2,0,6],"span":[851,11,19]},{"path":[4,19,2,0,1],"span":[851,20,28]},{"path":[4,19,2,0,3],"span":[851,31,32]},{"path":[4,19,3,0],"span":[852,2,935,3]},{"path":[4,19,3,0,1],"span":[852,10,18]},{"path":[4,19,3,0,2,0],"span":[876,4,44],"leadingComments":" Identifies which part of the FileDescriptorProto was defined at this\n location.\n\n Each element is a field number or an index.  They form a path from\n the root FileDescriptorProto to the place where the definition occurs.\n For example, this path:\n   [ 4, 3, 2, 7, 1 ]\n refers to:\n   file.message_type(3)  // 4, 3\n       .field(7)         // 2, 7\n       .name()           // 1\n This is because FileDescriptorProto.message_type has field number 4:\n   repeated DescriptorProto message_type = 4;\n and DescriptorProto.field has field number 2:\n   repeated FieldDescriptorProto field = 2;\n and FieldDescriptorProto.name has field number 1:\n   optional string name = 1;\n\n Thus, the above path gives the location of a field name.  If we removed\n the last element:\n   [ 4, 3, 2, 7 ]\n this path refers to the whole field declaration (from the beginning\n of the label to the terminating semicolon).\n"},{"path":[4,19,3,0,2,0,4],"span":[876,4,12]},{"path":[4,19,3,0,2,0,5],"span":[876,13,18]},{"path":[4,19,3,0,2,0,1],"span":[876,19,23]},{"path":[4,19,3,0,2,0,3],"span":[876,26,27]},{"path":[4,19,3,0,2,0,8],"span":[876,28,43]},{"path":[4,19,3,0,2,0,8,2],"span":[876,29,42]},{"path":[4,19,3,0,2,1],"span":[883,4,44],"leadingComments":" Always has exactly three or four elements: start line, start column,\n end line (optional, otherwise assumed same as start line), end column.\n These are packed into a single field for efficiency.  Note that line\n and column numbers are zero-based -- typically you will want to add\n 1 to each before displaying to a user.\n"},{"path":[4,19,3,0,2,1,4],"span":[883,4,12]},{"path":[4,19,3,0,2,1,5],"span":[883,13,18]},{"path":[4,19,3,0,2,1,1],"span":[883,19,23]},{"path":[4,19,3,0,2,1,3],"span":[883,26,27]},{"path":[4,19,3,0,2,1,8],"span":[883,28,43]},{"path":[4,19,3,0,2,1,8,2],"span":[883,29,42]},{"path":[4,19,3,0,2,2],"span":[932,4,41],"leadingComments":" If this SourceCodeInfo represents a complete declaration, these are any\n comments appearing before and after the declaration which appear to be\n attached to the declaration.\n\n A series of line comments appearing on consecutive lines, with no other\n tokens appearing on those lines, will be treated as a single comment.\n\n leading_detached_comments will keep paragraphs of comments that appear\n before (but not connected to) the current element. Each paragraph,\n separated by empty lines, will be one comment element in the repeated\n field.\n\n Only the comment content is provided; comment markers (e.g. //) are\n stripped out.  For block comments, leading whitespace and an asterisk\n will be stripped from the beginning of each line other than the first.\n Newlines are included in the output.\n\n Examples:\n\n   optional int32 foo = 1;  // Comment attached to foo.\n   // Comment attached to bar.\n   optional int32 bar = 2;\n\n   optional string baz = 3;\n   // Comment attached to baz.\n   // Another line attached to baz.\n\n   // Comment attached to moo.\n   //\n   // Another line attached to moo.\n   optional double moo = 4;\n\n   // Detached comment for corge. This is not leading or trailing comments\n   // to moo or corge because there are blank lines separating it from\n   // both.\n\n   // Detached comment for corge paragraph 2.\n\n   optional string corge = 5;\n   /* Block comment attached\n    * to corge.  Leading asterisks\n    * will be removed. */\n   /* Block comment attached to\n    * grault. */\n   optional int32 grault = 6;\n\n   // ignored detached comments.\n"},{"path":[4,19,3,0,2,2,4],"span":[932,4,12]},{"path":[4,19,3,0,2,2,5],"span":[932,13,19]},{"path":[4,19,3,0,2,2,1],"span":[932,20,36]},{"path":[4,19,3,0,2,2,3],"span":[932,39,40]},{"path":[4,19,3,0,2,3],"span":[933,4,42]},{"path":[4,19,3,0,2,3,4],"span":[933,4,12]},{"path":[4,19,3,0,2,3,5],"span":[933,13,19]},{"path":[4,19,3,0,2,3,1],"span":[933,20,37]},{"path":[4,19,3,0,2,3,3],"span":[933,40,41]},{"path":[4,19,3,0,2,4],"span":[934,4,50]},{"path":[4,19,3,0,2,4,4],"span":[934,4,12]},{"path":[4,19,3,0,2,4,5],"span":[934,13,19]},{"path":[4,19,3,0,2,4,1],"span":[934,20,45]},{"path":[4,19,3,0,2,4,3],"span":[934,48,49]},{"path":[4,20],"span":[941,0,974,1],"leadingComments":" Describes the relationship between generated code and its original source\n file. A GeneratedCodeInfo message is associated with only one generated\n source file, but may contain references to different source .proto files.\n"},{"path":[4,20,1],"span":[941,8,25]},{"path":[4,20,2,0],"span":[944,2,37],"leadingComments":" An Annotation connects some span of text in generated code to an element\n of its generating .proto file.\n"},{"path":[4,20,2,0,4],"span":[944,2,10]},{"path":[4,20,2,0,6],"span":[944,11,21]},{"path":[4,20,2,0,1],"span":[944,22,32]},{"path":[4,20,2,0,3],"span":[944,35,36]},{"path":[4,20,3,0],"span":[945,2,973,3]},{"path":[4,20,3,0,1],"span":[945,10,20]},{"path":[4,20,3,0,2,0],"span":[948,4,44],"leadingComments":" Identifies the element in the original source .proto file. This field\n is formatted the same as SourceCodeInfo.Location.path.\n"},{"path":[4,20,3,0,2,0,4],"span":[948,4,12]},{"path":[4,20,3,0,2,0,5],"span":[948,13,18]},{"path":[4,20,3,0,2,0,1],"span":[948,19,23]},{"path":[4,20,3,0,2,0,3],"span":[948,26,27]},{"path":[4,20,3,0,2,0,8],"span":[948,28,43]},{"path":[4,20,3,0,2,0,8,2],"span":[948,29,42]},{"path":[4,20,3,0,2,1],"span":[951,4,36],"leadingComments":" Identifies the filesystem path to the original source .proto.\n"},{"path":[4,20,3,0,2,1,4],"span":[951,4,12]},{"path":[4,20,3,0,2,1,5],"span":[951,13,19]},{"path":[4,20,3,0,2,1,1],"span":[951,20,31]},{"path":[4,20,3,0,2,1,3],"span":[951,34,35]},{"path":[4,20,3,0,2,2],"span":[955,4,29],"leadingComments":" Identifies the starting offset in bytes in the generated code\n that relates to the identified object.\n"},{"path":[4,20,3,0,2,2,4],"span":[955,4,12]},{"path":[4,20,3,0,2,2,5],"span":[955,13,18]},{"path":[4,20,3,0,2,2,1],"span":[955,19,24]},{"path":[4,20,3,0,2,2,3],"span":[955,27,28]},{"path":[4,20,3,0,2,3],"span":[960,4,27],"leadingComments":" Identifies the ending offset in bytes in the generated code that\n relates to the identified object. The end offset should be one past\n the last relevant byte (so the length of the text = end - begin).\n"},{"path":[4,20,3,0,2,3,4],"span":[960,4,12]},{"path":[4,20,3,0,2,3,5],"span":[960,13,18]},{"path":[4,20,3,0,2,3,1],"span":[960,19,22]},{"path":[4,20,3,0,2,3,3],"span":[960,25,26]},{"path":[4,20,3,0,4,0],"span":[964,4,971,5],"leadingComments":" Represents the identified object's effect on the element in the original\n .proto file.\n"},{"path":[4,20,3,0,4,0,1],"span":[964,9,17]},{"path":[4,20,3,0,4,0,2,0],"span":[966,6,15],"leadingComments":" There is no effect or the effect is indescribable.\n"},{"path":[4,20,3,0,4,0,2,0,1],"span":[966,6,10]},{"path":[4,20,3,0,4,0,2,0,2],"span":[966,13,14]},{"path":[4,20,3,0,4,0,2,1],"span":[968,6,14],"leadingComments":" The element is set or otherwise mutated.\n"},{"path":[4,20,3,0,4,0,2,1,1],"span":[968,6,9]},{"path":[4,20,3,0,4,0,2,1,2],"span":[968,12,13]},{"path":[4,20,3,0,4,0,2,2],"span":[970,6,16],"leadingComments":" An alias to the element is returned.\n"},{"path":[4,20,3,0,4,0,2,2,1],"span":[970,6,11]},{"path":[4,20,3,0,4,0,2,2,2],"span":[970,14,15]},{"path":[4,20,3,0,2,4],"span":[972,4,35]},{"path":[4,20,3,0,2,4,4],"span":[972,4,12]},{"path":[4,20,3,0,2,4,6],"span":[972,13,21]},{"path":[4,20,3,0,2,4,1],"span":[972,22,30]},{"path":[4,20,3,0,2,4,3],"span":[972,33,34]}]},"bufExtension":{"isImport":true,"isSyntaxUnspecified":false}},{"name":"google/api/annotations.proto","package":"google.api","dependency":["google/api/http.proto","google/protobuf/descriptor.proto"],"extension":[{"name":"http","number":72295728,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.HttpRule","extendee":".google.protobuf.MethodOptions","jsonName":"http"}],"options":{"javaPackage":"com.google.api","javaOuterClassname":"AnnotationsProto","javaMultipleFiles":true,"goPackage":"google.golang.org/genproto/googleapis/api/annotations;annotations","objcClassPrefix":"GAPI"},"sourceCodeInfo":{"location":[{"span":[14,0,30,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2015 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,19]},{"path":[3,0],"span":[18,0,31]},{"path":[3,1],"span":[19,0,42]},{"path":[8],"span":[21,0,88]},{"path":[8,11],"span":[21,0,88]},{"path":[8],"span":[22,0,34]},{"path":[8,10],"span":[22,0,34]},{"path":[8],"span":[23,0,49]},{"path":[8,8],"span":[23,0,49]},{"path":[8],"span":[24,0,39]},{"path":[8,1],"span":[24,0,39]},{"path":[8],"span":[25,0,34]},{"path":[8,36],"span":[25,0,34]},{"path":[7],"span":[27,0,30,1]},{"path":[7,0],"span":[29,2,27],"leadingComments":" See `HttpRule`.\n"},{"path":[7,0,2],"span":[27,7,36]},{"path":[7,0,6],"span":[29,2,10]},{"path":[7,0,1],"span":[29,11,15]},{"path":[7,0,3],"span":[29,18,26]}]},"syntax":"proto3","bufExtension":{"isImport":true,"moduleInfo":{"name":{"remote":"buf.build","owner":"googleapis","repository":"googleapis"},"commit":"cc916c31859748a68fd229a3c8d7a2e8"},"isSyntaxUnspecified":false}},{"name":"google/api/launch_stage.proto","package":"google.api","enumType":[{"name":"LaunchStage","value":[{"name":"LAUNCH_STAGE_UNSPECIFIED","number":0},{"name":"UNIMPLEMENTED","number":6},{"name":"PRELAUNCH","number":7},{"name":"EARLY_ACCESS","number":1},{"name":"ALPHA","number":2},{"name":"BETA","number":3},{"name":"GA","number":4},{"name":"DEPRECATED","number":5}]}],"options":{"javaPackage":"com.google.api","javaOuterClassname":"LaunchStageProto","javaMultipleFiles":true,"goPackage":"google.golang.org/genproto/googleapis/api;api","objcClassPrefix":"GAPI"},"sourceCodeInfo":{"location":[{"span":[14,0,71,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2023 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,19]},{"path":[8],"span":[18,0,68]},{"path":[8,11],"span":[18,0,68]},{"path":[8],"span":[19,0,34]},{"path":[8,10],"span":[19,0,34]},{"path":[8],"span":[20,0,49]},{"path":[8,8],"span":[20,0,49]},{"path":[8],"span":[21,0,39]},{"path":[8,1],"span":[21,0,39]},{"path":[8],"span":[22,0,34]},{"path":[8,36],"span":[22,0,34]},{"path":[5,0],"span":[26,0,71,1],"leadingComments":" The launch stage as defined by [Google Cloud Platform\n Launch Stages](https://cloud.google.com/terms/launch-stages).\n"},{"path":[5,0,1],"span":[26,5,16]},{"path":[5,0,2,0],"span":[28,2,31],"leadingComments":" Do not use this default value.\n"},{"path":[5,0,2,0,1],"span":[28,2,26]},{"path":[5,0,2,0,2],"span":[28,29,30]},{"path":[5,0,2,1],"span":[31,2,20],"leadingComments":" The feature is not yet implemented. Users can not use it.\n"},{"path":[5,0,2,1,1],"span":[31,2,15]},{"path":[5,0,2,1,2],"span":[31,18,19]},{"path":[5,0,2,2],"span":[34,2,16],"leadingComments":" Prelaunch features are hidden from users and are only visible internally.\n"},{"path":[5,0,2,2,1],"span":[34,2,11]},{"path":[5,0,2,2,2],"span":[34,14,15]},{"path":[5,0,2,3],"span":[41,2,19],"leadingComments":" Early Access features are limited to a closed group of testers. To use\n these features, you must sign up in advance and sign a Trusted Tester\n agreement (which includes confidentiality provisions). These features may\n be unstable, changed in backward-incompatible ways, and are not\n guaranteed to be released.\n"},{"path":[5,0,2,3,1],"span":[41,2,14]},{"path":[5,0,2,3,2],"span":[41,17,18]},{"path":[5,0,2,4],"span":[52,2,12],"leadingComments":" Alpha is a limited availability test for releases before they are cleared\n for widespread use. By Alpha, all significant design issues are resolved\n and we are in the process of verifying functionality. Alpha customers\n need to apply for access, agree to applicable terms, and have their\n projects allowlisted. Alpha releases don't have to be feature complete,\n no SLAs are provided, and there are no technical support obligations, but\n they will be far enough along that customers can actually use them in\n test environments or for limited-use tests -- just like they would in\n normal production cases.\n"},{"path":[5,0,2,4,1],"span":[52,2,7]},{"path":[5,0,2,4,2],"span":[52,10,11]},{"path":[5,0,2,5],"span":[59,2,11],"leadingComments":" Beta is the point at which we are ready to open a release for any\n customer to use. There are no SLA or technical support obligations in a\n Beta release. Products will be complete from a feature perspective, but\n may have some open outstanding issues. Beta releases are suitable for\n limited production use cases.\n"},{"path":[5,0,2,5,1],"span":[59,2,6]},{"path":[5,0,2,5,2],"span":[59,9,10]},{"path":[5,0,2,6],"span":[63,2,9],"leadingComments":" GA features are open to all developers and are considered stable and\n fully qualified for production use.\n"},{"path":[5,0,2,6,1],"span":[63,2,4]},{"path":[5,0,2,6,2],"span":[63,7,8]},{"path":[5,0,2,7],"span":[70,2,17],"leadingComments":" Deprecated features are scheduled to be shut down and removed. For more\n information, see the \"Deprecation Policy\" section of our [Terms of\n Service](https://cloud.google.com/terms/)\n and the [Google Cloud Platform Subject to the Deprecation\n Policy](https://cloud.google.com/terms/deprecation) documentation.\n"},{"path":[5,0,2,7,1],"span":[70,2,12]},{"path":[5,0,2,7,2],"span":[70,15,16]}]},"syntax":"proto3","bufExtension":{"isImport":true,"moduleInfo":{"name":{"remote":"buf.build","owner":"googleapis","repository":"googleapis"},"commit":"cc916c31859748a68fd229a3c8d7a2e8"},"isSyntaxUnspecified":false}},{"name":"google/protobuf/duration.proto","package":"google.protobuf","messageType":[{"name":"Duration","field":[{"name":"seconds","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"seconds"},{"name":"nanos","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"nanos"}]}],"options":{"javaPackage":"com.google.protobuf","javaOuterClassname":"DurationProto","javaMultipleFiles":true,"goPackage":"google.golang.org/protobuf/types/known/durationpb","ccEnableArenas":true,"objcClassPrefix":"GPB","csharpNamespace":"Google.Protobuf.WellKnownTypes"},"sourceCodeInfo":{"location":[{"span":[30,0,114,1]},{"path":[12],"span":[30,0,18],"leadingDetachedComments":[" Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"]},{"path":[2],"span":[32,0,24]},{"path":[8],"span":[34,0,31]},{"path":[8,31],"span":[34,0,31]},{"path":[8],"span":[35,0,72]},{"path":[8,11],"span":[35,0,72]},{"path":[8],"span":[36,0,44]},{"path":[8,1],"span":[36,0,44]},{"path":[8],"span":[37,0,46]},{"path":[8,8],"span":[37,0,46]},{"path":[8],"span":[38,0,34]},{"path":[8,10],"span":[38,0,34]},{"path":[8],"span":[39,0,33]},{"path":[8,36],"span":[39,0,33]},{"path":[8],"span":[40,0,59]},{"path":[8,37],"span":[40,0,59]},{"path":[4,0],"span":[101,0,114,1],"leadingComments":" A Duration represents a signed, fixed-length span of time represented\n as a count of seconds and fractions of seconds at nanosecond\n resolution. It is independent of any calendar and concepts like \"day\"\n or \"month\". It is related to Timestamp in that the difference between\n two Timestamp values is a Duration and it can be added or subtracted\n from a Timestamp. Range is approximately +-10,000 years.\n\n # Examples\n\n Example 1: Compute Duration from two Timestamps in pseudo code.\n\n     Timestamp start = ...;\n     Timestamp end = ...;\n     Duration duration = ...;\n\n     duration.seconds = end.seconds - start.seconds;\n     duration.nanos = end.nanos - start.nanos;\n\n     if (duration.seconds < 0 && duration.nanos > 0) {\n       duration.seconds += 1;\n       duration.nanos -= 1000000000;\n     } else if (duration.seconds > 0 && duration.nanos < 0) {\n       duration.seconds -= 1;\n       duration.nanos += 1000000000;\n     }\n\n Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.\n\n     Timestamp start = ...;\n     Duration duration = ...;\n     Timestamp end = ...;\n\n     end.seconds = start.seconds + duration.seconds;\n     end.nanos = start.nanos + duration.nanos;\n\n     if (end.nanos < 0) {\n       end.seconds -= 1;\n       end.nanos += 1000000000;\n     } else if (end.nanos >= 1000000000) {\n       end.seconds += 1;\n       end.nanos -= 1000000000;\n     }\n\n Example 3: Compute Duration from datetime.timedelta in Python.\n\n     td = datetime.timedelta(days=3, minutes=10)\n     duration = Duration()\n     duration.FromTimedelta(td)\n\n # JSON Mapping\n\n In JSON format, the Duration type is encoded as a string rather than an\n object, where the string ends in the suffix \"s\" (indicating seconds) and\n is preceded by the number of seconds, with nanoseconds expressed as\n fractional seconds. For example, 3 seconds with 0 nanoseconds should be\n encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should\n be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1\n microsecond should be expressed in JSON format as \"3.000001s\".\n\n"},{"path":[4,0,1],"span":[101,8,16]},{"path":[4,0,2,0],"span":[105,2,20],"leadingComments":" Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n"},{"path":[4,0,2,0,5],"span":[105,2,7]},{"path":[4,0,2,0,1],"span":[105,8,15]},{"path":[4,0,2,0,3],"span":[105,18,19]},{"path":[4,0,2,1],"span":[113,2,18],"leadingComments":" Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.\n"},{"path":[4,0,2,1,5],"span":[113,2,7]},{"path":[4,0,2,1,1],"span":[113,8,13]},{"path":[4,0,2,1,3],"span":[113,16,17]}]},"syntax":"proto3","bufExtension":{"isImport":true,"isSyntaxUnspecified":false}},{"name":"google/api/client.proto","package":"google.api","dependency":["google/api/launch_stage.proto","google/protobuf/descriptor.proto","google/protobuf/duration.proto"],"messageType":[{"name":"CommonLanguageSettings","field":[{"name":"reference_docs_uri","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"referenceDocsUri","options":{"deprecated":true}},{"name":"destinations","number":2,"label":"LABEL_REPEATED","type":"TYPE_ENUM","typeName":".google.api.ClientLibraryDestination","jsonName":"destinations"}]},{"name":"ClientLibrarySettings","field":[{"name":"version","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"version"},{"name":"launch_stage","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.api.LaunchStage","jsonName":"launchStage"},{"name":"rest_numeric_enums","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"restNumericEnums"},{"name":"java_settings","number":21,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.JavaSettings","jsonName":"javaSettings"},{"name":"cpp_settings","number":22,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.CppSettings","jsonName":"cppSettings"},{"name":"php_settings","number":23,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.PhpSettings","jsonName":"phpSettings"},{"name":"python_settings","number":24,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.PythonSettings","jsonName":"pythonSettings"},{"name":"node_settings","number":25,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.NodeSettings","jsonName":"nodeSettings"},{"name":"dotnet_settings","number":26,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.DotnetSettings","jsonName":"dotnetSettings"},{"name":"ruby_settings","number":27,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.RubySettings","jsonName":"rubySettings"},{"name":"go_settings","number":28,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.GoSettings","jsonName":"goSettings"}]},{"name":"Publishing","field":[{"name":"method_settings","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.api.MethodSettings","jsonName":"methodSettings"},{"name":"new_issue_uri","number":101,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"newIssueUri"},{"name":"documentation_uri","number":102,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"documentationUri"},{"name":"api_short_name","number":103,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"apiShortName"},{"name":"github_label","number":104,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"githubLabel"},{"name":"codeowner_github_teams","number":105,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"codeownerGithubTeams"},{"name":"doc_tag_prefix","number":106,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"docTagPrefix"},{"name":"organization","number":107,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.api.ClientLibraryOrganization","jsonName":"organization"},{"name":"library_settings","number":109,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.api.ClientLibrarySettings","jsonName":"librarySettings"},{"name":"proto_reference_documentation_uri","number":110,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"protoReferenceDocumentationUri"}]},{"name":"JavaSettings","field":[{"name":"library_package","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"libraryPackage"},{"name":"service_class_names","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.api.JavaSettings.ServiceClassNamesEntry","jsonName":"serviceClassNames"},{"name":"common","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.CommonLanguageSettings","jsonName":"common"}],"nestedType":[{"name":"ServiceClassNamesEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"value"}],"options":{"mapEntry":true}}]},{"name":"CppSettings","field":[{"name":"common","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.CommonLanguageSettings","jsonName":"common"}]},{"name":"PhpSettings","field":[{"name":"common","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.CommonLanguageSettings","jsonName":"common"}]},{"name":"PythonSettings","field":[{"name":"common","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.CommonLanguageSettings","jsonName":"common"}]},{"name":"NodeSettings","field":[{"name":"common","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.CommonLanguageSettings","jsonName":"common"}]},{"name":"DotnetSettings","field":[{"name":"common","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.CommonLanguageSettings","jsonName":"common"},{"name":"renamed_services","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.api.DotnetSettings.RenamedServicesEntry","jsonName":"renamedServices"},{"name":"renamed_resources","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.api.DotnetSettings.RenamedResourcesEntry","jsonName":"renamedResources"},{"name":"ignored_resources","number":4,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"ignoredResources"},{"name":"forced_namespace_aliases","number":5,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"forcedNamespaceAliases"},{"name":"handwritten_signatures","number":6,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"handwrittenSignatures"}],"nestedType":[{"name":"RenamedServicesEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"value"}],"options":{"mapEntry":true}},{"name":"RenamedResourcesEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"value"}],"options":{"mapEntry":true}}]},{"name":"RubySettings","field":[{"name":"common","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.CommonLanguageSettings","jsonName":"common"}]},{"name":"GoSettings","field":[{"name":"common","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.CommonLanguageSettings","jsonName":"common"}]},{"name":"MethodSettings","field":[{"name":"selector","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"selector"},{"name":"long_running","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.MethodSettings.LongRunning","jsonName":"longRunning"}],"nestedType":[{"name":"LongRunning","field":[{"name":"initial_poll_delay","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Duration","jsonName":"initialPollDelay"},{"name":"poll_delay_multiplier","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_FLOAT","jsonName":"pollDelayMultiplier"},{"name":"max_poll_delay","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Duration","jsonName":"maxPollDelay"},{"name":"total_poll_timeout","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Duration","jsonName":"totalPollTimeout"}]}]}],"enumType":[{"name":"ClientLibraryOrganization","value":[{"name":"CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED","number":0},{"name":"CLOUD","number":1},{"name":"ADS","number":2},{"name":"PHOTOS","number":3},{"name":"STREET_VIEW","number":4},{"name":"SHOPPING","number":5},{"name":"GEO","number":6},{"name":"GENERATIVE_AI","number":7}]},{"name":"ClientLibraryDestination","value":[{"name":"CLIENT_LIBRARY_DESTINATION_UNSPECIFIED","number":0},{"name":"GITHUB","number":10},{"name":"PACKAGE_MANAGER","number":20}]}],"extension":[{"name":"method_signature","number":1051,"label":"LABEL_REPEATED","type":"TYPE_STRING","extendee":".google.protobuf.MethodOptions","jsonName":"methodSignature"},{"name":"default_host","number":1049,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","extendee":".google.protobuf.ServiceOptions","jsonName":"defaultHost"},{"name":"oauth_scopes","number":1050,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","extendee":".google.protobuf.ServiceOptions","jsonName":"oauthScopes"}],"options":{"javaPackage":"com.google.api","javaOuterClassname":"ClientProto","javaMultipleFiles":true,"goPackage":"google.golang.org/genproto/googleapis/api/annotations;annotations","objcClassPrefix":"GAPI"},"sourceCodeInfo":{"location":[{"span":[14,0,393,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2023 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,19]},{"path":[3,0],"span":[18,0,39]},{"path":[3,1],"span":[19,0,42]},{"path":[3,2],"span":[20,0,40]},{"path":[8],"span":[22,0,88]},{"path":[8,11],"span":[22,0,88]},{"path":[8],"span":[23,0,34]},{"path":[8,10],"span":[23,0,34]},{"path":[8],"span":[24,0,44]},{"path":[8,8],"span":[24,0,44]},{"path":[8],"span":[25,0,39]},{"path":[8,1],"span":[25,0,39]},{"path":[8],"span":[26,0,34]},{"path":[8,36],"span":[26,0,34]},{"path":[7],"span":[28,0,65,1]},{"path":[7,0],"span":[64,2,42],"leadingComments":" A definition of a client library method signature.\n\n In client libraries, each proto RPC corresponds to one or more methods\n which the end user is able to call, and calls the underlying RPC.\n Normally, this method receives a single argument (a struct or instance\n corresponding to the RPC request object). Defining this field will\n add one or more overloads providing flattened or simpler method signatures\n in some languages.\n\n The fields on the method signature are provided as a comma-separated\n string.\n\n For example, the proto RPC and annotation:\n\n   rpc CreateSubscription(CreateSubscriptionRequest)\n       returns (Subscription) {\n     option (google.api.method_signature) = \"name,topic\";\n   }\n\n Would add the following Java overload (in addition to the method accepting\n the request object):\n\n   public final Subscription createSubscription(String name, String topic)\n\n The following backwards-compatibility guidelines apply:\n\n   * Adding this annotation to an unannotated method is backwards\n     compatible.\n   * Adding this annotation to a method which already has existing\n     method signature annotations is backwards compatible if and only if\n     the new method signature annotation is last in the sequence.\n   * Modifying or removing an existing method signature annotation is\n     a breaking change.\n   * Re-ordering existing method signature annotations is a breaking\n     change.\n"},{"path":[7,0,2],"span":[28,7,36]},{"path":[7,0,4],"span":[64,2,10]},{"path":[7,0,5],"span":[64,11,17]},{"path":[7,0,1],"span":[64,18,34]},{"path":[7,0,3],"span":[64,37,41]},{"path":[7],"span":[67,0,100,1]},{"path":[7,1],"span":[77,2,29],"leadingComments":" The hostname for this service.\n This should be specified with no prefix or protocol.\n\n Example:\n\n   service Foo {\n     option (google.api.default_host) = \"foo.googleapi.com\";\n     ...\n   }\n"},{"path":[7,1,2],"span":[67,7,37]},{"path":[7,1,5],"span":[77,2,8]},{"path":[7,1,1],"span":[77,9,21]},{"path":[7,1,3],"span":[77,24,28]},{"path":[7,2],"span":[99,2,29],"leadingComments":" OAuth scopes needed for the client.\n\n Example:\n\n   service Foo {\n     option (google.api.oauth_scopes) = \\\n       \"https://www.googleapis.com/auth/cloud-platform\";\n     ...\n   }\n\n If there is more than one scope, use a comma-separated string:\n\n Example:\n\n   service Foo {\n     option (google.api.oauth_scopes) = \\\n       \"https://www.googleapis.com/auth/cloud-platform,\"\n       \"https://www.googleapis.com/auth/monitoring\";\n     ...\n   }\n"},{"path":[7,2,2],"span":[67,7,37]},{"path":[7,2,5],"span":[99,2,8]},{"path":[7,2,1],"span":[99,9,21]},{"path":[7,2,3],"span":[99,24,28]},{"path":[4,0],"span":[103,0,110,1],"leadingComments":" Required information for every language.\n"},{"path":[4,0,1],"span":[103,8,30]},{"path":[4,0,2,0],"span":[106,2,52],"leadingComments":" Link to automatically generated reference documentation.  Example:\n https://cloud.google.com/nodejs/docs/reference/asset/latest\n"},{"path":[4,0,2,0,5],"span":[106,2,8]},{"path":[4,0,2,0,1],"span":[106,9,27]},{"path":[4,0,2,0,3],"span":[106,30,31]},{"path":[4,0,2,0,8],"span":[106,32,51]},{"path":[4,0,2,0,8,3],"span":[106,33,50]},{"path":[4,0,2,1],"span":[109,2,53],"leadingComments":" The destination where API teams want this client library to be published.\n"},{"path":[4,0,2,1,4],"span":[109,2,10]},{"path":[4,0,2,1,6],"span":[109,11,35]},{"path":[4,0,2,1,1],"span":[109,36,48]},{"path":[4,0,2,1,3],"span":[109,51,52]},{"path":[4,1],"span":[113,0,149,1],"leadingComments":" Details about how and where to publish client libraries.\n"},{"path":[4,1,1],"span":[113,8,29]},{"path":[4,1,2,0],"span":[117,2,21],"leadingComments":" Version of the API to apply these settings to. This is the full protobuf\n package for the API, ending in the version element.\n Examples: \"google.cloud.speech.v1\" and \"google.spanner.admin.database.v1\".\n"},{"path":[4,1,2,0,5],"span":[117,2,8]},{"path":[4,1,2,0,1],"span":[117,9,16]},{"path":[4,1,2,0,3],"span":[117,19,20]},{"path":[4,1,2,1],"span":[120,2,31],"leadingComments":" Launch stage of this version of the API.\n"},{"path":[4,1,2,1,6],"span":[120,2,13]},{"path":[4,1,2,1,1],"span":[120,14,26]},{"path":[4,1,2,1,3],"span":[120,29,30]},{"path":[4,1,2,2],"span":[124,2,30],"leadingComments":" When using transport=rest, the client request will encode enums as\n numbers rather than strings.\n"},{"path":[4,1,2,2,5],"span":[124,2,6]},{"path":[4,1,2,2,1],"span":[124,7,25]},{"path":[4,1,2,2,3],"span":[124,28,29]},{"path":[4,1,2,3],"span":[127,2,34],"leadingComments":" Settings for legacy Java features, supported in the Service YAML.\n"},{"path":[4,1,2,3,6],"span":[127,2,14]},{"path":[4,1,2,3,1],"span":[127,15,28]},{"path":[4,1,2,3,3],"span":[127,31,33]},{"path":[4,1,2,4],"span":[130,2,32],"leadingComments":" Settings for C++ client libraries.\n"},{"path":[4,1,2,4,6],"span":[130,2,13]},{"path":[4,1,2,4,1],"span":[130,14,26]},{"path":[4,1,2,4,3],"span":[130,29,31]},{"path":[4,1,2,5],"span":[133,2,32],"leadingComments":" Settings for PHP client libraries.\n"},{"path":[4,1,2,5,6],"span":[133,2,13]},{"path":[4,1,2,5,1],"span":[133,14,26]},{"path":[4,1,2,5,3],"span":[133,29,31]},{"path":[4,1,2,6],"span":[136,2,38],"leadingComments":" Settings for Python client libraries.\n"},{"path":[4,1,2,6,6],"span":[136,2,16]},{"path":[4,1,2,6,1],"span":[136,17,32]},{"path":[4,1,2,6,3],"span":[136,35,37]},{"path":[4,1,2,7],"span":[139,2,34],"leadingComments":" Settings for Node client libraries.\n"},{"path":[4,1,2,7,6],"span":[139,2,14]},{"path":[4,1,2,7,1],"span":[139,15,28]},{"path":[4,1,2,7,3],"span":[139,31,33]},{"path":[4,1,2,8],"span":[142,2,38],"leadingComments":" Settings for .NET client libraries.\n"},{"path":[4,1,2,8,6],"span":[142,2,16]},{"path":[4,1,2,8,1],"span":[142,17,32]},{"path":[4,1,2,8,3],"span":[142,35,37]},{"path":[4,1,2,9],"span":[145,2,34],"leadingComments":" Settings for Ruby client libraries.\n"},{"path":[4,1,2,9,6],"span":[145,2,14]},{"path":[4,1,2,9,1],"span":[145,15,28]},{"path":[4,1,2,9,3],"span":[145,31,33]},{"path":[4,1,2,10],"span":[148,2,30],"leadingComments":" Settings for Go client libraries.\n"},{"path":[4,1,2,10,6],"span":[148,2,12]},{"path":[4,1,2,10,1],"span":[148,13,24]},{"path":[4,1,2,10,3],"span":[148,27,29]},{"path":[4,2],"span":[154,0,194,1],"leadingComments":" This message configures the settings for publishing [Google Cloud Client\n libraries](https://cloud.google.com/apis/docs/cloud-client-libraries)\n generated from the service config.\n"},{"path":[4,2,1],"span":[154,8,18]},{"path":[4,2,2,0],"span":[157,2,46],"leadingComments":" A list of API method settings, e.g. the behavior for methods that use the\n long-running operation pattern.\n"},{"path":[4,2,2,0,4],"span":[157,2,10]},{"path":[4,2,2,0,6],"span":[157,11,25]},{"path":[4,2,2,0,1],"span":[157,26,41]},{"path":[4,2,2,0,3],"span":[157,44,45]},{"path":[4,2,2,1],"span":[161,2,29],"leadingComments":" Link to a *public* URI where users can report issues.  Example:\n https://issuetracker.google.com/issues/new?component=190865&template=1161103\n"},{"path":[4,2,2,1,5],"span":[161,2,8]},{"path":[4,2,2,1,1],"span":[161,9,22]},{"path":[4,2,2,1,3],"span":[161,25,28]},{"path":[4,2,2,2],"span":[165,2,33],"leadingComments":" Link to product home page.  Example:\n https://cloud.google.com/asset-inventory/docs/overview\n"},{"path":[4,2,2,2,5],"span":[165,2,8]},{"path":[4,2,2,2,1],"span":[165,9,26]},{"path":[4,2,2,2,3],"span":[165,29,32]},{"path":[4,2,2,3],"span":[170,2,30],"leadingComments":" Used as a tracking tag when collecting data about the APIs developer\n relations artifacts like docs, packages delivered to package managers,\n etc.  Example: \"speech\".\n"},{"path":[4,2,2,3,5],"span":[170,2,8]},{"path":[4,2,2,3,1],"span":[170,9,23]},{"path":[4,2,2,3,3],"span":[170,26,29]},{"path":[4,2,2,4],"span":[173,2,28],"leadingComments":" GitHub label to apply to issues and pull requests opened for this API.\n"},{"path":[4,2,2,4,5],"span":[173,2,8]},{"path":[4,2,2,4,1],"span":[173,9,21]},{"path":[4,2,2,4,3],"span":[173,24,27]},{"path":[4,2,2,5],"span":[177,2,47],"leadingComments":" GitHub teams to be added to CODEOWNERS in the directory in GitHub\n containing source code for the client libraries for this API.\n"},{"path":[4,2,2,5,4],"span":[177,2,10]},{"path":[4,2,2,5,5],"span":[177,11,17]},{"path":[4,2,2,5,1],"span":[177,18,40]},{"path":[4,2,2,5,3],"span":[177,43,46]},{"path":[4,2,2,6],"span":[181,2,30],"leadingComments":" A prefix used in sample code when demarking regions to be included in\n documentation.\n"},{"path":[4,2,2,6,5],"span":[181,2,8]},{"path":[4,2,2,6,1],"span":[181,9,23]},{"path":[4,2,2,6,3],"span":[181,26,29]},{"path":[4,2,2,7],"span":[184,2,47],"leadingComments":" For whom the client library is being published.\n"},{"path":[4,2,2,7,6],"span":[184,2,27]},{"path":[4,2,2,7,1],"span":[184,28,40]},{"path":[4,2,2,7,3],"span":[184,43,46]},{"path":[4,2,2,8],"span":[189,2,56],"leadingComments":" Client library settings.  If the same version string appears multiple\n times in this list, then the last one wins.  Settings from earlier\n settings with the same version string are discarded.\n"},{"path":[4,2,2,8,4],"span":[189,2,10]},{"path":[4,2,2,8,6],"span":[189,11,32]},{"path":[4,2,2,8,1],"span":[189,33,49]},{"path":[4,2,2,8,3],"span":[189,52,55]},{"path":[4,2,2,9],"span":[193,2,49],"leadingComments":" Optional link to proto reference documentation.  Example:\n https://cloud.google.com/pubsub/lite/docs/reference/rpc\n"},{"path":[4,2,2,9,5],"span":[193,2,8]},{"path":[4,2,2,9,1],"span":[193,9,42]},{"path":[4,2,2,9,3],"span":[193,45,48]},{"path":[4,3],"span":[197,0,229,1],"leadingComments":" Settings for Java client libraries.\n"},{"path":[4,3,1],"span":[197,8,20]},{"path":[4,3,2,0],"span":[209,2,29],"leadingComments":" The package name to use in Java. Clobbers the java_package option\n set in the protobuf. This should be used **only** by APIs\n who have already set the language_settings.java.package_name\" field\n in gapic.yaml. API teams should use the protobuf java_package option\n where possible.\n\n Example of a YAML configuration::\n\n  publishing:\n    java_settings:\n      library_package: com.google.cloud.pubsub.v1\n"},{"path":[4,3,2,0,5],"span":[209,2,8]},{"path":[4,3,2,0,1],"span":[209,9,24]},{"path":[4,3,2,0,3],"span":[209,27,28]},{"path":[4,3,2,1],"span":[225,2,46],"leadingComments":" Configure the Java class name to use instead of the service's for its\n corresponding generated GAPIC client. Keys are fully-qualified\n service names as they appear in the protobuf (including the full\n the language_settings.java.interface_names\" field in gapic.yaml. API\n teams should otherwise use the service name as it appears in the\n protobuf.\n\n Example of a YAML configuration::\n\n  publishing:\n    java_settings:\n      service_class_names:\n        - google.pubsub.v1.Publisher: TopicAdmin\n        - google.pubsub.v1.Subscriber: SubscriptionAdmin\n"},{"path":[4,3,2,1,6],"span":[225,2,21]},{"path":[4,3,2,1,1],"span":[225,22,41]},{"path":[4,3,2,1,3],"span":[225,44,45]},{"path":[4,3,2,2],"span":[228,2,36],"leadingComments":" Some settings.\n"},{"path":[4,3,2,2,6],"span":[228,2,24]},{"path":[4,3,2,2,1],"span":[228,25,31]},{"path":[4,3,2,2,3],"span":[228,34,35]},{"path":[4,4],"span":[232,0,235,1],"leadingComments":" Settings for C++ client libraries.\n"},{"path":[4,4,1],"span":[232,8,19]},{"path":[4,4,2,0],"span":[234,2,36],"leadingComments":" Some settings.\n"},{"path":[4,4,2,0,6],"span":[234,2,24]},{"path":[4,4,2,0,1],"span":[234,25,31]},{"path":[4,4,2,0,3],"span":[234,34,35]},{"path":[4,5],"span":[238,0,241,1],"leadingComments":" Settings for Php client libraries.\n"},{"path":[4,5,1],"span":[238,8,19]},{"path":[4,5,2,0],"span":[240,2,36],"leadingComments":" Some settings.\n"},{"path":[4,5,2,0,6],"span":[240,2,24]},{"path":[4,5,2,0,1],"span":[240,25,31]},{"path":[4,5,2,0,3],"span":[240,34,35]},{"path":[4,6],"span":[244,0,247,1],"leadingComments":" Settings for Python client libraries.\n"},{"path":[4,6,1],"span":[244,8,22]},{"path":[4,6,2,0],"span":[246,2,36],"leadingComments":" Some settings.\n"},{"path":[4,6,2,0,6],"span":[246,2,24]},{"path":[4,6,2,0,1],"span":[246,25,31]},{"path":[4,6,2,0,3],"span":[246,34,35]},{"path":[4,7],"span":[250,0,253,1],"leadingComments":" Settings for Node client libraries.\n"},{"path":[4,7,1],"span":[250,8,20]},{"path":[4,7,2,0],"span":[252,2,36],"leadingComments":" Some settings.\n"},{"path":[4,7,2,0,6],"span":[252,2,24]},{"path":[4,7,2,0,1],"span":[252,25,31]},{"path":[4,7,2,0,3],"span":[252,34,35]},{"path":[4,8],"span":[256,0,289,1],"leadingComments":" Settings for Dotnet client libraries.\n"},{"path":[4,8,1],"span":[256,8,22]},{"path":[4,8,2,0],"span":[258,2,36],"leadingComments":" Some settings.\n"},{"path":[4,8,2,0,6],"span":[258,2,24]},{"path":[4,8,2,0,1],"span":[258,25,31]},{"path":[4,8,2,0,3],"span":[258,34,35]},{"path":[4,8,2,1],"span":[265,2,43],"leadingComments":" Map from original service names to renamed versions.\n This is used when the default generated types\n would cause a naming conflict. (Neither name is\n fully-qualified.)\n Example: Subscriber to SubscriberServiceApi.\n"},{"path":[4,8,2,1,6],"span":[265,2,21]},{"path":[4,8,2,1,1],"span":[265,22,38]},{"path":[4,8,2,1,3],"span":[265,41,42]},{"path":[4,8,2,2],"span":[272,2,44],"leadingComments":" Map from full resource types to the effective short name\n for the resource. This is used when otherwise resource\n named from different services would cause naming collisions.\n Example entry:\n \"datalabeling.googleapis.com/Dataset\": \"DataLabelingDataset\"\n"},{"path":[4,8,2,2,6],"span":[272,2,21]},{"path":[4,8,2,2,1],"span":[272,22,39]},{"path":[4,8,2,2,3],"span":[272,42,43]},{"path":[4,8,2,3],"span":[279,2,40],"leadingComments":" List of full resource types to ignore during generation.\n This is typically used for API-specific Location resources,\n which should be handled by the generator as if they were actually\n the common Location resources.\n Example entry: \"documentai.googleapis.com/Location\"\n"},{"path":[4,8,2,3,4],"span":[279,2,10]},{"path":[4,8,2,3,5],"span":[279,11,17]},{"path":[4,8,2,3,1],"span":[279,18,35]},{"path":[4,8,2,3,3],"span":[279,38,39]},{"path":[4,8,2,4],"span":[283,2,47],"leadingComments":" Namespaces which must be aliased in snippets due to\n a known (but non-generator-predictable) naming collision\n"},{"path":[4,8,2,4,4],"span":[283,2,10]},{"path":[4,8,2,4,5],"span":[283,11,17]},{"path":[4,8,2,4,1],"span":[283,18,42]},{"path":[4,8,2,4,3],"span":[283,45,46]},{"path":[4,8,2,5],"span":[288,2,45],"leadingComments":" Method signatures (in the form \"service.method(signature)\")\n which are provided separately, so shouldn't be generated.\n Snippets *calling* these methods are still generated, however.\n"},{"path":[4,8,2,5,4],"span":[288,2,10]},{"path":[4,8,2,5,5],"span":[288,11,17]},{"path":[4,8,2,5,1],"span":[288,18,40]},{"path":[4,8,2,5,3],"span":[288,43,44]},{"path":[4,9],"span":[292,0,295,1],"leadingComments":" Settings for Ruby client libraries.\n"},{"path":[4,9,1],"span":[292,8,20]},{"path":[4,9,2,0],"span":[294,2,36],"leadingComments":" Some settings.\n"},{"path":[4,9,2,0,6],"span":[294,2,24]},{"path":[4,9,2,0,1],"span":[294,25,31]},{"path":[4,9,2,0,3],"span":[294,34,35]},{"path":[4,10],"span":[298,0,301,1],"leadingComments":" Settings for Go client libraries.\n"},{"path":[4,10,1],"span":[298,8,18]},{"path":[4,10,2,0],"span":[300,2,36],"leadingComments":" Some settings.\n"},{"path":[4,10,2,0,6],"span":[300,2,24]},{"path":[4,10,2,0,1],"span":[300,25,31]},{"path":[4,10,2,0,3],"span":[300,34,35]},{"path":[4,11],"span":[304,0,351,1],"leadingComments":" Describes the generator configuration for a method.\n"},{"path":[4,11,1],"span":[304,8,22]},{"path":[4,11,3,0],"span":[310,2,327,3],"leadingComments":" Describes settings to use when generating API methods that use the\n long-running operation pattern.\n All default values below are from those used in the client library\n generators (e.g.\n [Java](https://github.com/googleapis/gapic-generator-java/blob/04c2faa191a9b5a10b92392fe8482279c4404803/src/main/java/com/google/api/generator/gapic/composer/common/RetrySettingsComposer.java)).\n"},{"path":[4,11,3,0,1],"span":[310,10,21]},{"path":[4,11,3,0,2,0],"span":[313,4,52],"leadingComments":" Initial delay after which the first poll request will be made.\n Default value: 5 seconds.\n"},{"path":[4,11,3,0,2,0,6],"span":[313,4,28]},{"path":[4,11,3,0,2,0,1],"span":[313,29,47]},{"path":[4,11,3,0,2,0,3],"span":[313,50,51]},{"path":[4,11,3,0,2,1],"span":[318,4,36],"leadingComments":" Multiplier to gradually increase delay between subsequent polls until it\n reaches max_poll_delay.\n Default value: 1.5.\n"},{"path":[4,11,3,0,2,1,5],"span":[318,4,9]},{"path":[4,11,3,0,2,1,1],"span":[318,10,31]},{"path":[4,11,3,0,2,1,3],"span":[318,34,35]},{"path":[4,11,3,0,2,2],"span":[322,4,48],"leadingComments":" Maximum time between two subsequent poll requests.\n Default value: 45 seconds.\n"},{"path":[4,11,3,0,2,2,6],"span":[322,4,28]},{"path":[4,11,3,0,2,2,1],"span":[322,29,43]},{"path":[4,11,3,0,2,2,3],"span":[322,46,47]},{"path":[4,11,3,0,2,3],"span":[326,4,52],"leadingComments":" Total polling timeout.\n Default value: 5 minutes.\n"},{"path":[4,11,3,0,2,3,6],"span":[326,4,28]},{"path":[4,11,3,0,2,3,1],"span":[326,29,47]},{"path":[4,11,3,0,2,3,3],"span":[326,50,51]},{"path":[4,11,2,0],"span":[331,2,22],"leadingComments":" The fully qualified name of the method, for which the options below apply.\n This is used to find the method to apply the options.\n"},{"path":[4,11,2,0,5],"span":[331,2,8]},{"path":[4,11,2,0,1],"span":[331,9,17]},{"path":[4,11,2,0,3],"span":[331,20,21]},{"path":[4,11,2,1],"span":[350,2,31],"leadingComments":" Describes settings to use for long-running operations when generating\n API methods for RPCs. Complements RPCs that use the annotations in\n google/longrunning/operations.proto.\n\n Example of a YAML configuration::\n\n  publishing:\n    method_settings:\n      - selector: google.cloud.speech.v2.Speech.BatchRecognize\n        long_running:\n          initial_poll_delay:\n            seconds: 60 # 1 minute\n          poll_delay_multiplier: 1.5\n          max_poll_delay:\n            seconds: 360 # 6 minutes\n          total_poll_timeout:\n             seconds: 54000 # 90 minutes\n"},{"path":[4,11,2,1,6],"span":[350,2,13]},{"path":[4,11,2,1,1],"span":[350,14,26]},{"path":[4,11,2,1,3],"span":[350,29,30]},{"path":[5,0],"span":[355,0,379,1],"leadingComments":" The organization for which the client libraries are being published.\n Affects the url where generated docs are published, etc.\n"},{"path":[5,0,1],"span":[355,5,30]},{"path":[5,0,2,0],"span":[357,2,46],"leadingComments":" Not useful.\n"},{"path":[5,0,2,0,1],"span":[357,2,41]},{"path":[5,0,2,0,2],"span":[357,44,45]},{"path":[5,0,2,1],"span":[360,2,12],"leadingComments":" Google Cloud Platform Org.\n"},{"path":[5,0,2,1,1],"span":[360,2,7]},{"path":[5,0,2,1,2],"span":[360,10,11]},{"path":[5,0,2,2],"span":[363,2,10],"leadingComments":" Ads (Advertising) Org.\n"},{"path":[5,0,2,2,1],"span":[363,2,5]},{"path":[5,0,2,2,2],"span":[363,8,9]},{"path":[5,0,2,3],"span":[366,2,13],"leadingComments":" Photos Org.\n"},{"path":[5,0,2,3,1],"span":[366,2,8]},{"path":[5,0,2,3,2],"span":[366,11,12]},{"path":[5,0,2,4],"span":[369,2,18],"leadingComments":" Street View Org.\n"},{"path":[5,0,2,4,1],"span":[369,2,13]},{"path":[5,0,2,4,2],"span":[369,16,17]},{"path":[5,0,2,5],"span":[372,2,15],"leadingComments":" Shopping Org.\n"},{"path":[5,0,2,5,1],"span":[372,2,10]},{"path":[5,0,2,5,2],"span":[372,13,14]},{"path":[5,0,2,6],"span":[375,2,10],"leadingComments":" Geo Org.\n"},{"path":[5,0,2,6,1],"span":[375,2,5]},{"path":[5,0,2,6,2],"span":[375,8,9]},{"path":[5,0,2,7],"span":[378,2,20],"leadingComments":" Generative AI - https://developers.generativeai.google\n"},{"path":[5,0,2,7,1],"span":[378,2,15]},{"path":[5,0,2,7,2],"span":[378,18,19]},{"path":[5,1],"span":[382,0,393,1],"leadingComments":" To where should client libraries be published?\n"},{"path":[5,1,1],"span":[382,5,29]},{"path":[5,1,2,0],"span":[385,2,45],"leadingComments":" Client libraries will neither be generated nor published to package\n managers.\n"},{"path":[5,1,2,0,1],"span":[385,2,40]},{"path":[5,1,2,0,2],"span":[385,43,44]},{"path":[5,1,2,1],"span":[389,2,14],"leadingComments":" Generate the client library in a repo under github.com/googleapis,\n but don't publish it to package managers.\n"},{"path":[5,1,2,1,1],"span":[389,2,8]},{"path":[5,1,2,1,2],"span":[389,11,13]},{"path":[5,1,2,2],"span":[392,2,23],"leadingComments":" Publish the library to package managers like nuget.org and npmjs.com.\n"},{"path":[5,1,2,2,1],"span":[392,2,17]},{"path":[5,1,2,2,2],"span":[392,20,22]}]},"syntax":"proto3","bufExtension":{"isImport":true,"moduleInfo":{"name":{"remote":"buf.build","owner":"googleapis","repository":"googleapis"},"commit":"cc916c31859748a68fd229a3c8d7a2e8"},"isSyntaxUnspecified":false}},{"name":"google/protobuf/any.proto","package":"google.protobuf","messageType":[{"name":"Any","field":[{"name":"type_url","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"typeUrl"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BYTES","jsonName":"value"}]}],"options":{"javaPackage":"com.google.protobuf","javaOuterClassname":"AnyProto","javaMultipleFiles":true,"goPackage":"google.golang.org/protobuf/types/known/anypb","objcClassPrefix":"GPB","csharpNamespace":"Google.Protobuf.WellKnownTypes"},"sourceCodeInfo":{"location":[{"span":[30,0,160,1]},{"path":[12],"span":[30,0,18],"leadingDetachedComments":[" Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"]},{"path":[2],"span":[32,0,24]},{"path":[8],"span":[34,0,67]},{"path":[8,11],"span":[34,0,67]},{"path":[8],"span":[35,0,44]},{"path":[8,1],"span":[35,0,44]},{"path":[8],"span":[36,0,41]},{"path":[8,8],"span":[36,0,41]},{"path":[8],"span":[37,0,34]},{"path":[8,10],"span":[37,0,34]},{"path":[8],"span":[38,0,33]},{"path":[8,36],"span":[38,0,33]},{"path":[8],"span":[39,0,59]},{"path":[8,37],"span":[39,0,59]},{"path":[4,0],"span":[127,0,160,1],"leadingComments":" `Any` contains an arbitrary serialized protocol buffer message along with a\n URL that describes the type of the serialized message.\n\n Protobuf library provides support to pack/unpack Any values in the form\n of utility functions or additional generated methods of the Any type.\n\n Example 1: Pack and unpack a message in C++.\n\n     Foo foo = ...;\n     Any any;\n     any.PackFrom(foo);\n     ...\n     if (any.UnpackTo(&foo)) {\n       ...\n     }\n\n Example 2: Pack and unpack a message in Java.\n\n     Foo foo = ...;\n     Any any = Any.pack(foo);\n     ...\n     if (any.is(Foo.class)) {\n       foo = any.unpack(Foo.class);\n     }\n     // or ...\n     if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n       foo = any.unpack(Foo.getDefaultInstance());\n     }\n\n Example 3: Pack and unpack a message in Python.\n\n     foo = Foo(...)\n     any = Any()\n     any.Pack(foo)\n     ...\n     if any.Is(Foo.DESCRIPTOR):\n       any.Unpack(foo)\n       ...\n\n Example 4: Pack and unpack a message in Go\n\n      foo := &pb.Foo{...}\n      any, err := anypb.New(foo)\n      if err != nil {\n        ...\n      }\n      ...\n      foo := &pb.Foo{}\n      if err := any.UnmarshalTo(foo); err != nil {\n        ...\n      }\n\n The pack methods provided by protobuf library will by default use\n 'type.googleapis.com/full.type.name' as the type URL and the unpack\n methods only use the fully qualified type name after the last '/'\n in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n name \"y.z\".\n\n JSON\n\n The JSON representation of an `Any` value uses the regular\n representation of the deserialized, embedded message, with an\n additional field `@type` which contains the type URL. Example:\n\n     package google.profile;\n     message Person {\n       string first_name = 1;\n       string last_name = 2;\n     }\n\n     {\n       \"@type\": \"type.googleapis.com/google.profile.Person\",\n       \"firstName\": <string>,\n       \"lastName\": <string>\n     }\n\n If the embedded message type is well-known and has a custom JSON\n representation, that representation will be embedded adding a field\n `value` which holds the custom JSON in addition to the `@type`\n field. Example (for message [google.protobuf.Duration][]):\n\n     {\n       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n       \"value\": \"1.212s\"\n     }\n\n"},{"path":[4,0,1],"span":[127,8,11]},{"path":[4,0,2,0],"span":[156,2,22],"leadingComments":" A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics.\n\n"},{"path":[4,0,2,0,5],"span":[156,2,8]},{"path":[4,0,2,0,1],"span":[156,9,17]},{"path":[4,0,2,0,3],"span":[156,20,21]},{"path":[4,0,2,1],"span":[159,2,18],"leadingComments":" Must be a valid serialized protocol buffer of the above specified type.\n"},{"path":[4,0,2,1,5],"span":[159,2,7]},{"path":[4,0,2,1,1],"span":[159,8,13]},{"path":[4,0,2,1,3],"span":[159,16,17]}]},"syntax":"proto3","bufExtension":{"isImport":true,"isSyntaxUnspecified":false}},{"name":"google/protobuf/empty.proto","package":"google.protobuf","messageType":[{"name":"Empty"}],"options":{"javaPackage":"com.google.protobuf","javaOuterClassname":"EmptyProto","javaMultipleFiles":true,"goPackage":"google.golang.org/protobuf/types/known/emptypb","ccEnableArenas":true,"objcClassPrefix":"GPB","csharpNamespace":"Google.Protobuf.WellKnownTypes"},"sourceCodeInfo":{"location":[{"span":[30,0,50,16]},{"path":[12],"span":[30,0,18],"leadingDetachedComments":[" Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"]},{"path":[2],"span":[32,0,24]},{"path":[8],"span":[34,0,69]},{"path":[8,11],"span":[34,0,69]},{"path":[8],"span":[35,0,44]},{"path":[8,1],"span":[35,0,44]},{"path":[8],"span":[36,0,43]},{"path":[8,8],"span":[36,0,43]},{"path":[8],"span":[37,0,34]},{"path":[8,10],"span":[37,0,34]},{"path":[8],"span":[38,0,33]},{"path":[8,36],"span":[38,0,33]},{"path":[8],"span":[39,0,59]},{"path":[8,37],"span":[39,0,59]},{"path":[8],"span":[40,0,31]},{"path":[8,31],"span":[40,0,31]},{"path":[4,0],"span":[50,0,16],"leadingComments":" A generic empty message that you can re-use to avoid defining duplicated\n empty messages in your APIs. A typical example is to use it as the request\n or the response type of an API method. For instance:\n\n     service Foo {\n       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n     }\n\n"},{"path":[4,0,1],"span":[50,8,13]}]},"syntax":"proto3","bufExtension":{"isImport":true,"isSyntaxUnspecified":false}},{"name":"google/rpc/status.proto","package":"google.rpc","dependency":["google/protobuf/any.proto"],"messageType":[{"name":"Status","field":[{"name":"code","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"code"},{"name":"message","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"message"},{"name":"details","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.Any","jsonName":"details"}]}],"options":{"javaPackage":"com.google.rpc","javaOuterClassname":"StatusProto","javaMultipleFiles":true,"goPackage":"google.golang.org/genproto/googleapis/rpc/status;status","ccEnableArenas":true,"objcClassPrefix":"RPC"},"sourceCodeInfo":{"location":[{"span":[14,0,48,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2022 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,19]},{"path":[3,0],"span":[18,0,35]},{"path":[8],"span":[20,0,31]},{"path":[8,31],"span":[20,0,31]},{"path":[8],"span":[21,0,78]},{"path":[8,11],"span":[21,0,78]},{"path":[8],"span":[22,0,34]},{"path":[8,10],"span":[22,0,34]},{"path":[8],"span":[23,0,44]},{"path":[8,8],"span":[23,0,44]},{"path":[8],"span":[24,0,39]},{"path":[8,1],"span":[24,0,39]},{"path":[8],"span":[25,0,33]},{"path":[8,36],"span":[25,0,33]},{"path":[4,0],"span":[34,0,48,1],"leadingComments":" The `Status` type defines a logical error model that is suitable for\n different programming environments, including REST APIs and RPC APIs. It is\n used by [gRPC](https://github.com/grpc). Each `Status` message contains\n three pieces of data: error code, error message, and error details.\n\n You can find out more about this error model and how to work with it in the\n [API Design Guide](https://cloud.google.com/apis/design/errors).\n"},{"path":[4,0,1],"span":[34,8,14]},{"path":[4,0,2,0],"span":[37,2,17],"leadingComments":" The status code, which should be an enum value of\n [google.rpc.Code][google.rpc.Code].\n"},{"path":[4,0,2,0,5],"span":[37,2,7]},{"path":[4,0,2,0,1],"span":[37,8,12]},{"path":[4,0,2,0,3],"span":[37,15,16]},{"path":[4,0,2,1],"span":[43,2,21],"leadingComments":" A developer-facing error message, which should be in English. Any\n user-facing error message should be localized and sent in the\n [google.rpc.Status.details][google.rpc.Status.details] field, or localized\n by the client.\n"},{"path":[4,0,2,1,5],"span":[43,2,8]},{"path":[4,0,2,1,1],"span":[43,9,16]},{"path":[4,0,2,1,3],"span":[43,19,20]},{"path":[4,0,2,2],"span":[47,2,43],"leadingComments":" A list of messages that carry the error details.  There is a common set of\n message types for APIs to use.\n"},{"path":[4,0,2,2,4],"span":[47,2,10]},{"path":[4,0,2,2,6],"span":[47,11,30]},{"path":[4,0,2,2,1],"span":[47,31,38]},{"path":[4,0,2,2,3],"span":[47,41,42]}]},"syntax":"proto3","bufExtension":{"isImport":true,"moduleInfo":{"name":{"remote":"buf.build","owner":"googleapis","repository":"googleapis"},"commit":"cc916c31859748a68fd229a3c8d7a2e8"},"isSyntaxUnspecified":false}},{"name":"google/longrunning/operations.proto","package":"google.longrunning","dependency":["google/api/annotations.proto","google/api/client.proto","google/protobuf/any.proto","google/protobuf/duration.proto","google/protobuf/empty.proto","google/rpc/status.proto","google/protobuf/descriptor.proto"],"messageType":[{"name":"Operation","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"metadata","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Any","jsonName":"metadata"},{"name":"done","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"done"},{"name":"error","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.rpc.Status","oneofIndex":0,"jsonName":"error"},{"name":"response","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Any","oneofIndex":0,"jsonName":"response"}],"oneofDecl":[{"name":"result"}]},{"name":"GetOperationRequest","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"}]},{"name":"ListOperationsRequest","field":[{"name":"name","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"filter","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"filter"},{"name":"page_size","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"pageSize"},{"name":"page_token","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"pageToken"}]},{"name":"ListOperationsResponse","field":[{"name":"operations","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.longrunning.Operation","jsonName":"operations"},{"name":"next_page_token","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"nextPageToken"}]},{"name":"CancelOperationRequest","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"}]},{"name":"DeleteOperationRequest","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"}]},{"name":"WaitOperationRequest","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"timeout","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Duration","jsonName":"timeout"}]},{"name":"OperationInfo","field":[{"name":"response_type","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"responseType"},{"name":"metadata_type","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"metadataType"}]}],"service":[{"name":"Operations","method":[{"name":"ListOperations","inputType":".google.longrunning.ListOperationsRequest","outputType":".google.longrunning.ListOperationsResponse","options":{"[google.api.http]":{"get":"/v1/{name=operations}"},"[google.api.method_signature]":["name,filter"]}},{"name":"GetOperation","inputType":".google.longrunning.GetOperationRequest","outputType":".google.longrunning.Operation","options":{"[google.api.http]":{"get":"/v1/{name=operations/**}"},"[google.api.method_signature]":["name"]}},{"name":"DeleteOperation","inputType":".google.longrunning.DeleteOperationRequest","outputType":".google.protobuf.Empty","options":{"[google.api.http]":{"delete":"/v1/{name=operations/**}"},"[google.api.method_signature]":["name"]}},{"name":"CancelOperation","inputType":".google.longrunning.CancelOperationRequest","outputType":".google.protobuf.Empty","options":{"[google.api.http]":{"post":"/v1/{name=operations/**}:cancel","body":"*"},"[google.api.method_signature]":["name"]}},{"name":"WaitOperation","inputType":".google.longrunning.WaitOperationRequest","outputType":".google.longrunning.Operation","options":{}}],"options":{"[google.api.default_host]":"longrunning.googleapis.com"}}],"extension":[{"name":"operation_info","number":1049,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.longrunning.OperationInfo","extendee":".google.protobuf.MethodOptions","jsonName":"operationInfo"}],"options":{"javaPackage":"com.google.longrunning","javaOuterClassname":"OperationsProto","javaMultipleFiles":true,"goPackage":"cloud.google.com/go/longrunning/autogen/longrunningpb;longrunningpb","ccEnableArenas":true,"csharpNamespace":"Google.LongRunning","phpNamespace":"Google\\LongRunning"},"sourceCodeInfo":{"location":[{"span":[14,0,246,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2020 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,27]},{"path":[3,0],"span":[18,0,38]},{"path":[3,1],"span":[19,0,33]},{"path":[3,2],"span":[20,0,35]},{"path":[3,3],"span":[21,0,40]},{"path":[3,4],"span":[22,0,37]},{"path":[3,5],"span":[23,0,33]},{"path":[3,6],"span":[24,0,42]},{"path":[8],"span":[26,0,31]},{"path":[8,31],"span":[26,0,31]},{"path":[8],"span":[27,0,47]},{"path":[8,37],"span":[27,0,47]},{"path":[8],"span":[28,0,90]},{"path":[8,11],"span":[28,0,90]},{"path":[8],"span":[29,0,34]},{"path":[8,10],"span":[29,0,34]},{"path":[8],"span":[30,0,48]},{"path":[8,8],"span":[30,0,48]},{"path":[8],"span":[31,0,47]},{"path":[8,1],"span":[31,0,47]},{"path":[8],"span":[32,0,45]},{"path":[8,41],"span":[32,0,45]},{"path":[7],"span":[34,0,42,1]},{"path":[7,0],"span":[41,2,57],"leadingComments":" Additional information regarding long-running operations.\n In particular, this specifies the types that are returned from\n long-running operations.\n\n Required for methods that return `google.longrunning.Operation`; invalid\n otherwise.\n"},{"path":[7,0,2],"span":[34,7,36]},{"path":[7,0,6],"span":[41,2,34]},{"path":[7,0,1],"span":[41,35,49]},{"path":[7,0,3],"span":[41,52,56]},{"path":[6,0],"span":[53,0,123,1],"leadingComments":" Manages long-running operations with an API service.\n\n When an API method normally takes long time to complete, it can be designed\n to return [Operation][google.longrunning.Operation] to the client, and the client can use this\n interface to receive the real response asynchronously by polling the\n operation resource, or pass the operation resource to another API (such as\n Google Cloud Pub/Sub API) to receive the response.  Any API service that\n returns long-running operations should implement the `Operations` interface\n so developers can have a consistent client experience.\n"},{"path":[6,0,1],"span":[53,8,18]},{"path":[6,0,3],"span":[54,2,66]},{"path":[6,0,3,1049],"span":[54,2,66]},{"path":[6,0,2,0],"span":[66,2,71,3],"leadingComments":" Lists operations that match the specified filter in the request. If the\n server doesn't support this method, it returns `UNIMPLEMENTED`.\n\n NOTE: the `name` binding allows API services to override the binding\n to use different resource name schemes, such as `users/*/operations`. To\n override the binding, API services can add a binding such as\n `\"/v1/{name=users/*}/operations\"` to their service configuration.\n For backwards compatibility, the default name includes the operations\n collection id, however overriding users must ensure the name binding\n is the parent resource, without the operations collection id.\n"},{"path":[6,0,2,0,1],"span":[66,6,20]},{"path":[6,0,2,0,2],"span":[66,21,42]},{"path":[6,0,2,0,3],"span":[66,53,75]},{"path":[6,0,2,0,4],"span":[67,4,69,6]},{"path":[6,0,2,0,4,72295728],"span":[67,4,69,6]},{"path":[6,0,2,0,4],"span":[70,4,57]},{"path":[6,0,2,0,4,1051,0],"span":[70,4,57]},{"path":[6,0,2,1],"span":[76,2,81,3],"leadingComments":" Gets the latest state of a long-running operation.  Clients can use this\n method to poll the operation result at intervals as recommended by the API\n service.\n"},{"path":[6,0,2,1,1],"span":[76,6,18]},{"path":[6,0,2,1,2],"span":[76,19,38]},{"path":[6,0,2,1,3],"span":[76,49,58]},{"path":[6,0,2,1,4],"span":[77,4,79,6]},{"path":[6,0,2,1,4,72295728],"span":[77,4,79,6]},{"path":[6,0,2,1,4],"span":[80,4,50]},{"path":[6,0,2,1,4,1051,0],"span":[80,4,50]},{"path":[6,0,2,2],"span":[87,2,92,3],"leadingComments":" Deletes a long-running operation. This method indicates that the client is\n no longer interested in the operation result. It does not cancel the\n operation. If the server doesn't support this method, it returns\n `google.rpc.Code.UNIMPLEMENTED`.\n"},{"path":[6,0,2,2,1],"span":[87,6,21]},{"path":[6,0,2,2,2],"span":[87,22,44]},{"path":[6,0,2,2,3],"span":[87,55,76]},{"path":[6,0,2,2,4],"span":[88,4,90,6]},{"path":[6,0,2,2,4,72295728],"span":[88,4,90,6]},{"path":[6,0,2,2,4],"span":[91,4,50]},{"path":[6,0,2,2,4,1051,0],"span":[91,4,50]},{"path":[6,0,2,3],"span":[104,2,110,3],"leadingComments":" Starts asynchronous cancellation on a long-running operation.  The server\n makes a best effort to cancel the operation, but success is not\n guaranteed.  If the server doesn't support this method, it returns\n `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n [Operations.GetOperation][google.longrunning.Operations.GetOperation] or\n other methods to check whether the cancellation succeeded or whether the\n operation completed despite cancellation. On successful cancellation,\n the operation is not deleted; instead, it becomes an operation with\n an [Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,\n corresponding to `Code.CANCELLED`.\n"},{"path":[6,0,2,3,1],"span":[104,6,21]},{"path":[6,0,2,3,2],"span":[104,22,44]},{"path":[6,0,2,3,3],"span":[104,55,76]},{"path":[6,0,2,3,4],"span":[105,4,108,6]},{"path":[6,0,2,3,4,72295728],"span":[105,4,108,6]},{"path":[6,0,2,3,4],"span":[109,4,50]},{"path":[6,0,2,3,4,1051,0],"span":[109,4,50]},{"path":[6,0,2,4],"span":[121,2,122,3],"leadingComments":" Waits until the specified long-running operation is done or reaches at most\n a specified timeout, returning the latest state.  If the operation is\n already done, the latest state is immediately returned.  If the timeout\n specified is greater than the default HTTP/RPC timeout, the HTTP/RPC\n timeout is used.  If the server does not support this method, it returns\n `google.rpc.Code.UNIMPLEMENTED`.\n Note that this method is on a best-effort basis.  It may return the latest\n state before the specified timeout (including immediately), meaning even an\n immediate response is no guarantee that the operation is done.\n"},{"path":[6,0,2,4,1],"span":[121,6,19]},{"path":[6,0,2,4,2],"span":[121,20,40]},{"path":[6,0,2,4,3],"span":[121,51,60]},{"path":[4,0],"span":[127,0,161,1],"leadingComments":" This resource represents a long-running operation that is the result of a\n network API call.\n"},{"path":[4,0,1],"span":[127,8,17]},{"path":[4,0,2,0],"span":[131,2,18],"leadingComments":" The server-assigned name, which is only unique within the same service that\n originally returns it. If you use the default HTTP mapping, the\n `name` should be a resource name ending with `operations/{unique_id}`.\n"},{"path":[4,0,2,0,5],"span":[131,2,8]},{"path":[4,0,2,0,1],"span":[131,9,13]},{"path":[4,0,2,0,3],"span":[131,16,17]},{"path":[4,0,2,1],"span":[137,2,35],"leadingComments":" Service-specific metadata associated with the operation.  It typically\n contains progress information and common metadata such as create time.\n Some services might not provide such metadata.  Any method that returns a\n long-running operation should document the metadata type, if any.\n"},{"path":[4,0,2,1,6],"span":[137,2,21]},{"path":[4,0,2,1,1],"span":[137,22,30]},{"path":[4,0,2,1,3],"span":[137,33,34]},{"path":[4,0,2,2],"span":[142,2,16],"leadingComments":" If the value is `false`, it means the operation is still in progress.\n If `true`, the operation is completed, and either `error` or `response` is\n available.\n"},{"path":[4,0,2,2,5],"span":[142,2,6]},{"path":[4,0,2,2,1],"span":[142,7,11]},{"path":[4,0,2,2,3],"span":[142,14,15]},{"path":[4,0,8,0],"span":[147,2,160,3],"leadingComments":" The operation result, which can be either an `error` or a valid `response`.\n If `done` == `false`, neither `error` nor `response` is set.\n If `done` == `true`, exactly one of `error` or `response` is set.\n"},{"path":[4,0,8,0,1],"span":[147,8,14]},{"path":[4,0,2,3],"span":[149,4,32],"leadingComments":" The error result of the operation in case of failure or cancellation.\n"},{"path":[4,0,2,3,6],"span":[149,4,21]},{"path":[4,0,2,3,1],"span":[149,22,27]},{"path":[4,0,2,3,3],"span":[149,30,31]},{"path":[4,0,2,4],"span":[159,4,37],"leadingComments":" The normal response of the operation in case of success.  If the original\n method returns no data on success, such as `Delete`, the response is\n `google.protobuf.Empty`.  If the original method is standard\n `Get`/`Create`/`Update`, the response should be the resource.  For other\n methods, the response should have the type `XxxResponse`, where `Xxx`\n is the original method name.  For example, if the original method name\n is `TakeSnapshot()`, the inferred response type is\n `TakeSnapshotResponse`.\n"},{"path":[4,0,2,4,6],"span":[159,4,23]},{"path":[4,0,2,4,1],"span":[159,24,32]},{"path":[4,0,2,4,3],"span":[159,35,36]},{"path":[4,1],"span":[164,0,167,1],"leadingComments":" The request message for [Operations.GetOperation][google.longrunning.Operations.GetOperation].\n"},{"path":[4,1,1],"span":[164,8,27]},{"path":[4,1,2,0],"span":[166,2,18],"leadingComments":" The name of the operation resource.\n"},{"path":[4,1,2,0,5],"span":[166,2,8]},{"path":[4,1,2,0,1],"span":[166,9,13]},{"path":[4,1,2,0,3],"span":[166,16,17]},{"path":[4,2],"span":[170,0,182,1],"leadingComments":" The request message for [Operations.ListOperations][google.longrunning.Operations.ListOperations].\n"},{"path":[4,2,1],"span":[170,8,29]},{"path":[4,2,2,0],"span":[172,2,18],"leadingComments":" The name of the operation's parent resource.\n"},{"path":[4,2,2,0,5],"span":[172,2,8]},{"path":[4,2,2,0,1],"span":[172,9,13]},{"path":[4,2,2,0,3],"span":[172,16,17]},{"path":[4,2,2,1],"span":[175,2,20],"leadingComments":" The standard list filter.\n"},{"path":[4,2,2,1,5],"span":[175,2,8]},{"path":[4,2,2,1,1],"span":[175,9,15]},{"path":[4,2,2,1,3],"span":[175,18,19]},{"path":[4,2,2,2],"span":[178,2,22],"leadingComments":" The standard list page size.\n"},{"path":[4,2,2,2,5],"span":[178,2,7]},{"path":[4,2,2,2,1],"span":[178,8,17]},{"path":[4,2,2,2,3],"span":[178,20,21]},{"path":[4,2,2,3],"span":[181,2,24],"leadingComments":" The standard list page token.\n"},{"path":[4,2,2,3,5],"span":[181,2,8]},{"path":[4,2,2,3,1],"span":[181,9,19]},{"path":[4,2,2,3,3],"span":[181,22,23]},{"path":[4,3],"span":[185,0,191,1],"leadingComments":" The response message for [Operations.ListOperations][google.longrunning.Operations.ListOperations].\n"},{"path":[4,3,1],"span":[185,8,30]},{"path":[4,3,2,0],"span":[187,2,36],"leadingComments":" A list of operations that matches the specified filter in the request.\n"},{"path":[4,3,2,0,4],"span":[187,2,10]},{"path":[4,3,2,0,6],"span":[187,11,20]},{"path":[4,3,2,0,1],"span":[187,21,31]},{"path":[4,3,2,0,3],"span":[187,34,35]},{"path":[4,3,2,1],"span":[190,2,29],"leadingComments":" The standard List next-page token.\n"},{"path":[4,3,2,1,5],"span":[190,2,8]},{"path":[4,3,2,1,1],"span":[190,9,24]},{"path":[4,3,2,1,3],"span":[190,27,28]},{"path":[4,4],"span":[194,0,197,1],"leadingComments":" The request message for [Operations.CancelOperation][google.longrunning.Operations.CancelOperation].\n"},{"path":[4,4,1],"span":[194,8,30]},{"path":[4,4,2,0],"span":[196,2,18],"leadingComments":" The name of the operation resource to be cancelled.\n"},{"path":[4,4,2,0,5],"span":[196,2,8]},{"path":[4,4,2,0,1],"span":[196,9,13]},{"path":[4,4,2,0,3],"span":[196,16,17]},{"path":[4,5],"span":[200,0,203,1],"leadingComments":" The request message for [Operations.DeleteOperation][google.longrunning.Operations.DeleteOperation].\n"},{"path":[4,5,1],"span":[200,8,30]},{"path":[4,5,2,0],"span":[202,2,18],"leadingComments":" The name of the operation resource to be deleted.\n"},{"path":[4,5,2,0,5],"span":[202,2,8]},{"path":[4,5,2,0,1],"span":[202,9,13]},{"path":[4,5,2,0,3],"span":[202,16,17]},{"path":[4,6],"span":[206,0,214,1],"leadingComments":" The request message for [Operations.WaitOperation][google.longrunning.Operations.WaitOperation].\n"},{"path":[4,6,1],"span":[206,8,28]},{"path":[4,6,2,0],"span":[208,2,18],"leadingComments":" The name of the operation resource to wait on.\n"},{"path":[4,6,2,0,5],"span":[208,2,8]},{"path":[4,6,2,0,1],"span":[208,9,13]},{"path":[4,6,2,0,3],"span":[208,16,17]},{"path":[4,6,2,1],"span":[213,2,39],"leadingComments":" The maximum duration to wait before timing out. If left blank, the wait\n will be at most the time permitted by the underlying HTTP/RPC protocol.\n If RPC context deadline is also specified, the shorter one will be used.\n"},{"path":[4,6,2,1,6],"span":[213,2,26]},{"path":[4,6,2,1,1],"span":[213,27,34]},{"path":[4,6,2,1,3],"span":[213,37,38]},{"path":[4,7],"span":[227,0,246,1],"leadingComments":" A message representing the message types used by a long-running operation.\n\n Example:\n\n   rpc LongRunningRecognize(LongRunningRecognizeRequest)\n       returns (google.longrunning.Operation) {\n     option (google.longrunning.operation_info) = {\n       response_type: \"LongRunningRecognizeResponse\"\n       metadata_type: \"LongRunningRecognizeMetadata\"\n     };\n   }\n"},{"path":[4,7,1],"span":[227,8,21]},{"path":[4,7,2,0],"span":[236,2,27],"leadingComments":" Required. The message name of the primary return type for this\n long-running operation.\n This type will be used to deserialize the LRO's response.\n\n If the response is in a different package from the rpc, a fully-qualified\n message name must be used (e.g. `google.protobuf.Struct`).\n\n Note: Altering this value constitutes a breaking change.\n"},{"path":[4,7,2,0,5],"span":[236,2,8]},{"path":[4,7,2,0,1],"span":[236,9,22]},{"path":[4,7,2,0,3],"span":[236,25,26]},{"path":[4,7,2,1],"span":[245,2,27],"leadingComments":" Required. The message name of the metadata type for this long-running\n operation.\n\n If the response is in a different package from the rpc, a fully-qualified\n message name must be used (e.g. `google.protobuf.Struct`).\n\n Note: Altering this value constitutes a breaking change.\n"},{"path":[4,7,2,1,5],"span":[245,2,8]},{"path":[4,7,2,1,1],"span":[245,9,22]},{"path":[4,7,2,1,3],"span":[245,25,26]}]},"syntax":"proto3","bufExtension":{"isImport":true,"moduleInfo":{"name":{"remote":"buf.build","owner":"googleapis","repository":"googleapis"},"commit":"cc916c31859748a68fd229a3c8d7a2e8"},"isSyntaxUnspecified":false}},{"name":"google/protobuf/timestamp.proto","package":"google.protobuf","messageType":[{"name":"Timestamp","field":[{"name":"seconds","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"seconds"},{"name":"nanos","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"nanos"}]}],"options":{"javaPackage":"com.google.protobuf","javaOuterClassname":"TimestampProto","javaMultipleFiles":true,"goPackage":"google.golang.org/protobuf/types/known/timestamppb","ccEnableArenas":true,"objcClassPrefix":"GPB","csharpNamespace":"Google.Protobuf.WellKnownTypes"},"sourceCodeInfo":{"location":[{"span":[30,0,143,1]},{"path":[12],"span":[30,0,18],"leadingDetachedComments":[" Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"]},{"path":[2],"span":[32,0,24]},{"path":[8],"span":[34,0,31]},{"path":[8,31],"span":[34,0,31]},{"path":[8],"span":[35,0,73]},{"path":[8,11],"span":[35,0,73]},{"path":[8],"span":[36,0,44]},{"path":[8,1],"span":[36,0,44]},{"path":[8],"span":[37,0,47]},{"path":[8,8],"span":[37,0,47]},{"path":[8],"span":[38,0,34]},{"path":[8,10],"span":[38,0,34]},{"path":[8],"span":[39,0,33]},{"path":[8,36],"span":[39,0,33]},{"path":[8],"span":[40,0,59]},{"path":[8,37],"span":[40,0,59]},{"path":[4,0],"span":[132,0,143,1],"leadingComments":" A Timestamp represents a point in time independent of any time zone or local\n calendar, encoded as a count of seconds and fractions of seconds at\n nanosecond resolution. The count is relative to an epoch at UTC midnight on\n January 1, 1970, in the proleptic Gregorian calendar which extends the\n Gregorian calendar backwards to year one.\n\n All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n second table is needed for interpretation, using a [24-hour linear\n smear](https://developers.google.com/time/smear).\n\n The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n restricting to that range, we ensure that we can convert to and from [RFC\n 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n\n # Examples\n\n Example 1: Compute Timestamp from POSIX `time()`.\n\n     Timestamp timestamp;\n     timestamp.set_seconds(time(NULL));\n     timestamp.set_nanos(0);\n\n Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n\n     struct timeval tv;\n     gettimeofday(&tv, NULL);\n\n     Timestamp timestamp;\n     timestamp.set_seconds(tv.tv_sec);\n     timestamp.set_nanos(tv.tv_usec * 1000);\n\n Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n\n     FILETIME ft;\n     GetSystemTimeAsFileTime(&ft);\n     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n\n     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n     Timestamp timestamp;\n     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n\n Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n\n     long millis = System.currentTimeMillis();\n\n     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n         .setNanos((int) ((millis % 1000) * 1000000)).build();\n\n Example 5: Compute Timestamp from Java `Instant.now()`.\n\n     Instant now = Instant.now();\n\n     Timestamp timestamp =\n         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n             .setNanos(now.getNano()).build();\n\n Example 6: Compute Timestamp from current time in Python.\n\n     timestamp = Timestamp()\n     timestamp.GetCurrentTime()\n\n # JSON Mapping\n\n In JSON format, the Timestamp type is encoded as a string in the\n [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n where {year} is always expressed using four digits while {month}, {day},\n {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n is required. A proto3 JSON serializer should always use UTC (as indicated by\n \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n able to accept both UTC and other timezones (as indicated by an offset).\n\n For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n 01:30 UTC on January 15, 2017.\n\n In JavaScript, one can convert a Date object to this format using the\n standard\n [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n method. In Python, a standard `datetime.datetime` object can be converted\n to this format using\n [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n the Joda Time's [`ISODateTimeFormat.dateTime()`](\n http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D\n ) to obtain a formatter capable of generating timestamps in this format.\n\n"},{"path":[4,0,1],"span":[132,8,17]},{"path":[4,0,2,0],"span":[136,2,20],"leadingComments":" Represents seconds of UTC time since Unix epoch\n 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n 9999-12-31T23:59:59Z inclusive.\n"},{"path":[4,0,2,0,5],"span":[136,2,7]},{"path":[4,0,2,0,1],"span":[136,8,15]},{"path":[4,0,2,0,3],"span":[136,18,19]},{"path":[4,0,2,1],"span":[142,2,18],"leadingComments":" Non-negative fractions of a second at nanosecond resolution. Negative\n second values with fractions must still have non-negative nanos values\n that count forward in time. Must be from 0 to 999,999,999\n inclusive.\n"},{"path":[4,0,2,1,5],"span":[142,2,7]},{"path":[4,0,2,1,1],"span":[142,8,13]},{"path":[4,0,2,1,3],"span":[142,16,17]}]},"syntax":"proto3","bufExtension":{"isImport":true,"isSyntaxUnspecified":false}},{"name":"google/protobuf/wrappers.proto","package":"google.protobuf","messageType":[{"name":"DoubleValue","field":[{"name":"value","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_DOUBLE","jsonName":"value"}]},{"name":"FloatValue","field":[{"name":"value","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_FLOAT","jsonName":"value"}]},{"name":"Int64Value","field":[{"name":"value","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"value"}]},{"name":"UInt64Value","field":[{"name":"value","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_UINT64","jsonName":"value"}]},{"name":"Int32Value","field":[{"name":"value","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"value"}]},{"name":"UInt32Value","field":[{"name":"value","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_UINT32","jsonName":"value"}]},{"name":"BoolValue","field":[{"name":"value","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"value"}]},{"name":"StringValue","field":[{"name":"value","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"value"}]},{"name":"BytesValue","field":[{"name":"value","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_BYTES","jsonName":"value"}]}],"options":{"javaPackage":"com.google.protobuf","javaOuterClassname":"WrappersProto","javaMultipleFiles":true,"goPackage":"google.golang.org/protobuf/types/known/wrapperspb","ccEnableArenas":true,"objcClassPrefix":"GPB","csharpNamespace":"Google.Protobuf.WellKnownTypes"},"sourceCodeInfo":{"location":[{"span":[40,0,122,1]},{"path":[12],"span":[40,0,18],"leadingDetachedComments":[" Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n Wrappers for primitive (non-message) types. These types are useful\n for embedding primitives in the `google.protobuf.Any` type and for places\n where we need to distinguish between the absence of a primitive\n typed field and its default value.\n\n These wrappers have no meaningful use within repeated fields as they lack\n the ability to detect presence on individual elements.\n These wrappers have no meaningful use within a map or a oneof since\n individual entries of a map or fields of a oneof can already detect presence.\n"]},{"path":[2],"span":[42,0,24]},{"path":[8],"span":[44,0,31]},{"path":[8,31],"span":[44,0,31]},{"path":[8],"span":[45,0,72]},{"path":[8,11],"span":[45,0,72]},{"path":[8],"span":[46,0,44]},{"path":[8,1],"span":[46,0,44]},{"path":[8],"span":[47,0,46]},{"path":[8,8],"span":[47,0,46]},{"path":[8],"span":[48,0,34]},{"path":[8,10],"span":[48,0,34]},{"path":[8],"span":[49,0,33]},{"path":[8,36],"span":[49,0,33]},{"path":[8],"span":[50,0,59]},{"path":[8,37],"span":[50,0,59]},{"path":[4,0],"span":[55,0,58,1],"leadingComments":" Wrapper message for `double`.\n\n The JSON representation for `DoubleValue` is JSON number.\n"},{"path":[4,0,1],"span":[55,8,19]},{"path":[4,0,2,0],"span":[57,2,19],"leadingComments":" The double value.\n"},{"path":[4,0,2,0,5],"span":[57,2,8]},{"path":[4,0,2,0,1],"span":[57,9,14]},{"path":[4,0,2,0,3],"span":[57,17,18]},{"path":[4,1],"span":[63,0,66,1],"leadingComments":" Wrapper message for `float`.\n\n The JSON representation for `FloatValue` is JSON number.\n"},{"path":[4,1,1],"span":[63,8,18]},{"path":[4,1,2,0],"span":[65,2,18],"leadingComments":" The float value.\n"},{"path":[4,1,2,0,5],"span":[65,2,7]},{"path":[4,1,2,0,1],"span":[65,8,13]},{"path":[4,1,2,0,3],"span":[65,16,17]},{"path":[4,2],"span":[71,0,74,1],"leadingComments":" Wrapper message for `int64`.\n\n The JSON representation for `Int64Value` is JSON string.\n"},{"path":[4,2,1],"span":[71,8,18]},{"path":[4,2,2,0],"span":[73,2,18],"leadingComments":" The int64 value.\n"},{"path":[4,2,2,0,5],"span":[73,2,7]},{"path":[4,2,2,0,1],"span":[73,8,13]},{"path":[4,2,2,0,3],"span":[73,16,17]},{"path":[4,3],"span":[79,0,82,1],"leadingComments":" Wrapper message for `uint64`.\n\n The JSON representation for `UInt64Value` is JSON string.\n"},{"path":[4,3,1],"span":[79,8,19]},{"path":[4,3,2,0],"span":[81,2,19],"leadingComments":" The uint64 value.\n"},{"path":[4,3,2,0,5],"span":[81,2,8]},{"path":[4,3,2,0,1],"span":[81,9,14]},{"path":[4,3,2,0,3],"span":[81,17,18]},{"path":[4,4],"span":[87,0,90,1],"leadingComments":" Wrapper message for `int32`.\n\n The JSON representation for `Int32Value` is JSON number.\n"},{"path":[4,4,1],"span":[87,8,18]},{"path":[4,4,2,0],"span":[89,2,18],"leadingComments":" The int32 value.\n"},{"path":[4,4,2,0,5],"span":[89,2,7]},{"path":[4,4,2,0,1],"span":[89,8,13]},{"path":[4,4,2,0,3],"span":[89,16,17]},{"path":[4,5],"span":[95,0,98,1],"leadingComments":" Wrapper message for `uint32`.\n\n The JSON representation for `UInt32Value` is JSON number.\n"},{"path":[4,5,1],"span":[95,8,19]},{"path":[4,5,2,0],"span":[97,2,19],"leadingComments":" The uint32 value.\n"},{"path":[4,5,2,0,5],"span":[97,2,8]},{"path":[4,5,2,0,1],"span":[97,9,14]},{"path":[4,5,2,0,3],"span":[97,17,18]},{"path":[4,6],"span":[103,0,106,1],"leadingComments":" Wrapper message for `bool`.\n\n The JSON representation for `BoolValue` is JSON `true` and `false`.\n"},{"path":[4,6,1],"span":[103,8,17]},{"path":[4,6,2,0],"span":[105,2,17],"leadingComments":" The bool value.\n"},{"path":[4,6,2,0,5],"span":[105,2,6]},{"path":[4,6,2,0,1],"span":[105,7,12]},{"path":[4,6,2,0,3],"span":[105,15,16]},{"path":[4,7],"span":[111,0,114,1],"leadingComments":" Wrapper message for `string`.\n\n The JSON representation for `StringValue` is JSON string.\n"},{"path":[4,7,1],"span":[111,8,19]},{"path":[4,7,2,0],"span":[113,2,19],"leadingComments":" The string value.\n"},{"path":[4,7,2,0,5],"span":[113,2,8]},{"path":[4,7,2,0,1],"span":[113,9,14]},{"path":[4,7,2,0,3],"span":[113,17,18]},{"path":[4,8],"span":[119,0,122,1],"leadingComments":" Wrapper message for `bytes`.\n\n The JSON representation for `BytesValue` is JSON string.\n"},{"path":[4,8,1],"span":[119,8,18]},{"path":[4,8,2,0],"span":[121,2,18],"leadingComments":" The bytes value.\n"},{"path":[4,8,2,0,5],"span":[121,2,7]},{"path":[4,8,2,0,1],"span":[121,8,13]},{"path":[4,8,2,0,3],"span":[121,16,17]}]},"syntax":"proto3","bufExtension":{"isImport":true,"isSyntaxUnspecified":false}},{"name":"build/bazel/remote/execution/v2/remote_execution.proto","package":"build.bazel.remote.execution.v2","dependency":["build/bazel/semver/semver.proto","google/api/annotations.proto","google/longrunning/operations.proto","google/protobuf/any.proto","google/protobuf/duration.proto","google/protobuf/timestamp.proto","google/protobuf/wrappers.proto","google/rpc/status.proto"],"messageType":[{"name":"Action","field":[{"name":"command_digest","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"commandDigest"},{"name":"input_root_digest","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"inputRootDigest"},{"name":"timeout","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Duration","jsonName":"timeout"},{"name":"do_not_cache","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"doNotCache"},{"name":"salt","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_BYTES","jsonName":"salt"},{"name":"platform","number":10,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Platform","jsonName":"platform"}],"reservedRange":[{"start":3,"end":6},{"start":8,"end":9}]},{"name":"Command","field":[{"name":"arguments","number":1,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"arguments"},{"name":"environment_variables","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Command.EnvironmentVariable","jsonName":"environmentVariables"},{"name":"output_files","number":3,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"outputFiles"},{"name":"output_directories","number":4,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"outputDirectories"},{"name":"output_paths","number":7,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"outputPaths"},{"name":"platform","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Platform","jsonName":"platform"},{"name":"working_directory","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"workingDirectory"},{"name":"output_node_properties","number":8,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"outputNodeProperties"}],"nestedType":[{"name":"EnvironmentVariable","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"value"}]}]},{"name":"Platform","field":[{"name":"properties","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Platform.Property","jsonName":"properties"}],"nestedType":[{"name":"Property","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"value"}]}]},{"name":"Directory","field":[{"name":"files","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.FileNode","jsonName":"files"},{"name":"directories","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.DirectoryNode","jsonName":"directories"},{"name":"symlinks","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.SymlinkNode","jsonName":"symlinks"},{"name":"node_properties","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.NodeProperties","jsonName":"nodeProperties"}],"reservedRange":[{"start":4,"end":5}]},{"name":"NodeProperty","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"value"}]},{"name":"NodeProperties","field":[{"name":"properties","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.NodeProperty","jsonName":"properties"},{"name":"mtime","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"mtime"},{"name":"unix_mode","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.UInt32Value","jsonName":"unixMode"}]},{"name":"FileNode","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"digest","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"digest"},{"name":"is_executable","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"isExecutable"},{"name":"node_properties","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.NodeProperties","jsonName":"nodeProperties"}],"reservedRange":[{"start":3,"end":4},{"start":5,"end":6}]},{"name":"DirectoryNode","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"digest","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"digest"}]},{"name":"SymlinkNode","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"target","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"target"},{"name":"node_properties","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.NodeProperties","jsonName":"nodeProperties"}],"reservedRange":[{"start":3,"end":4}]},{"name":"Digest","field":[{"name":"hash","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"hash"},{"name":"size_bytes","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"sizeBytes"}]},{"name":"ExecutedActionMetadata","field":[{"name":"worker","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"worker"},{"name":"queued_timestamp","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"queuedTimestamp"},{"name":"worker_start_timestamp","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"workerStartTimestamp"},{"name":"worker_completed_timestamp","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"workerCompletedTimestamp"},{"name":"input_fetch_start_timestamp","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"inputFetchStartTimestamp"},{"name":"input_fetch_completed_timestamp","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"inputFetchCompletedTimestamp"},{"name":"execution_start_timestamp","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"executionStartTimestamp"},{"name":"execution_completed_timestamp","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"executionCompletedTimestamp"},{"name":"virtual_execution_duration","number":12,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Duration","jsonName":"virtualExecutionDuration"},{"name":"output_upload_start_timestamp","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"outputUploadStartTimestamp"},{"name":"output_upload_completed_timestamp","number":10,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"outputUploadCompletedTimestamp"},{"name":"auxiliary_metadata","number":11,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.Any","jsonName":"auxiliaryMetadata"}]},{"name":"ActionResult","field":[{"name":"output_files","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.OutputFile","jsonName":"outputFiles"},{"name":"output_file_symlinks","number":10,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.OutputSymlink","jsonName":"outputFileSymlinks"},{"name":"output_symlinks","number":12,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.OutputSymlink","jsonName":"outputSymlinks"},{"name":"output_directories","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.OutputDirectory","jsonName":"outputDirectories"},{"name":"output_directory_symlinks","number":11,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.OutputSymlink","jsonName":"outputDirectorySymlinks"},{"name":"exit_code","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"exitCode"},{"name":"stdout_raw","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_BYTES","jsonName":"stdoutRaw"},{"name":"stdout_digest","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"stdoutDigest"},{"name":"stderr_raw","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_BYTES","jsonName":"stderrRaw"},{"name":"stderr_digest","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"stderrDigest"},{"name":"execution_metadata","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.ExecutedActionMetadata","jsonName":"executionMetadata"}],"reservedRange":[{"start":1,"end":2}]},{"name":"OutputFile","field":[{"name":"path","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"path"},{"name":"digest","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"digest"},{"name":"is_executable","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"isExecutable"},{"name":"contents","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_BYTES","jsonName":"contents"},{"name":"node_properties","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.NodeProperties","jsonName":"nodeProperties"}],"reservedRange":[{"start":3,"end":4},{"start":6,"end":7}]},{"name":"Tree","field":[{"name":"root","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Directory","jsonName":"root"},{"name":"children","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Directory","jsonName":"children"}]},{"name":"OutputDirectory","field":[{"name":"path","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"path"},{"name":"tree_digest","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"treeDigest"},{"name":"is_topologically_sorted","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"isTopologicallySorted"}],"reservedRange":[{"start":2,"end":3}]},{"name":"OutputSymlink","field":[{"name":"path","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"path"},{"name":"target","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"target"},{"name":"node_properties","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.NodeProperties","jsonName":"nodeProperties"}],"reservedRange":[{"start":3,"end":4}]},{"name":"ExecutionPolicy","field":[{"name":"priority","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"priority"}]},{"name":"ResultsCachePolicy","field":[{"name":"priority","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"priority"}]},{"name":"ExecuteRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"},{"name":"skip_cache_lookup","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"skipCacheLookup"},{"name":"action_digest","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"actionDigest"},{"name":"execution_policy","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.ExecutionPolicy","jsonName":"executionPolicy"},{"name":"results_cache_policy","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.ResultsCachePolicy","jsonName":"resultsCachePolicy"},{"name":"digest_function","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.DigestFunction.Value","jsonName":"digestFunction"}],"reservedRange":[{"start":2,"end":3},{"start":4,"end":5},{"start":5,"end":6}]},{"name":"LogFile","field":[{"name":"digest","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"digest"},{"name":"human_readable","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"humanReadable"}]},{"name":"ExecuteResponse","field":[{"name":"result","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.ActionResult","jsonName":"result"},{"name":"cached_result","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"cachedResult"},{"name":"status","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.rpc.Status","jsonName":"status"},{"name":"server_logs","number":4,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.ExecuteResponse.ServerLogsEntry","jsonName":"serverLogs"},{"name":"message","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"message"}],"nestedType":[{"name":"ServerLogsEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.LogFile","jsonName":"value"}],"options":{"mapEntry":true}}]},{"name":"ExecutionStage","enumType":[{"name":"Value","value":[{"name":"UNKNOWN","number":0},{"name":"CACHE_CHECK","number":1},{"name":"QUEUED","number":2},{"name":"EXECUTING","number":3},{"name":"COMPLETED","number":4}]}]},{"name":"ExecuteOperationMetadata","field":[{"name":"stage","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.ExecutionStage.Value","jsonName":"stage"},{"name":"action_digest","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"actionDigest"},{"name":"stdout_stream_name","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"stdoutStreamName"},{"name":"stderr_stream_name","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"stderrStreamName"},{"name":"partial_execution_metadata","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.ExecutedActionMetadata","jsonName":"partialExecutionMetadata"}]},{"name":"WaitExecutionRequest","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"}]},{"name":"GetActionResultRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"},{"name":"action_digest","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"actionDigest"},{"name":"inline_stdout","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"inlineStdout"},{"name":"inline_stderr","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"inlineStderr"},{"name":"inline_output_files","number":5,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"inlineOutputFiles"},{"name":"digest_function","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.DigestFunction.Value","jsonName":"digestFunction"}]},{"name":"UpdateActionResultRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"},{"name":"action_digest","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"actionDigest"},{"name":"action_result","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.ActionResult","jsonName":"actionResult"},{"name":"results_cache_policy","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.ResultsCachePolicy","jsonName":"resultsCachePolicy"},{"name":"digest_function","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.DigestFunction.Value","jsonName":"digestFunction"}]},{"name":"FindMissingBlobsRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"},{"name":"blob_digests","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"blobDigests"},{"name":"digest_function","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.DigestFunction.Value","jsonName":"digestFunction"}]},{"name":"FindMissingBlobsResponse","field":[{"name":"missing_blob_digests","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"missingBlobDigests"}]},{"name":"BatchUpdateBlobsRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"},{"name":"requests","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.BatchUpdateBlobsRequest.Request","jsonName":"requests"},{"name":"digest_function","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.DigestFunction.Value","jsonName":"digestFunction"}],"nestedType":[{"name":"Request","field":[{"name":"digest","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"digest"},{"name":"data","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BYTES","jsonName":"data"},{"name":"compressor","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.Compressor.Value","jsonName":"compressor"}]}]},{"name":"BatchUpdateBlobsResponse","field":[{"name":"responses","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.BatchUpdateBlobsResponse.Response","jsonName":"responses"}],"nestedType":[{"name":"Response","field":[{"name":"digest","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"digest"},{"name":"status","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.rpc.Status","jsonName":"status"}]}]},{"name":"BatchReadBlobsRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"},{"name":"digests","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"digests"},{"name":"acceptable_compressors","number":3,"label":"LABEL_REPEATED","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.Compressor.Value","jsonName":"acceptableCompressors"},{"name":"digest_function","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.DigestFunction.Value","jsonName":"digestFunction"}]},{"name":"BatchReadBlobsResponse","field":[{"name":"responses","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.BatchReadBlobsResponse.Response","jsonName":"responses"}],"nestedType":[{"name":"Response","field":[{"name":"digest","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"digest"},{"name":"data","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BYTES","jsonName":"data"},{"name":"compressor","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.Compressor.Value","jsonName":"compressor"},{"name":"status","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.rpc.Status","jsonName":"status"}]}]},{"name":"GetTreeRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"},{"name":"root_digest","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"rootDigest"},{"name":"page_size","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"pageSize"},{"name":"page_token","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"pageToken"},{"name":"digest_function","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.DigestFunction.Value","jsonName":"digestFunction"}]},{"name":"GetTreeResponse","field":[{"name":"directories","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Directory","jsonName":"directories"},{"name":"next_page_token","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"nextPageToken"}]},{"name":"GetCapabilitiesRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"}]},{"name":"ServerCapabilities","field":[{"name":"cache_capabilities","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.CacheCapabilities","jsonName":"cacheCapabilities"},{"name":"execution_capabilities","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.ExecutionCapabilities","jsonName":"executionCapabilities"},{"name":"deprecated_api_version","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.semver.SemVer","jsonName":"deprecatedApiVersion"},{"name":"low_api_version","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.semver.SemVer","jsonName":"lowApiVersion"},{"name":"high_api_version","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.semver.SemVer","jsonName":"highApiVersion"}]},{"name":"DigestFunction","enumType":[{"name":"Value","value":[{"name":"UNKNOWN","number":0},{"name":"SHA256","number":1},{"name":"SHA1","number":2},{"name":"MD5","number":3},{"name":"VSO","number":4},{"name":"SHA384","number":5},{"name":"SHA512","number":6},{"name":"MURMUR3","number":7},{"name":"SHA256TREE","number":8},{"name":"BLAKE3","number":9}]}]},{"name":"ActionCacheUpdateCapabilities","field":[{"name":"update_enabled","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"updateEnabled"}]},{"name":"PriorityCapabilities","field":[{"name":"priorities","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.PriorityCapabilities.PriorityRange","jsonName":"priorities"}],"nestedType":[{"name":"PriorityRange","field":[{"name":"min_priority","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"minPriority"},{"name":"max_priority","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"maxPriority"}]}]},{"name":"SymlinkAbsolutePathStrategy","enumType":[{"name":"Value","value":[{"name":"UNKNOWN","number":0},{"name":"DISALLOWED","number":1},{"name":"ALLOWED","number":2}]}]},{"name":"Compressor","enumType":[{"name":"Value","value":[{"name":"IDENTITY","number":0},{"name":"ZSTD","number":1},{"name":"DEFLATE","number":2},{"name":"BROTLI","number":3}]}]},{"name":"CacheCapabilities","field":[{"name":"digest_functions","number":1,"label":"LABEL_REPEATED","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.DigestFunction.Value","jsonName":"digestFunctions"},{"name":"action_cache_update_capabilities","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.ActionCacheUpdateCapabilities","jsonName":"actionCacheUpdateCapabilities"},{"name":"cache_priority_capabilities","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.PriorityCapabilities","jsonName":"cachePriorityCapabilities"},{"name":"max_batch_total_size_bytes","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"maxBatchTotalSizeBytes"},{"name":"symlink_absolute_path_strategy","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.SymlinkAbsolutePathStrategy.Value","jsonName":"symlinkAbsolutePathStrategy"},{"name":"supported_compressors","number":6,"label":"LABEL_REPEATED","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.Compressor.Value","jsonName":"supportedCompressors"},{"name":"supported_batch_update_compressors","number":7,"label":"LABEL_REPEATED","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.Compressor.Value","jsonName":"supportedBatchUpdateCompressors"}]},{"name":"ExecutionCapabilities","field":[{"name":"digest_function","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.DigestFunction.Value","jsonName":"digestFunction"},{"name":"exec_enabled","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"execEnabled"},{"name":"execution_priority_capabilities","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.PriorityCapabilities","jsonName":"executionPriorityCapabilities"},{"name":"supported_node_properties","number":4,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"supportedNodeProperties"},{"name":"digest_functions","number":5,"label":"LABEL_REPEATED","type":"TYPE_ENUM","typeName":".build.bazel.remote.execution.v2.DigestFunction.Value","jsonName":"digestFunctions"}]},{"name":"ToolDetails","field":[{"name":"tool_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"toolName"},{"name":"tool_version","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"toolVersion"}]},{"name":"RequestMetadata","field":[{"name":"tool_details","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.ToolDetails","jsonName":"toolDetails"},{"name":"action_id","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"actionId"},{"name":"tool_invocation_id","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"toolInvocationId"},{"name":"correlated_invocations_id","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"correlatedInvocationsId"},{"name":"action_mnemonic","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"actionMnemonic"},{"name":"target_id","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"targetId"},{"name":"configuration_id","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"configurationId"}]}],"service":[{"name":"Execution","method":[{"name":"Execute","inputType":".build.bazel.remote.execution.v2.ExecuteRequest","outputType":".google.longrunning.Operation","options":{"[google.api.http]":{"post":"/v2/{instance_name=**}/actions:execute","body":"*"}},"serverStreaming":true},{"name":"WaitExecution","inputType":".build.bazel.remote.execution.v2.WaitExecutionRequest","outputType":".google.longrunning.Operation","options":{"[google.api.http]":{"post":"/v2/{name=operations/**}:waitExecution","body":"*"}},"serverStreaming":true}]},{"name":"ActionCache","method":[{"name":"GetActionResult","inputType":".build.bazel.remote.execution.v2.GetActionResultRequest","outputType":".build.bazel.remote.execution.v2.ActionResult","options":{"[google.api.http]":{"get":"/v2/{instance_name=**}/actionResults/{action_digest.hash}/{action_digest.size_bytes}"}}},{"name":"UpdateActionResult","inputType":".build.bazel.remote.execution.v2.UpdateActionResultRequest","outputType":".build.bazel.remote.execution.v2.ActionResult","options":{"[google.api.http]":{"put":"/v2/{instance_name=**}/actionResults/{action_digest.hash}/{action_digest.size_bytes}","body":"action_result"}}}]},{"name":"ContentAddressableStorage","method":[{"name":"FindMissingBlobs","inputType":".build.bazel.remote.execution.v2.FindMissingBlobsRequest","outputType":".build.bazel.remote.execution.v2.FindMissingBlobsResponse","options":{"[google.api.http]":{"post":"/v2/{instance_name=**}/blobs:findMissing","body":"*"}}},{"name":"BatchUpdateBlobs","inputType":".build.bazel.remote.execution.v2.BatchUpdateBlobsRequest","outputType":".build.bazel.remote.execution.v2.BatchUpdateBlobsResponse","options":{"[google.api.http]":{"post":"/v2/{instance_name=**}/blobs:batchUpdate","body":"*"}}},{"name":"BatchReadBlobs","inputType":".build.bazel.remote.execution.v2.BatchReadBlobsRequest","outputType":".build.bazel.remote.execution.v2.BatchReadBlobsResponse","options":{"[google.api.http]":{"post":"/v2/{instance_name=**}/blobs:batchRead","body":"*"}}},{"name":"GetTree","inputType":".build.bazel.remote.execution.v2.GetTreeRequest","outputType":".build.bazel.remote.execution.v2.GetTreeResponse","options":{"[google.api.http]":{"get":"/v2/{instance_name=**}/blobs/{root_digest.hash}/{root_digest.size_bytes}:getTree"}},"serverStreaming":true}]},{"name":"Capabilities","method":[{"name":"GetCapabilities","inputType":".build.bazel.remote.execution.v2.GetCapabilitiesRequest","outputType":".build.bazel.remote.execution.v2.ServerCapabilities","options":{"[google.api.http]":{"get":"/v2/{instance_name=**}/capabilities"}}}]}],"options":{"javaPackage":"build.bazel.remote.execution.v2","javaOuterClassname":"RemoteExecutionProto","javaMultipleFiles":true,"goPackage":"github.com/bazelbuild/remote-apis/build/bazel/remote/execution/v2;remoteexecution","objcClassPrefix":"REX","csharpNamespace":"Build.Bazel.Remote.Execution.V2"},"sourceCodeInfo":{"location":[{"span":[14,0,2076,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2018 The Bazel Authors.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,40]},{"path":[3,0],"span":[18,0,41]},{"path":[3,1],"span":[19,0,38]},{"path":[3,2],"span":[20,0,45]},{"path":[3,3],"span":[21,0,35]},{"path":[3,4],"span":[22,0,40]},{"path":[3,5],"span":[23,0,41]},{"path":[3,6],"span":[24,0,40]},{"path":[3,7],"span":[25,0,33]},{"path":[8],"span":[27,0,60]},{"path":[8,37],"span":[27,0,60]},{"path":[8],"span":[28,0,104]},{"path":[8,11],"span":[28,0,104]},{"path":[8],"span":[29,0,34]},{"path":[8,10],"span":[29,0,34]},{"path":[8],"span":[30,0,53]},{"path":[8,8],"span":[30,0,53]},{"path":[8],"span":[31,0,56]},{"path":[8,1],"span":[31,0,56]},{"path":[8],"span":[32,0,33]},{"path":[8,36],"span":[32,0,33]},{"path":[6,0],"span":[43,0,130,1],"leadingComments":" The Remote Execution API is used to execute an\n [Action][build.bazel.remote.execution.v2.Action] on the remote\n workers.\n\n As with other services in the Remote Execution API, any call may return an\n error with a [RetryInfo][google.rpc.RetryInfo] error detail providing\n information about when the client should retry the request; clients SHOULD\n respect the information provided.\n"},{"path":[6,0,1],"span":[43,8,17]},{"path":[6,0,2,0],"span":[117,2,119,3],"leadingComments":" Execute an action remotely.\n\n In order to execute an action, the client must first upload all of the\n inputs, the\n [Command][build.bazel.remote.execution.v2.Command] to run, and the\n [Action][build.bazel.remote.execution.v2.Action] into the\n [ContentAddressableStorage][build.bazel.remote.execution.v2.ContentAddressableStorage].\n It then calls `Execute` with an `action_digest` referring to them. The\n server will run the action and eventually return the result.\n\n The input `Action`'s fields MUST meet the various canonicalization\n requirements specified in the documentation for their types so that it has\n the same digest as other logically equivalent `Action`s. The server MAY\n enforce the requirements and return errors if a non-canonical input is\n received. It MAY also proceed without verifying some or all of the\n requirements, such as for performance reasons. If the server does not\n verify the requirement, then it will treat the `Action` as distinct from\n another logically equivalent action if they hash differently.\n\n Returns a stream of\n [google.longrunning.Operation][google.longrunning.Operation] messages\n describing the resulting execution, with eventual `response`\n [ExecuteResponse][build.bazel.remote.execution.v2.ExecuteResponse]. The\n `metadata` on the operation is of type\n [ExecuteOperationMetadata][build.bazel.remote.execution.v2.ExecuteOperationMetadata].\n\n If the client remains connected after the first response is returned after\n the server, then updates are streamed as if the client had called\n [WaitExecution][build.bazel.remote.execution.v2.Execution.WaitExecution]\n until the execution completes or the request reaches an error. The\n operation can also be queried using [Operations\n API][google.longrunning.Operations.GetOperation].\n\n The server NEED NOT implement other methods or functionality of the\n Operations API.\n\n Errors discovered during creation of the `Operation` will be reported\n as gRPC Status errors, while errors that occurred while running the\n action will be reported in the `status` field of the `ExecuteResponse`. The\n server MUST NOT set the `error` field of the `Operation` proto.\n The possible errors include:\n\n * `INVALID_ARGUMENT`: One or more arguments are invalid.\n * `FAILED_PRECONDITION`: One or more errors occurred in setting up the\n   action requested, such as a missing input or command or no worker being\n   available. The client may be able to fix the errors and retry.\n * `RESOURCE_EXHAUSTED`: There is insufficient quota of some resource to run\n   the action.\n * `UNAVAILABLE`: Due to a transient condition, such as all workers being\n   occupied (and the server does not support a queue), the action could not\n   be started. The client should retry.\n * `INTERNAL`: An internal error occurred in the execution engine or the\n   worker.\n * `DEADLINE_EXCEEDED`: The execution timed out.\n * `CANCELLED`: The operation was cancelled by the client. This status is\n   only possible if the server implements the Operations API CancelOperation\n   method, and it was called for the current execution.\n\n In the case of a missing input or command, the server SHOULD additionally\n send a [PreconditionFailure][google.rpc.PreconditionFailure] error detail\n where, for each requested blob not present in the CAS, there is a\n `Violation` with a `type` of `MISSING` and a `subject` of\n `\"blobs/{digest_function/}{hash}/{size}\"` indicating the digest of the\n missing blob. The `subject` is formatted the same way as the\n `resource_name` provided to\n [ByteStream.Read][google.bytestream.ByteStream.Read], with the leading\n instance name omitted. `digest_function` MUST thus be omitted if its value\n is one of MD5, MURMUR3, SHA1, SHA256, SHA384, SHA512, or VSO.\n\n The server does not need to guarantee that a call to this method leads to\n at most one execution of the action. The server MAY execute the action\n multiple times, potentially in parallel. These redundant executions MAY\n continue to run, even if the operation is completed.\n"},{"path":[6,0,2,0,1],"span":[117,6,13]},{"path":[6,0,2,0,2],"span":[117,14,28]},{"path":[6,0,2,0,6],"span":[117,39,45]},{"path":[6,0,2,0,3],"span":[117,46,74]},{"path":[6,0,2,0,4],"span":[118,4,92]},{"path":[6,0,2,0,4,72295728],"span":[118,4,92]},{"path":[6,0,2,1],"span":[127,2,129,3],"leadingComments":" Wait for an execution operation to complete. When the client initially\n makes the request, the server immediately responds with the current status\n of the execution. The server will leave the request stream open until the\n operation completes, and then respond with the completed operation. The\n server MAY choose to stream additional updates as execution progresses,\n such as to provide an update as to the state of the execution.\n"},{"path":[6,0,2,1,1],"span":[127,6,19]},{"path":[6,0,2,1,2],"span":[127,20,40]},{"path":[6,0,2,1,6],"span":[127,51,57]},{"path":[6,0,2,1,3],"span":[127,58,86]},{"path":[6,0,2,1,4],"span":[128,4,92]},{"path":[6,0,2,1,4,72295728],"span":[128,4,92]},{"path":[6,1],"span":[148,0,187,1],"leadingComments":" The action cache API is used to query whether a given action has already been\n performed and, if so, retrieve its result. Unlike the\n [ContentAddressableStorage][build.bazel.remote.execution.v2.ContentAddressableStorage],\n which addresses blobs by their own content, the action cache addresses the\n [ActionResult][build.bazel.remote.execution.v2.ActionResult] by a\n digest of the encoded [Action][build.bazel.remote.execution.v2.Action]\n which produced them.\n\n The lifetime of entries in the action cache is implementation-specific, but\n the server SHOULD assume that more recently used entries are more likely to\n be used again.\n\n As with other services in the Remote Execution API, any call may return an\n error with a [RetryInfo][google.rpc.RetryInfo] error detail providing\n information about when the client should retry the request; clients SHOULD\n respect the information provided.\n"},{"path":[6,1,1],"span":[148,8,19]},{"path":[6,1,2,0],"span":[161,2,163,3],"leadingComments":" Retrieve a cached execution result.\n\n Implementations SHOULD ensure that any blobs referenced from the\n [ContentAddressableStorage][build.bazel.remote.execution.v2.ContentAddressableStorage]\n are available at the time of returning the\n [ActionResult][build.bazel.remote.execution.v2.ActionResult] and will be\n for some period of time afterwards. The lifetimes of the referenced blobs SHOULD be increased\n if necessary and applicable.\n\n Errors:\n\n * `NOT_FOUND`: The requested `ActionResult` is not in the cache.\n"},{"path":[6,1,2,0,1],"span":[161,6,21]},{"path":[6,1,2,0,2],"span":[161,22,44]},{"path":[6,1,2,0,3],"span":[161,55,67]},{"path":[6,1,2,0,4],"span":[162,4,127]},{"path":[6,1,2,0,4,72295728],"span":[162,4,127]},{"path":[6,1,2,1],"span":[184,2,186,3],"leadingComments":" Upload a new execution result.\n\n In order to allow the server to perform access control based on the type of\n action, and to assist with client debugging, the client MUST first upload\n the [Action][build.bazel.remote.execution.v2.Execution] that produced the\n result, along with its\n [Command][build.bazel.remote.execution.v2.Command], into the\n `ContentAddressableStorage`.\n\n Server implementations MAY modify the\n `UpdateActionResultRequest.action_result` and return an equivalent value.\n\n Errors:\n\n * `INVALID_ARGUMENT`: One or more arguments are invalid.\n * `FAILED_PRECONDITION`: One or more errors occurred in updating the\n   action result, such as a missing command or action.\n * `RESOURCE_EXHAUSTED`: There is insufficient storage space to add the\n   entry to the cache.\n"},{"path":[6,1,2,1,1],"span":[184,6,24]},{"path":[6,1,2,1,2],"span":[184,25,50]},{"path":[6,1,2,1,3],"span":[184,61,73]},{"path":[6,1,2,1,4],"span":[185,4,149]},{"path":[6,1,2,1,4,72295728],"span":[185,4,149]},{"path":[6,2],"span":[332,0,424,1],"leadingComments":" The CAS (content-addressable storage) is used to store the inputs to and\n outputs from the execution service. Each piece of content is addressed by the\n digest of its binary data.\n\n Most of the binary data stored in the CAS is opaque to the execution engine,\n and is only used as a communication medium. In order to build an\n [Action][build.bazel.remote.execution.v2.Action],\n however, the client will need to also upload the\n [Command][build.bazel.remote.execution.v2.Command] and input root\n [Directory][build.bazel.remote.execution.v2.Directory] for the Action.\n The Command and Directory messages must be marshalled to wire format and then\n uploaded under the hash as with any other piece of content. In practice, the\n input root directory is likely to refer to other Directories in its\n hierarchy, which must also each be uploaded on their own.\n\n For small file uploads the client should group them together and call\n [BatchUpdateBlobs][build.bazel.remote.execution.v2.ContentAddressableStorage.BatchUpdateBlobs].\n\n For large uploads, the client must use the\n [Write method][google.bytestream.ByteStream.Write] of the ByteStream API.\n\n For uncompressed data, The `WriteRequest.resource_name` is of the following form:\n `{instance_name}/uploads/{uuid}/blobs/{digest_function/}{hash}/{size}{/optional_metadata}`\n\n Where:\n * `instance_name` is an identifier used to distinguish between the various\n   instances on the server. Syntax and semantics of this field are defined\n   by the server; Clients must not make any assumptions about it (e.g.,\n   whether it spans multiple path segments or not). If it is the empty path,\n   the leading slash is omitted, so that  the `resource_name` becomes\n   `uploads/{uuid}/blobs/{digest_function/}{hash}/{size}{/optional_metadata}`.\n   To simplify parsing, a path segment cannot equal any of the following\n   keywords: `blobs`, `uploads`, `actions`, `actionResults`, `operations`,\n   `capabilities` or `compressed-blobs`.\n * `uuid` is a version 4 UUID generated by the client, used to avoid\n   collisions between concurrent uploads of the same data. Clients MAY\n   reuse the same `uuid` for uploading different blobs.\n * `digest_function` is a lowercase string form of a `DigestFunction.Value`\n   enum, indicating which digest function was used to compute `hash`. If the\n   digest function used is one of MD5, MURMUR3, SHA1, SHA256, SHA384, SHA512,\n   or VSO, this component MUST be omitted. In that case the server SHOULD\n   infer the digest function using the length of the `hash` and the digest\n   functions announced in the server's capabilities.\n * `hash` and `size` refer to the [Digest][build.bazel.remote.execution.v2.Digest]\n   of the data being uploaded.\n * `optional_metadata` is implementation specific data, which clients MAY omit.\n   Servers MAY ignore this metadata.\n\n Data can alternatively be uploaded in compressed form, with the following\n `WriteRequest.resource_name` form:\n `{instance_name}/uploads/{uuid}/compressed-blobs/{compressor}/{digest_function/}{uncompressed_hash}/{uncompressed_size}{/optional_metadata}`\n\n Where:\n * `instance_name`, `uuid`, `digest_function` and `optional_metadata` are\n   defined as above.\n * `compressor` is a lowercase string form of a `Compressor.Value` enum\n   other than `identity`, which is supported by the server and advertised in\n   [CacheCapabilities.supported_compressor][build.bazel.remote.execution.v2.CacheCapabilities.supported_compressor].\n * `uncompressed_hash` and `uncompressed_size` refer to the\n   [Digest][build.bazel.remote.execution.v2.Digest] of the data being\n   uploaded, once uncompressed. Servers MUST verify that these match\n   the uploaded data once uncompressed, and MUST return an\n   `INVALID_ARGUMENT` error in the case of mismatch.\n\n Note that when writing compressed blobs, the `WriteRequest.write_offset` in\n the initial request in a stream refers to the offset in the uncompressed form\n of the blob. In subsequent requests, `WriteRequest.write_offset` MUST be the\n sum of the first request's 'WriteRequest.write_offset' and the total size of\n all the compressed data bundles in the previous requests.\n Note that this mixes an uncompressed offset with a compressed byte length,\n which is nonsensical, but it is done to fit the semantics of the existing\n ByteStream protocol.\n\n Uploads of the same data MAY occur concurrently in any form, compressed or\n uncompressed.\n\n Clients SHOULD NOT use gRPC-level compression for ByteStream API `Write`\n calls of compressed blobs, since this would compress already-compressed data.\n\n When attempting an upload, if another client has already completed the upload\n (which may occur in the middle of a single upload if another client uploads\n the same blob concurrently), the request will terminate immediately without\n error, and with a response whose `committed_size` is the value `-1` if this\n is a compressed upload, or with the full size of the uploaded file if this is\n an uncompressed upload (regardless of how much data was transmitted by the\n client). If the client completes the upload but the\n [Digest][build.bazel.remote.execution.v2.Digest] does not match, an\n `INVALID_ARGUMENT` error will be returned. In either case, the client should\n not attempt to retry the upload.\n\n Small downloads can be grouped and requested in a batch via\n [BatchReadBlobs][build.bazel.remote.execution.v2.ContentAddressableStorage.BatchReadBlobs].\n\n For large downloads, the client must use the\n [Read method][google.bytestream.ByteStream.Read] of the ByteStream API.\n\n For uncompressed data, The `ReadRequest.resource_name` is of the following form:\n `{instance_name}/blobs/{digest_function/}{hash}/{size}`\n Where `instance_name`, `digest_function`, `hash` and `size` are defined as\n for uploads.\n\n Data can alternatively be downloaded in compressed form, with the following\n `ReadRequest.resource_name` form:\n `{instance_name}/compressed-blobs/{compressor}/{digest_function/}{uncompressed_hash}/{uncompressed_size}`\n\n Where:\n * `instance_name`, `compressor` and `digest_function` are defined as for\n   uploads.\n * `uncompressed_hash` and `uncompressed_size` refer to the\n   [Digest][build.bazel.remote.execution.v2.Digest] of the data being\n   downloaded, once uncompressed. Clients MUST verify that these match\n   the downloaded data once uncompressed, and take appropriate steps in\n   the case of failure such as retrying a limited number of times or\n   surfacing an error to the user.\n\n When downloading compressed blobs:\n * `ReadRequest.read_offset` refers to the offset in the uncompressed form\n   of the blob.\n * Servers MUST return `INVALID_ARGUMENT` if `ReadRequest.read_limit` is\n   non-zero.\n * Servers MAY use any compression level they choose, including different\n   levels for different blobs (e.g. choosing a level designed for maximum\n   speed for data known to be incompressible).\n * Clients SHOULD NOT use gRPC-level compression, since this would compress\n   already-compressed data.\n\n Servers MUST be able to provide data for all recently advertised blobs in\n each of the compression formats that the server supports, as well as in\n uncompressed form.\n\n The lifetime of entries in the CAS is implementation specific, but it SHOULD\n be long enough to allow for newly-added and recently looked-up entries to be\n used in subsequent calls (e.g. to\n [Execute][build.bazel.remote.execution.v2.Execution.Execute]).\n\n Servers MUST behave as though empty blobs are always available, even if they\n have not been uploaded. Clients MAY optimize away the uploading or\n downloading of empty blobs.\n\n As with other services in the Remote Execution API, any call may return an\n error with a [RetryInfo][google.rpc.RetryInfo] error detail providing\n information about when the client should retry the request; clients SHOULD\n respect the information provided.\n"},{"path":[6,2,1],"span":[332,8,33]},{"path":[6,2,2,0],"span":[342,2,344,3],"leadingComments":" Determine if blobs are present in the CAS.\n\n Clients can use this API before uploading blobs to determine which ones are\n already present in the CAS and do not need to be uploaded again.\n\n Servers SHOULD increase the lifetimes of the referenced blobs if necessary and\n applicable.\n\n There are no method-specific errors.\n"},{"path":[6,2,2,0,1],"span":[342,6,22]},{"path":[6,2,2,0,2],"span":[342,23,46]},{"path":[6,2,2,0,3],"span":[342,57,81]},{"path":[6,2,2,0,4],"span":[343,4,94]},{"path":[6,2,2,0,4,72295728],"span":[343,4,94]},{"path":[6,2,2,1],"span":[370,2,372,3],"leadingComments":" Upload many blobs at once.\n\n The server may enforce a limit of the combined total size of blobs\n to be uploaded using this API. This limit may be obtained using the\n [Capabilities][build.bazel.remote.execution.v2.Capabilities] API.\n Requests exceeding the limit should either be split into smaller\n chunks or uploaded using the\n [ByteStream API][google.bytestream.ByteStream], as appropriate.\n\n This request is equivalent to calling a Bytestream `Write` request\n on each individual blob, in parallel. The requests may succeed or fail\n independently.\n\n Errors:\n\n * `INVALID_ARGUMENT`: The client attempted to upload more than the\n   server supported limit.\n\n Individual requests may return the following errors, additionally:\n\n * `RESOURCE_EXHAUSTED`: There is insufficient disk quota to store the blob.\n * `INVALID_ARGUMENT`: The\n [Digest][build.bazel.remote.execution.v2.Digest] does not match the\n provided data.\n"},{"path":[6,2,2,1,1],"span":[370,6,22]},{"path":[6,2,2,1,2],"span":[370,23,46]},{"path":[6,2,2,1,3],"span":[370,57,81]},{"path":[6,2,2,1,4],"span":[371,4,94]},{"path":[6,2,2,1,4,72295728],"span":[371,4,94]},{"path":[6,2,2,2],"span":[394,2,396,3],"leadingComments":" Download many blobs at once.\n\n The server may enforce a limit of the combined total size of blobs\n to be downloaded using this API. This limit may be obtained using the\n [Capabilities][build.bazel.remote.execution.v2.Capabilities] API.\n Requests exceeding the limit should either be split into smaller\n chunks or downloaded using the\n [ByteStream API][google.bytestream.ByteStream], as appropriate.\n\n This request is equivalent to calling a Bytestream `Read` request\n on each individual blob, in parallel. The requests may succeed or fail\n independently.\n\n Errors:\n\n * `INVALID_ARGUMENT`: The client attempted to read more than the\n   server supported limit.\n\n Every error on individual read will be returned in the corresponding digest\n status.\n"},{"path":[6,2,2,2,1],"span":[394,6,20]},{"path":[6,2,2,2,2],"span":[394,21,42]},{"path":[6,2,2,2,3],"span":[394,53,75]},{"path":[6,2,2,2,4],"span":[395,4,92]},{"path":[6,2,2,2,4,72295728],"span":[395,4,92]},{"path":[6,2,2,3],"span":[421,2,423,3],"leadingComments":" Fetch the entire directory tree rooted at a node.\n\n This request must be targeted at a\n [Directory][build.bazel.remote.execution.v2.Directory] stored in the\n [ContentAddressableStorage][build.bazel.remote.execution.v2.ContentAddressableStorage]\n (CAS). The server will enumerate the `Directory` tree recursively and\n return every node descended from the root.\n\n The GetTreeRequest.page_token parameter can be used to skip ahead in\n the stream (e.g. when retrying a partially completed and aborted request),\n by setting it to a value taken from GetTreeResponse.next_page_token of the\n last successfully processed GetTreeResponse).\n\n The exact traversal order is unspecified and, unless retrieving subsequent\n pages from an earlier request, is not guaranteed to be stable across\n multiple invocations of `GetTree`.\n\n If part of the tree is missing from the CAS, the server will return the\n portion present and omit the rest.\n\n Errors:\n\n * `NOT_FOUND`: The requested tree root is not present in the CAS.\n"},{"path":[6,2,2,3,1],"span":[421,6,13]},{"path":[6,2,2,3,2],"span":[421,14,28]},{"path":[6,2,2,3,6],"span":[421,39,45]},{"path":[6,2,2,3,3],"span":[421,46,61]},{"path":[6,2,2,3,4],"span":[422,4,123]},{"path":[6,2,2,3,4,72295728],"span":[422,4,123]},{"path":[6,3],"span":[432,0,448,1],"leadingComments":" The Capabilities service may be used by remote execution clients to query\n various server properties, in order to self-configure or return meaningful\n error messages.\n\n The query may include a particular `instance_name`, in which case the values\n returned will pertain to that instance.\n"},{"path":[6,3,1],"span":[432,8,20]},{"path":[6,3,2,0],"span":[443,2,447,3],"leadingComments":" GetCapabilities returns the server capabilities configuration of the\n remote endpoint.\n Only the capabilities of the services supported by the endpoint will\n be returned:\n * Execution + CAS + Action Cache endpoints should return both\n   CacheCapabilities and ExecutionCapabilities.\n * Execution only endpoints should return ExecutionCapabilities.\n * CAS + Action Cache only endpoints should return CacheCapabilities.\n\n There are no method-specific errors.\n"},{"path":[6,3,2,0,1],"span":[443,6,21]},{"path":[6,3,2,0,2],"span":[443,22,44]},{"path":[6,3,2,0,3],"span":[443,55,73]},{"path":[6,3,2,0,4],"span":[444,4,446,6]},{"path":[6,3,2,0,4,72295728],"span":[444,4,446,6]},{"path":[4,0],"span":[471,0,537,1],"leadingComments":" An `Action` captures all the information about an execution which is required\n to reproduce it.\n\n `Action`s are the core component of the [Execution] service. A single\n `Action` represents a repeatable action that can be performed by the\n execution service. `Action`s can be succinctly identified by the digest of\n their wire format encoding and, once an `Action` has been executed, will be\n cached in the action cache. Future requests can then use the cached result\n rather than needing to run afresh.\n\n When a server completes execution of an\n [Action][build.bazel.remote.execution.v2.Action], it MAY choose to\n cache the [result][build.bazel.remote.execution.v2.ActionResult] in\n the [ActionCache][build.bazel.remote.execution.v2.ActionCache] unless\n `do_not_cache` is `true`. Clients SHOULD expect the server to do so. By\n default, future calls to\n [Execute][build.bazel.remote.execution.v2.Execution.Execute] the same\n `Action` will also serve their results from the cache. Clients must take care\n to understand the caching behaviour. Ideally, all `Action`s will be\n reproducible so that serving a result from cache is always desirable and\n correct.\n"},{"path":[4,0,1],"span":[471,8,14]},{"path":[4,0,2,0],"span":[475,2,28],"leadingComments":" The digest of the [Command][build.bazel.remote.execution.v2.Command]\n to run, which MUST be present in the\n [ContentAddressableStorage][build.bazel.remote.execution.v2.ContentAddressableStorage].\n"},{"path":[4,0,2,0,6],"span":[475,2,8]},{"path":[4,0,2,0,1],"span":[475,9,23]},{"path":[4,0,2,0,3],"span":[475,26,27]},{"path":[4,0,2,1],"span":[484,2,31],"leadingComments":" The digest of the root\n [Directory][build.bazel.remote.execution.v2.Directory] for the input\n files. The files in the directory tree are available in the correct\n location on the build machine before the command is executed. The root\n directory, as well as every subdirectory and content blob referred to, MUST\n be in the\n [ContentAddressableStorage][build.bazel.remote.execution.v2.ContentAddressableStorage].\n"},{"path":[4,0,2,1,6],"span":[484,2,8]},{"path":[4,0,2,1,1],"span":[484,9,26]},{"path":[4,0,2,1,3],"span":[484,29,30]},{"path":[4,0,9],"span":[486,2,18],"trailingComments":" Used for fields moved to [Command][build.bazel.remote.execution.v2.Command].\n"},{"path":[4,0,9,0],"span":[486,11,17]},{"path":[4,0,9,0,1],"span":[486,11,12]},{"path":[4,0,9,0,2],"span":[486,16,17]},{"path":[4,0,2,2],"span":[512,2,39],"leadingComments":" A timeout after which the execution should be killed. If the timeout is\n absent, then the client is specifying that the execution should continue\n as long as the server will let it. The server SHOULD impose a timeout if\n the client does not specify one, however, if the client does specify a\n timeout that is longer than the server's maximum timeout, the server MUST\n reject the request.\n\n The timeout is only intended to cover the \"execution\" of the specified\n action and not time in queue nor any overheads before or after execution\n such as marshalling inputs/outputs. The server SHOULD avoid including time\n spent the client doesn't have control over, and MAY extend or reduce the\n timeout to account for delays or speedups that occur during execution\n itself (e.g., lazily loading data from the Content Addressable Storage,\n live migration of virtual machines, emulation overhead).\n\n The timeout is a part of the\n [Action][build.bazel.remote.execution.v2.Action] message, and\n therefore two `Actions` with different timeouts are different, even if they\n are otherwise identical. This is because, if they were not, running an\n `Action` with a lower timeout than is required might result in a cache hit\n from an execution run with a longer timeout, hiding the fact that the\n timeout is too short. By encoding it directly in the `Action`, a lower\n timeout will result in a cache miss and the execution timeout will fail\n immediately, rather than whenever the cache entry gets evicted.\n"},{"path":[4,0,2,2,6],"span":[512,2,26]},{"path":[4,0,2,2,1],"span":[512,27,34]},{"path":[4,0,2,2,3],"span":[512,37,38]},{"path":[4,0,2,3],"span":[516,2,24],"leadingComments":" If true, then the `Action`'s result cannot be cached, and in-flight\n requests for the same `Action` may not be merged.\n"},{"path":[4,0,2,3,5],"span":[516,2,6]},{"path":[4,0,2,3,1],"span":[516,7,19]},{"path":[4,0,2,3,3],"span":[516,22,23]},{"path":[4,0,9],"span":[518,2,13],"trailingComments":" Used for field moved to [Command][build.bazel.remote.execution.v2.Command].\n"},{"path":[4,0,9,1],"span":[518,11,12]},{"path":[4,0,9,1,1],"span":[518,11,12]},{"path":[4,0,9,1,2],"span":[518,11,12]},{"path":[4,0,2,4],"span":[526,2,17],"leadingComments":" An optional additional salt value used to place this `Action` into a\n separate cache namespace from other instances having the same field\n contents. This salt typically comes from operational configuration\n specific to sources such as repo and service configuration,\n and allows disowning an entire set of ActionResults that might have been\n poisoned by buggy software or tool failures.\n"},{"path":[4,0,2,4,5],"span":[526,2,7]},{"path":[4,0,2,4,1],"span":[526,8,12]},{"path":[4,0,2,4,3],"span":[526,15,16]},{"path":[4,0,2,5],"span":[536,2,25],"leadingComments":" The optional platform requirements for the execution environment. The\n server MAY choose to execute the action on any worker satisfying the\n requirements, so the client SHOULD ensure that running the action on any\n such worker will have the same result.  A detailed lexicon for this can be\n found in the accompanying platform.md.\n New in version 2.2: clients SHOULD set these platform properties as well\n as those in the [Command][build.bazel.remote.execution.v2.Command]. Servers\n SHOULD prefer those set here.\n"},{"path":[4,0,2,5,6],"span":[536,2,10]},{"path":[4,0,2,5,1],"span":[536,11,19]},{"path":[4,0,2,5,3],"span":[536,22,24]},{"path":[4,1],"span":[546,0,697,1],"leadingComments":" A `Command` is the actual command executed by a worker running an\n [Action][build.bazel.remote.execution.v2.Action] and specifications of its\n environment.\n\n Except as otherwise required, the environment (such as which system\n libraries or binaries are available, and what filesystems are mounted where)\n is defined by and specific to the implementation of the remote execution API.\n"},{"path":[4,1,1],"span":[546,8,15]},{"path":[4,1,3,0],"span":[549,2,555,3],"leadingComments":" An `EnvironmentVariable` is one variable to set in the running program's\n environment.\n"},{"path":[4,1,3,0,1],"span":[549,10,29]},{"path":[4,1,3,0,2,0],"span":[551,4,20],"leadingComments":" The variable name.\n"},{"path":[4,1,3,0,2,0,5],"span":[551,4,10]},{"path":[4,1,3,0,2,0,1],"span":[551,11,15]},{"path":[4,1,3,0,2,0,3],"span":[551,18,19]},{"path":[4,1,3,0,2,1],"span":[554,4,21],"leadingComments":" The variable value.\n"},{"path":[4,1,3,0,2,1,5],"span":[554,4,10]},{"path":[4,1,3,0,2,1,1],"span":[554,11,16]},{"path":[4,1,3,0,2,1,3],"span":[554,19,20]},{"path":[4,1,2,0],"span":[572,2,32],"leadingComments":" The arguments to the command.\n\n The first argument specifies the command to run, which may be either an\n absolute path, a path relative to the working directory, or an unqualified\n path (without path separators) which will be resolved using the operating\n system's equivalent of the PATH environment variable. Path separators\n native to the operating system running on the worker SHOULD be used. If the\n `environment_variables` list contains an entry for the PATH environment\n variable, it SHOULD be respected. If not, the resolution process is\n implementation-defined.\n\n Changed in v2.3. v2.2 and older require that no PATH lookups are performed,\n and that relative paths are resolved relative to the input root. This\n behavior can, however, not be relied upon, as most implementations already\n followed the rules described above.\n"},{"path":[4,1,2,0,4],"span":[572,2,10]},{"path":[4,1,2,0,5],"span":[572,11,17]},{"path":[4,1,2,0,1],"span":[572,18,27]},{"path":[4,1,2,0,3],"span":[572,30,31]},{"path":[4,1,2,1],"span":[582,2,57],"leadingComments":" The environment variables to set when running the program. The worker may\n provide its own default environment variables; these defaults can be\n overridden using this field. Additional variables can also be specified.\n\n In order to ensure that equivalent\n [Command][build.bazel.remote.execution.v2.Command]s always hash to the same\n value, the environment variables MUST be lexicographically sorted by name.\n Sorting of strings is done by code point, equivalently, by the UTF-8 bytes.\n"},{"path":[4,1,2,1,4],"span":[582,2,10]},{"path":[4,1,2,1,6],"span":[582,11,30]},{"path":[4,1,2,1,1],"span":[582,31,52]},{"path":[4,1,2,1,3],"span":[582,55,56]},{"path":[4,1,2,2],"span":[607,2,35],"leadingComments":" A list of the output files that the client expects to retrieve from the\n action. Only the listed files, as well as directories listed in\n `output_directories`, will be returned to the client as output.\n Other files or directories that may be created during command execution\n are discarded.\n\n The paths are relative to the working directory of the action execution.\n The paths are specified using a single forward slash (`/`) as a path\n separator, even if the execution platform natively uses a different\n separator. The path MUST NOT include a trailing slash, nor a leading slash,\n being a relative path.\n\n In order to ensure consistent hashing of the same Action, the output paths\n MUST be sorted lexicographically by code point (or, equivalently, by UTF-8\n bytes).\n\n An output file cannot be duplicated, be a parent of another output file, or\n have the same path as any of the listed output directories.\n\n Directories leading up to the output files are created by the worker prior\n to execution, even if they are not explicitly part of the input root.\n\n DEPRECATED since v2.1: Use `output_paths` instead.\n"},{"path":[4,1,2,2,4],"span":[607,2,10]},{"path":[4,1,2,2,5],"span":[607,11,17]},{"path":[4,1,2,2,1],"span":[607,18,30]},{"path":[4,1,2,2,3],"span":[607,33,34]},{"path":[4,1,2,3],"span":[638,2,41],"leadingComments":" A list of the output directories that the client expects to retrieve from\n the action. Only the listed directories will be returned (an entire\n directory structure will be returned as a\n [Tree][build.bazel.remote.execution.v2.Tree] message digest, see\n [OutputDirectory][build.bazel.remote.execution.v2.OutputDirectory]), as\n well as files listed in `output_files`. Other files or directories that\n may be created during command execution are discarded.\n\n The paths are relative to the working directory of the action execution.\n The paths are specified using a single forward slash (`/`) as a path\n separator, even if the execution platform natively uses a different\n separator. The path MUST NOT include a trailing slash, nor a leading slash,\n being a relative path. The special value of empty string is allowed,\n although not recommended, and can be used to capture the entire working\n directory tree, including inputs.\n\n In order to ensure consistent hashing of the same Action, the output paths\n MUST be sorted lexicographically by code point (or, equivalently, by UTF-8\n bytes).\n\n An output directory cannot be duplicated or have the same path as any of\n the listed output files. An output directory is allowed to be a parent of\n another output directory.\n\n Directories leading up to the output directories (but not the output\n directories themselves) are created by the worker prior to execution, even\n if they are not explicitly part of the input root.\n\n DEPRECATED since 2.1: Use `output_paths` instead.\n"},{"path":[4,1,2,3,4],"span":[638,2,10]},{"path":[4,1,2,3,5],"span":[638,11,17]},{"path":[4,1,2,3,1],"span":[638,18,36]},{"path":[4,1,2,3,3],"span":[638,39,40]},{"path":[4,1,2,4],"span":[668,2,35],"leadingComments":" A list of the output paths that the client expects to retrieve from the\n action. Only the listed paths will be returned to the client as output.\n The type of the output (file or directory) is not specified, and will be\n determined by the server after action execution. If the resulting path is\n a file, it will be returned in an\n [OutputFile][build.bazel.remote.execution.v2.OutputFile] typed field.\n If the path is a directory, the entire directory structure will be returned\n as a [Tree][build.bazel.remote.execution.v2.Tree] message digest, see\n [OutputDirectory][build.bazel.remote.execution.v2.OutputDirectory]\n Other files or directories that may be created during command execution\n are discarded.\n\n The paths are relative to the working directory of the action execution.\n The paths are specified using a single forward slash (`/`) as a path\n separator, even if the execution platform natively uses a different\n separator. The path MUST NOT include a trailing slash, nor a leading slash,\n being a relative path.\n\n In order to ensure consistent hashing of the same Action, the output paths\n MUST be deduplicated and sorted lexicographically by code point (or,\n equivalently, by UTF-8 bytes).\n\n Directories leading up to the output paths are created by the worker prior\n to execution, even if they are not explicitly part of the input root.\n\n New in v2.1: this field supersedes the DEPRECATED `output_files` and\n `output_directories` fields. If `output_paths` is used, `output_files` and\n `output_directories` will be ignored!\n"},{"path":[4,1,2,4,4],"span":[668,2,10]},{"path":[4,1,2,4,5],"span":[668,11,17]},{"path":[4,1,2,4,1],"span":[668,18,30]},{"path":[4,1,2,4,3],"span":[668,33,34]},{"path":[4,1,2,5],"span":[678,2,24],"leadingComments":" The platform requirements for the execution environment. The server MAY\n choose to execute the action on any worker satisfying the requirements, so\n the client SHOULD ensure that running the action on any such worker will\n have the same result.  A detailed lexicon for this can be found in the\n accompanying platform.md.\n DEPRECATED as of v2.2: platform properties are now specified directly in\n the action. See documentation note in the\n [Action][build.bazel.remote.execution.v2.Action] for migration.\n"},{"path":[4,1,2,5,6],"span":[678,2,10]},{"path":[4,1,2,5,1],"span":[678,11,19]},{"path":[4,1,2,5,3],"span":[678,22,23]},{"path":[4,1,2,6],"span":[683,2,31],"leadingComments":" The working directory, relative to the input root, for the command to run\n in. It must be a directory which exists in the input tree. If it is left\n empty, then the action is run in the input root.\n"},{"path":[4,1,2,6,5],"span":[683,2,8]},{"path":[4,1,2,6,1],"span":[683,9,26]},{"path":[4,1,2,6,3],"span":[683,29,30]},{"path":[4,1,2,7],"span":[696,2,45],"leadingComments":" A list of keys for node properties the client expects to retrieve for\n output files and directories. Keys are either names of string-based\n [NodeProperty][build.bazel.remote.execution.v2.NodeProperty] or\n names of fields in [NodeProperties][build.bazel.remote.execution.v2.NodeProperties].\n In order to ensure that equivalent `Action`s always hash to the same\n value, the node properties MUST be lexicographically sorted by name.\n Sorting of strings is done by code point, equivalently, by the UTF-8 bytes.\n\n The interpretation of string-based properties is server-dependent. If a\n property is not recognized by the server, the server will return an\n `INVALID_ARGUMENT`.\n"},{"path":[4,1,2,7,4],"span":[696,2,10]},{"path":[4,1,2,7,5],"span":[696,11,17]},{"path":[4,1,2,7,1],"span":[696,18,40]},{"path":[4,1,2,7,3],"span":[696,43,44]},{"path":[4,2],"span":[704,0,740,1],"leadingComments":" A `Platform` is a set of requirements, such as hardware, operating system, or\n compiler toolchain, for an\n [Action][build.bazel.remote.execution.v2.Action]'s execution\n environment. A `Platform` is represented as a series of key-value pairs\n representing the properties that are required of the platform.\n"},{"path":[4,2,1],"span":[704,8,16]},{"path":[4,2,3,0],"span":[727,2,733,3],"leadingComments":" A single property for the environment. The server is responsible for\n specifying the property `name`s that it accepts. If an unknown `name` is\n provided in the requirements for an\n [Action][build.bazel.remote.execution.v2.Action], the server SHOULD\n reject the execution request. If permitted by the server, the same `name`\n may occur multiple times.\n\n The server is also responsible for specifying the interpretation of\n property `value`s. For instance, a property describing how much RAM must be\n available may be interpreted as allowing a worker with 16GB to fulfill a\n request for 8GB, while a property describing the OS environment on which\n the action must be performed may require an exact match with the worker's\n OS.\n\n The server MAY use the `value` of one or more properties to determine how\n it sets up the execution environment, such as by making specific system\n files available to the worker.\n\n Both names and values are typically case-sensitive. Note that the platform\n is implicitly part of the action digest, so even tiny changes in the names\n or values (like changing case) may result in different action cache\n entries.\n"},{"path":[4,2,3,0,1],"span":[727,10,18]},{"path":[4,2,3,0,2,0],"span":[729,4,20],"leadingComments":" The property name.\n"},{"path":[4,2,3,0,2,0,5],"span":[729,4,10]},{"path":[4,2,3,0,2,0,1],"span":[729,11,15]},{"path":[4,2,3,0,2,0,3],"span":[729,18,19]},{"path":[4,2,3,0,2,1],"span":[732,4,21],"leadingComments":" The property value.\n"},{"path":[4,2,3,0,2,1,5],"span":[732,4,10]},{"path":[4,2,3,0,2,1,1],"span":[732,11,16]},{"path":[4,2,3,0,2,1,3],"span":[732,19,20]},{"path":[4,2,2,0],"span":[739,2,35],"leadingComments":" The properties that make up this platform. In order to ensure that\n equivalent `Platform`s always hash to the same value, the properties MUST\n be lexicographically sorted by name, and then by value. Sorting of strings\n is done by code point, equivalently, by the UTF-8 bytes.\n"},{"path":[4,2,2,0,4],"span":[739,2,10]},{"path":[4,2,2,0,6],"span":[739,11,19]},{"path":[4,2,2,0,1],"span":[739,20,30]},{"path":[4,2,2,0,3],"span":[739,33,34]},{"path":[4,3],"span":[818,0,831,1],"leadingComments":" A `Directory` represents a directory node in a file tree, containing zero or\n more children [FileNodes][build.bazel.remote.execution.v2.FileNode],\n [DirectoryNodes][build.bazel.remote.execution.v2.DirectoryNode] and\n [SymlinkNodes][build.bazel.remote.execution.v2.SymlinkNode].\n Each `Node` contains its name in the directory, either the digest of its\n content (either a file blob or a `Directory` proto) or a symlink target, as\n well as possibly some metadata about the file or directory.\n\n In order to ensure that two equivalent directory trees hash to the same\n value, the following restrictions MUST be obeyed when constructing a\n a `Directory`:\n\n * Every child in the directory must have a path of exactly one segment.\n   Multiple levels of directory hierarchy may not be collapsed.\n * Each child in the directory must have a unique path segment (file name).\n   Note that while the API itself is case-sensitive, the environment where\n   the Action is executed may or may not be case-sensitive. That is, it is\n   legal to call the API with a Directory that has both \"Foo\" and \"foo\" as\n   children, but the Action may be rejected by the remote system upon\n   execution.\n * The files, directories and symlinks in the directory must each be sorted\n   in lexicographical order by path. The path strings must be sorted by code\n   point, equivalently, by UTF-8 bytes.\n * The [NodeProperties][build.bazel.remote.execution.v2.NodeProperty] of files,\n   directories, and symlinks must be sorted in lexicographical order by\n   property name.\n\n A `Directory` that obeys the restrictions is said to be in canonical form.\n\n As an example, the following could be used for a file named `bar` and a\n directory named `foo` with an executable file named `baz` (hashes shortened\n for readability):\n\n ```json\n // (Directory proto)\n {\n   files: [\n     {\n       name: \"bar\",\n       digest: {\n         hash: \"4a73bc9d03...\",\n         size: 65534\n       },\n       node_properties: [\n         {\n           \"name\": \"MTime\",\n           \"value\": \"2017-01-15T01:30:15.01Z\"\n         }\n       ]\n     }\n   ],\n   directories: [\n     {\n       name: \"foo\",\n       digest: {\n         hash: \"4cf2eda940...\",\n         size: 43\n       }\n     }\n   ]\n }\n\n // (Directory proto with hash \"4cf2eda940...\" and size 43)\n {\n   files: [\n     {\n       name: \"baz\",\n       digest: {\n         hash: \"b2c941073e...\",\n         size: 1294,\n       },\n       is_executable: true\n     }\n   ]\n }\n ```\n"},{"path":[4,3,1],"span":[818,8,17]},{"path":[4,3,2,0],"span":[820,2,30],"leadingComments":" The files in the directory.\n"},{"path":[4,3,2,0,4],"span":[820,2,10]},{"path":[4,3,2,0,6],"span":[820,11,19]},{"path":[4,3,2,0,1],"span":[820,20,25]},{"path":[4,3,2,0,3],"span":[820,28,29]},{"path":[4,3,2,1],"span":[823,2,41],"leadingComments":" The subdirectories in the directory.\n"},{"path":[4,3,2,1,4],"span":[823,2,10]},{"path":[4,3,2,1,6],"span":[823,11,24]},{"path":[4,3,2,1,1],"span":[823,25,36]},{"path":[4,3,2,1,3],"span":[823,39,40]},{"path":[4,3,2,2],"span":[826,2,36],"leadingComments":" The symlinks in the directory.\n"},{"path":[4,3,2,2,4],"span":[826,2,10]},{"path":[4,3,2,2,6],"span":[826,11,22]},{"path":[4,3,2,2,1],"span":[826,23,31]},{"path":[4,3,2,2,3],"span":[826,34,35]},{"path":[4,3,9],"span":[829,2,13],"leadingComments":" The node properties of the Directory.\n"},{"path":[4,3,9,0],"span":[829,11,12]},{"path":[4,3,9,0,1],"span":[829,11,12]},{"path":[4,3,9,0,2],"span":[829,11,12]},{"path":[4,3,2,3],"span":[830,2,37]},{"path":[4,3,2,3,6],"span":[830,2,16]},{"path":[4,3,2,3,1],"span":[830,17,32]},{"path":[4,3,2,3,3],"span":[830,35,36]},{"path":[4,4],"span":[838,0,844,1],"leadingComments":" A single property for [FileNodes][build.bazel.remote.execution.v2.FileNode],\n [DirectoryNodes][build.bazel.remote.execution.v2.DirectoryNode], and\n [SymlinkNodes][build.bazel.remote.execution.v2.SymlinkNode]. The server is\n responsible for specifying the property `name`s that it accepts. If\n permitted by the server, the same `name` may occur multiple times.\n"},{"path":[4,4,1],"span":[838,8,20]},{"path":[4,4,2,0],"span":[840,4,20],"leadingComments":" The property name.\n"},{"path":[4,4,2,0,5],"span":[840,4,10]},{"path":[4,4,2,0,1],"span":[840,11,15]},{"path":[4,4,2,0,3],"span":[840,18,19]},{"path":[4,4,2,1],"span":[843,4,21],"leadingComments":" The property value.\n"},{"path":[4,4,2,1,5],"span":[843,4,10]},{"path":[4,4,2,1,1],"span":[843,11,16]},{"path":[4,4,2,1,3],"span":[843,19,20]},{"path":[4,5],"span":[851,0,861,1],"leadingComments":" Node properties for [FileNodes][build.bazel.remote.execution.v2.FileNode],\n [DirectoryNodes][build.bazel.remote.execution.v2.DirectoryNode], and\n [SymlinkNodes][build.bazel.remote.execution.v2.SymlinkNode]. The server is\n responsible for specifying the properties that it accepts.\n\n"},{"path":[4,5,1],"span":[851,8,22]},{"path":[4,5,2,0],"span":[854,2,39],"leadingComments":" A list of string-based\n [NodeProperties][build.bazel.remote.execution.v2.NodeProperty].\n"},{"path":[4,5,2,0,4],"span":[854,2,10]},{"path":[4,5,2,0,6],"span":[854,11,23]},{"path":[4,5,2,0,1],"span":[854,24,34]},{"path":[4,5,2,0,3],"span":[854,37,38]},{"path":[4,5,2,1],"span":[857,2,38],"leadingComments":" The file's last modification timestamp.\n"},{"path":[4,5,2,1,6],"span":[857,2,27]},{"path":[4,5,2,1,1],"span":[857,28,33]},{"path":[4,5,2,1,3],"span":[857,36,37]},{"path":[4,5,2,2],"span":[860,2,44],"leadingComments":" The UNIX file mode, e.g., 0755.\n"},{"path":[4,5,2,2,6],"span":[860,2,29]},{"path":[4,5,2,2,1],"span":[860,30,39]},{"path":[4,5,2,2,3],"span":[860,42,43]},{"path":[4,6],"span":[864,0,879,1],"leadingComments":" A `FileNode` represents a single file and associated metadata.\n"},{"path":[4,6,1],"span":[864,8,16]},{"path":[4,6,2,0],"span":[866,2,18],"leadingComments":" The name of the file.\n"},{"path":[4,6,2,0,5],"span":[866,2,8]},{"path":[4,6,2,0,1],"span":[866,9,13]},{"path":[4,6,2,0,3],"span":[866,16,17]},{"path":[4,6,2,1],"span":[869,2,20],"leadingComments":" The digest of the file's content.\n"},{"path":[4,6,2,1,6],"span":[869,2,8]},{"path":[4,6,2,1,1],"span":[869,9,15]},{"path":[4,6,2,1,3],"span":[869,18,19]},{"path":[4,6,9],"span":[871,2,13],"trailingComments":" Reserved to ensure wire-compatibility with `OutputFile`.\n"},{"path":[4,6,9,0],"span":[871,11,12]},{"path":[4,6,9,0,1],"span":[871,11,12]},{"path":[4,6,9,0,2],"span":[871,11,12]},{"path":[4,6,2,2],"span":[874,2,25],"leadingComments":" True if file is executable, false otherwise.\n"},{"path":[4,6,2,2,5],"span":[874,2,6]},{"path":[4,6,2,2,1],"span":[874,7,20]},{"path":[4,6,2,2,3],"span":[874,23,24]},{"path":[4,6,9],"span":[877,2,13],"leadingComments":" The node properties of the FileNode.\n"},{"path":[4,6,9,1],"span":[877,11,12]},{"path":[4,6,9,1,1],"span":[877,11,12]},{"path":[4,6,9,1,2],"span":[877,11,12]},{"path":[4,6,2,3],"span":[878,2,37]},{"path":[4,6,2,3,6],"span":[878,2,16]},{"path":[4,6,2,3,1],"span":[878,17,32]},{"path":[4,6,2,3,3],"span":[878,35,36]},{"path":[4,7],"span":[884,0,893,1],"leadingComments":" A `DirectoryNode` represents a child of a\n [Directory][build.bazel.remote.execution.v2.Directory] which is itself\n a `Directory` and its associated metadata.\n"},{"path":[4,7,1],"span":[884,8,21]},{"path":[4,7,2,0],"span":[886,2,18],"leadingComments":" The name of the directory.\n"},{"path":[4,7,2,0,5],"span":[886,2,8]},{"path":[4,7,2,0,1],"span":[886,9,13]},{"path":[4,7,2,0,3],"span":[886,16,17]},{"path":[4,7,2,1],"span":[892,2,20],"leadingComments":" The digest of the\n [Directory][build.bazel.remote.execution.v2.Directory] object\n represented. See [Digest][build.bazel.remote.execution.v2.Digest]\n for information about how to take the digest of a proto message.\n"},{"path":[4,7,2,1,6],"span":[892,2,8]},{"path":[4,7,2,1,1],"span":[892,9,15]},{"path":[4,7,2,1,3],"span":[892,18,19]},{"path":[4,8],"span":[896,0,914,1],"leadingComments":" A `SymlinkNode` represents a symbolic link.\n"},{"path":[4,8,1],"span":[896,8,19]},{"path":[4,8,2,0],"span":[898,2,18],"leadingComments":" The name of the symlink.\n"},{"path":[4,8,2,0,5],"span":[898,2,8]},{"path":[4,8,2,0,1],"span":[898,9,13]},{"path":[4,8,2,0,3],"span":[898,16,17]},{"path":[4,8,2,1],"span":[909,2,20],"leadingComments":" The target path of the symlink. The path separator is a forward slash `/`.\n The target path can be relative to the parent directory of the symlink or\n it can be an absolute path starting with `/`. Support for absolute paths\n can be checked using the [Capabilities][build.bazel.remote.execution.v2.Capabilities]\n API. `..` components are allowed anywhere in the target path as logical\n canonicalization may lead to different behavior in the presence of\n directory symlinks (e.g. `foo/../bar` may not be the same as `bar`).\n To reduce potential cache misses, canonicalization is still recommended\n where this is possible without impacting correctness.\n"},{"path":[4,8,2,1,5],"span":[909,2,8]},{"path":[4,8,2,1,1],"span":[909,9,15]},{"path":[4,8,2,1,3],"span":[909,18,19]},{"path":[4,8,9],"span":[912,2,13],"leadingComments":" The node properties of the SymlinkNode.\n"},{"path":[4,8,9,0],"span":[912,11,12]},{"path":[4,8,9,0,1],"span":[912,11,12]},{"path":[4,8,9,0,2],"span":[912,11,12]},{"path":[4,8,2,2],"span":[913,2,37]},{"path":[4,8,2,2,6],"span":[913,2,16]},{"path":[4,8,2,2,1],"span":[913,17,32]},{"path":[4,8,2,2,3],"span":[913,35,36]},{"path":[4,9],"span":[947,0,954,1],"leadingComments":" A content digest. A digest for a given blob consists of the size of the blob\n and its hash. The hash algorithm to use is defined by the server.\n\n The size is considered to be an integral part of the digest and cannot be\n separated. That is, even if the `hash` field is correctly specified but\n `size_bytes` is not, the server MUST reject the request.\n\n The reason for including the size in the digest is as follows: in a great\n many cases, the server needs to know the size of the blob it is about to work\n with prior to starting an operation with it, such as flattening Merkle tree\n structures or streaming it to a worker. Technically, the server could\n implement a separate metadata store, but this results in a significantly more\n complicated implementation as opposed to having the client specify the size\n up-front (or storing the size along with the digest in every message where\n digests are embedded). This does mean that the API leaks some implementation\n details of (what we consider to be) a reasonable server implementation, but\n we consider this to be a worthwhile tradeoff.\n\n When a `Digest` is used to refer to a proto message, it always refers to the\n message in binary encoded form. To ensure consistent hashing, clients and\n servers MUST ensure that they serialize messages according to the following\n rules, even if there are alternate valid encodings for the same message:\n\n * Fields are serialized in tag order.\n * There are no unknown fields.\n * There are no duplicate fields.\n * Fields are serialized according to the default semantics for their type.\n\n Most protocol buffer implementations will always follow these rules when\n serializing, but care should be taken to avoid shortcuts. For instance,\n concatenating two messages to merge them may produce duplicate fields.\n"},{"path":[4,9,1],"span":[947,8,14]},{"path":[4,9,2,0],"span":[950,2,18],"leadingComments":" The hash. In the case of SHA-256, it will always be a lowercase hex string\n exactly 64 characters long.\n"},{"path":[4,9,2,0,5],"span":[950,2,8]},{"path":[4,9,2,0,1],"span":[950,9,13]},{"path":[4,9,2,0,3],"span":[950,16,17]},{"path":[4,9,2,1],"span":[953,2,23],"leadingComments":" The size of the blob, in bytes.\n"},{"path":[4,9,2,1,5],"span":[953,2,7]},{"path":[4,9,2,1,1],"span":[953,8,18]},{"path":[4,9,2,1,3],"span":[953,21,22]},{"path":[4,10],"span":[957,0,1011,1],"leadingComments":" ExecutedActionMetadata contains details about a completed execution.\n"},{"path":[4,10,1],"span":[957,8,30]},{"path":[4,10,2,0],"span":[959,2,20],"leadingComments":" The name of the worker which ran the execution.\n"},{"path":[4,10,2,0,5],"span":[959,2,8]},{"path":[4,10,2,0,1],"span":[959,9,15]},{"path":[4,10,2,0,3],"span":[959,18,19]},{"path":[4,10,2,1],"span":[962,2,49],"leadingComments":" When was the action added to the queue.\n"},{"path":[4,10,2,1,6],"span":[962,2,27]},{"path":[4,10,2,1,1],"span":[962,28,44]},{"path":[4,10,2,1,3],"span":[962,47,48]},{"path":[4,10,2,2],"span":[965,2,55],"leadingComments":" When the worker received the action.\n"},{"path":[4,10,2,2,6],"span":[965,2,27]},{"path":[4,10,2,2,1],"span":[965,28,50]},{"path":[4,10,2,2,3],"span":[965,53,54]},{"path":[4,10,2,3],"span":[968,2,59],"leadingComments":" When the worker completed the action, including all stages.\n"},{"path":[4,10,2,3,6],"span":[968,2,27]},{"path":[4,10,2,3,1],"span":[968,28,54]},{"path":[4,10,2,3,3],"span":[968,57,58]},{"path":[4,10,2,4],"span":[971,2,60],"leadingComments":" When the worker started fetching action inputs.\n"},{"path":[4,10,2,4,6],"span":[971,2,27]},{"path":[4,10,2,4,1],"span":[971,28,55]},{"path":[4,10,2,4,3],"span":[971,58,59]},{"path":[4,10,2,5],"span":[974,2,64],"leadingComments":" When the worker finished fetching action inputs.\n"},{"path":[4,10,2,5,6],"span":[974,2,27]},{"path":[4,10,2,5,1],"span":[974,28,59]},{"path":[4,10,2,5,3],"span":[974,62,63]},{"path":[4,10,2,6],"span":[977,2,58],"leadingComments":" When the worker started executing the action command.\n"},{"path":[4,10,2,6,6],"span":[977,2,27]},{"path":[4,10,2,6,1],"span":[977,28,53]},{"path":[4,10,2,6,3],"span":[977,56,57]},{"path":[4,10,2,7],"span":[980,2,62],"leadingComments":" When the worker completed executing the action command.\n"},{"path":[4,10,2,7,6],"span":[980,2,27]},{"path":[4,10,2,7,1],"span":[980,28,57]},{"path":[4,10,2,7,3],"span":[980,60,61]},{"path":[4,10,2,8],"span":[999,2,59],"leadingComments":" New in v2.3: the amount of time the worker spent executing the action\n command, potentially computed using a worker-specific virtual clock.\n\n The virtual execution duration is only intended to cover the \"execution\" of\n the specified action and not time in queue nor any overheads before or\n after execution such as marshalling inputs/outputs. The server SHOULD avoid\n including time spent the client doesn't have control over, and MAY extend\n or reduce the execution duration to account for delays or speedups that\n occur during execution itself (e.g., lazily loading data from the Content\n Addressable Storage, live migration of virtual machines, emulation\n overhead).\n\n The method of timekeeping used to compute the virtual execution duration\n MUST be consistent with what is used to enforce the\n [Action][[build.bazel.remote.execution.v2.Action]'s `timeout`. There is no\n relationship between the virtual execution duration and the values of\n `execution_start_timestamp` and `execution_completed_timestamp`.\n"},{"path":[4,10,2,8,6],"span":[999,2,26]},{"path":[4,10,2,8,1],"span":[999,27,53]},{"path":[4,10,2,8,3],"span":[999,56,58]},{"path":[4,10,2,9],"span":[1002,2,62],"leadingComments":" When the worker started uploading action outputs.\n"},{"path":[4,10,2,9,6],"span":[1002,2,27]},{"path":[4,10,2,9,1],"span":[1002,28,57]},{"path":[4,10,2,9,3],"span":[1002,60,61]},{"path":[4,10,2,10],"span":[1005,2,67],"leadingComments":" When the worker finished uploading action outputs.\n"},{"path":[4,10,2,10,6],"span":[1005,2,27]},{"path":[4,10,2,10,1],"span":[1005,28,61]},{"path":[4,10,2,10,3],"span":[1005,64,66]},{"path":[4,10,2,11],"span":[1010,2,55],"leadingComments":" Details that are specific to the kind of worker used. For example,\n on POSIX-like systems this could contain a message with\n getrusage(2) statistics.\n"},{"path":[4,10,2,11,4],"span":[1010,2,10]},{"path":[4,10,2,11,6],"span":[1010,11,30]},{"path":[4,10,2,11,1],"span":[1010,31,49]},{"path":[4,10,2,11,3],"span":[1010,52,54]},{"path":[4,11],"span":[1020,0,1187,1],"leadingComments":" An ActionResult represents the result of an\n [Action][build.bazel.remote.execution.v2.Action] being run.\n\n It is advised that at least one field (for example\n `ActionResult.execution_metadata.Worker`) have a non-default value, to\n ensure that the serialized value is non-empty, which can then be used\n as a basic data sanity check.\n"},{"path":[4,11,1],"span":[1020,8,20]},{"path":[4,11,9],"span":[1021,2,13],"trailingComments":" Reserved for use as the resource name.\n"},{"path":[4,11,9,0],"span":[1021,11,12]},{"path":[4,11,9,0,1],"span":[1021,11,12]},{"path":[4,11,9,0,2],"span":[1021,11,12]},{"path":[4,11,2,0],"span":[1034,2,39],"leadingComments":" The output files of the action. For each output file requested in the\n `output_files` or `output_paths` field of the Action, if the corresponding\n file existed after the action completed, a single entry will be present\n either in this field, or the `output_file_symlinks` field if the file was\n a symbolic link to another file (`output_symlinks` field after v2.1).\n\n If an output listed in `output_files` was found, but was a directory rather\n than a regular file, the server will return a FAILED_PRECONDITION.\n If the action does not produce the requested output, then that output\n will be omitted from the list. The server is free to arrange the output\n list as desired; clients MUST NOT assume that the output list is sorted.\n"},{"path":[4,11,2,0,4],"span":[1034,2,10]},{"path":[4,11,2,0,6],"span":[1034,11,21]},{"path":[4,11,2,0,1],"span":[1034,22,34]},{"path":[4,11,2,0,3],"span":[1034,37,38]},{"path":[4,11,2,1],"span":[1054,2,51],"leadingComments":" The output files of the action that are symbolic links to other files. Those\n may be links to other output files, or input files, or even absolute paths\n outside of the working directory, if the server supports\n [SymlinkAbsolutePathStrategy.ALLOWED][build.bazel.remote.execution.v2.CacheCapabilities.SymlinkAbsolutePathStrategy].\n For each output file requested in the `output_files` or `output_paths`\n field of the Action, if the corresponding file existed after\n the action completed, a single entry will be present either in this field,\n or in the `output_files` field, if the file was not a symbolic link.\n\n If an output symbolic link of the same name as listed in `output_files` of\n the Command was found, but its target type was not a regular file, the\n server will return a FAILED_PRECONDITION.\n If the action does not produce the requested output, then that output\n will be omitted from the list. The server is free to arrange the output\n list as desired; clients MUST NOT assume that the output list is sorted.\n\n DEPRECATED as of v2.1. Servers that wish to be compatible with v2.0 API\n should still populate this field in addition to `output_symlinks`.\n"},{"path":[4,11,2,1,4],"span":[1054,2,10]},{"path":[4,11,2,1,6],"span":[1054,11,24]},{"path":[4,11,2,1,1],"span":[1054,25,45]},{"path":[4,11,2,1,3],"span":[1054,48,50]},{"path":[4,11,2,2],"span":[1070,2,46],"leadingComments":" New in v2.1: this field will only be populated if the command\n `output_paths` field was used, and not the pre v2.1 `output_files` or\n `output_directories` fields.\n The output paths of the action that are symbolic links to other paths. Those\n may be links to other outputs, or inputs, or even absolute paths\n outside of the working directory, if the server supports\n [SymlinkAbsolutePathStrategy.ALLOWED][build.bazel.remote.execution.v2.CacheCapabilities.SymlinkAbsolutePathStrategy].\n A single entry for each output requested in `output_paths`\n field of the Action, if the corresponding path existed after\n the action completed and was a symbolic link.\n\n If the action does not produce a requested output, then that output\n will be omitted from the list. The server is free to arrange the output\n list as desired; clients MUST NOT assume that the output list is sorted.\n"},{"path":[4,11,2,2,4],"span":[1070,2,10]},{"path":[4,11,2,2,6],"span":[1070,11,24]},{"path":[4,11,2,2,1],"span":[1070,25,40]},{"path":[4,11,2,2,3],"span":[1070,43,45]},{"path":[4,11,2,3],"span":[1134,2,50],"leadingComments":" The output directories of the action. For each output directory requested\n in the `output_directories` or `output_paths` field of the Action, if the\n corresponding directory existed after the action completed, a single entry\n will be present in the output list, which will contain the digest of a\n [Tree][build.bazel.remote.execution.v2.Tree] message containing the\n directory tree, and the path equal exactly to the corresponding Action\n output_directories member.\n\n As an example, suppose the Action had an output directory `a/b/dir` and the\n execution produced the following contents in `a/b/dir`: a file named `bar`\n and a directory named `foo` with an executable file named `baz`. Then,\n output_directory will contain (hashes shortened for readability):\n\n ```json\n // OutputDirectory proto:\n {\n   path: \"a/b/dir\"\n   tree_digest: {\n     hash: \"4a73bc9d03...\",\n     size: 55\n   }\n }\n // Tree proto with hash \"4a73bc9d03...\" and size 55:\n {\n   root: {\n     files: [\n       {\n         name: \"bar\",\n         digest: {\n           hash: \"4a73bc9d03...\",\n           size: 65534\n         }\n       }\n     ],\n     directories: [\n       {\n         name: \"foo\",\n         digest: {\n           hash: \"4cf2eda940...\",\n           size: 43\n         }\n       }\n     ]\n   }\n   children : {\n     // (Directory proto with hash \"4cf2eda940...\" and size 43)\n     files: [\n       {\n         name: \"baz\",\n         digest: {\n           hash: \"b2c941073e...\",\n           size: 1294,\n         },\n         is_executable: true\n       }\n     ]\n   }\n }\n ```\n If an output of the same name as listed in `output_files` of\n the Command was found in `output_directories`, but was not a directory, the\n server will return a FAILED_PRECONDITION.\n"},{"path":[4,11,2,3,4],"span":[1134,2,10]},{"path":[4,11,2,3,6],"span":[1134,11,26]},{"path":[4,11,2,3,1],"span":[1134,27,45]},{"path":[4,11,2,3,3],"span":[1134,48,49]},{"path":[4,11,2,4],"span":[1154,2,56],"leadingComments":" The output directories of the action that are symbolic links to other\n directories. Those may be links to other output directories, or input\n directories, or even absolute paths outside of the working directory,\n if the server supports\n [SymlinkAbsolutePathStrategy.ALLOWED][build.bazel.remote.execution.v2.CacheCapabilities.SymlinkAbsolutePathStrategy].\n For each output directory requested in the `output_directories` field of\n the Action, if the directory existed after the action completed, a\n single entry will be present either in this field, or in the\n `output_directories` field, if the directory was not a symbolic link.\n\n If an output of the same name was found, but was a symbolic link to a file\n instead of a directory, the server will return a FAILED_PRECONDITION.\n If the action does not produce the requested output, then that output\n will be omitted from the list. The server is free to arrange the output\n list as desired; clients MUST NOT assume that the output list is sorted.\n\n DEPRECATED as of v2.1. Servers that wish to be compatible with v2.0 API\n should still populate this field in addition to `output_symlinks`.\n"},{"path":[4,11,2,4,4],"span":[1154,2,10]},{"path":[4,11,2,4,6],"span":[1154,11,24]},{"path":[4,11,2,4,1],"span":[1154,25,50]},{"path":[4,11,2,4,3],"span":[1154,53,55]},{"path":[4,11,2,5],"span":[1157,2,22],"leadingComments":" The exit code of the command.\n"},{"path":[4,11,2,5,5],"span":[1157,2,7]},{"path":[4,11,2,5,1],"span":[1157,8,17]},{"path":[4,11,2,5,3],"span":[1157,20,21]},{"path":[4,11,2,6],"span":[1165,2,23],"leadingComments":" The standard output buffer of the action. The server SHOULD NOT inline\n stdout unless requested by the client in the\n [GetActionResultRequest][build.bazel.remote.execution.v2.GetActionResultRequest]\n message. The server MAY omit inlining, even if requested, and MUST do so if inlining\n would cause the response to exceed message size limits.\n Clients SHOULD NOT populate this field when uploading to the cache.\n"},{"path":[4,11,2,6,5],"span":[1165,2,7]},{"path":[4,11,2,6,1],"span":[1165,8,18]},{"path":[4,11,2,6,3],"span":[1165,21,22]},{"path":[4,11,2,7],"span":[1170,2,27],"leadingComments":" The digest for a blob containing the standard output of the action, which\n can be retrieved from the\n [ContentAddressableStorage][build.bazel.remote.execution.v2.ContentAddressableStorage].\n"},{"path":[4,11,2,7,6],"span":[1170,2,8]},{"path":[4,11,2,7,1],"span":[1170,9,22]},{"path":[4,11,2,7,3],"span":[1170,25,26]},{"path":[4,11,2,8],"span":[1178,2,23],"leadingComments":" The standard error buffer of the action. The server SHOULD NOT inline\n stderr unless requested by the client in the\n [GetActionResultRequest][build.bazel.remote.execution.v2.GetActionResultRequest]\n message. The server MAY omit inlining, even if requested, and MUST do so if inlining\n would cause the response to exceed message size limits.\n Clients SHOULD NOT populate this field when uploading to the cache.\n"},{"path":[4,11,2,8,5],"span":[1178,2,7]},{"path":[4,11,2,8,1],"span":[1178,8,18]},{"path":[4,11,2,8,3],"span":[1178,21,22]},{"path":[4,11,2,9],"span":[1183,2,27],"leadingComments":" The digest for a blob containing the standard error of the action, which\n can be retrieved from the\n [ContentAddressableStorage][build.bazel.remote.execution.v2.ContentAddressableStorage].\n"},{"path":[4,11,2,9,6],"span":[1183,2,8]},{"path":[4,11,2,9,1],"span":[1183,9,22]},{"path":[4,11,2,9,3],"span":[1183,25,26]},{"path":[4,11,2,10],"span":[1186,2,48],"leadingComments":" The details of the execution that originally produced this result.\n"},{"path":[4,11,2,10,6],"span":[1186,2,24]},{"path":[4,11,2,10,1],"span":[1186,25,43]},{"path":[4,11,2,10,3],"span":[1186,46,47]},{"path":[4,12],"span":[1193,0,1218,1],"leadingComments":" An `OutputFile` is similar to a\n [FileNode][build.bazel.remote.execution.v2.FileNode], but it is used as an\n output in an `ActionResult`. It allows a full file path rather than\n only a name.\n"},{"path":[4,12,1],"span":[1193,8,18]},{"path":[4,12,2,0],"span":[1197,2,18],"leadingComments":" The full path of the file relative to the working directory, including the\n filename. The path separator is a forward slash `/`. Since this is a\n relative path, it MUST NOT begin with a leading forward slash.\n"},{"path":[4,12,2,0,5],"span":[1197,2,8]},{"path":[4,12,2,0,1],"span":[1197,9,13]},{"path":[4,12,2,0,3],"span":[1197,16,17]},{"path":[4,12,2,1],"span":[1200,2,20],"leadingComments":" The digest of the file's content.\n"},{"path":[4,12,2,1,6],"span":[1200,2,8]},{"path":[4,12,2,1,1],"span":[1200,9,15]},{"path":[4,12,2,1,3],"span":[1200,18,19]},{"path":[4,12,9],"span":[1202,2,13],"trailingComments":" Used for a removed field in an earlier version of the API.\n"},{"path":[4,12,9,0],"span":[1202,11,12]},{"path":[4,12,9,0,1],"span":[1202,11,12]},{"path":[4,12,9,0,2],"span":[1202,11,12]},{"path":[4,12,2,2],"span":[1205,2,25],"leadingComments":" True if file is executable, false otherwise.\n"},{"path":[4,12,2,2,5],"span":[1205,2,6]},{"path":[4,12,2,2,1],"span":[1205,7,20]},{"path":[4,12,2,2,3],"span":[1205,23,24]},{"path":[4,12,2,3],"span":[1213,2,21],"leadingComments":" The contents of the file if inlining was requested. The server SHOULD NOT inline\n file contents unless requested by the client in the\n [GetActionResultRequest][build.bazel.remote.execution.v2.GetActionResultRequest]\n message. The server MAY omit inlining, even if requested, and MUST do so if inlining\n would cause the response to exceed message size limits.\n Clients SHOULD NOT populate this field when uploading to the cache.\n"},{"path":[4,12,2,3,5],"span":[1213,2,7]},{"path":[4,12,2,3,1],"span":[1213,8,16]},{"path":[4,12,2,3,3],"span":[1213,19,20]},{"path":[4,12,9],"span":[1216,2,13],"leadingComments":" The supported node properties of the OutputFile, if requested by the Action.\n"},{"path":[4,12,9,1],"span":[1216,11,12]},{"path":[4,12,9,1,1],"span":[1216,11,12]},{"path":[4,12,9,1,2],"span":[1216,11,12]},{"path":[4,12,2,4],"span":[1217,2,37]},{"path":[4,12,2,4,6],"span":[1217,2,16]},{"path":[4,12,2,4,1],"span":[1217,17,32]},{"path":[4,12,2,4,3],"span":[1217,35,36]},{"path":[4,13],"span":[1223,0,1235,1],"leadingComments":" A `Tree` contains all the\n [Directory][build.bazel.remote.execution.v2.Directory] protos in a\n single directory Merkle tree, compressed into one message.\n"},{"path":[4,13,1],"span":[1223,8,12]},{"path":[4,13,2,0],"span":[1225,2,21],"leadingComments":" The root directory in the tree.\n"},{"path":[4,13,2,0,6],"span":[1225,2,11]},{"path":[4,13,2,0,1],"span":[1225,12,16]},{"path":[4,13,2,0,3],"span":[1225,19,20]},{"path":[4,13,2,1],"span":[1234,2,34],"leadingComments":" All the child directories: the directories referred to by the root and,\n recursively, all its children. In order to reconstruct the directory tree,\n the client must take the digests of each of the child directories and then\n build up a tree starting from the `root`.\n Servers SHOULD ensure that these are ordered consistently such that two\n actions producing equivalent output directories on the same server\n implementation also produce Tree messages with matching digests.\n"},{"path":[4,13,2,1,4],"span":[1234,2,10]},{"path":[4,13,2,1,6],"span":[1234,11,20]},{"path":[4,13,2,1,1],"span":[1234,21,29]},{"path":[4,13,2,1,3],"span":[1234,32,33]},{"path":[4,14],"span":[1239,0,1289,1],"leadingComments":" An `OutputDirectory` is the output in an `ActionResult` corresponding to a\n directory's full contents rather than a single file.\n"},{"path":[4,14,1],"span":[1239,8,23]},{"path":[4,14,2,0],"span":[1244,2,18],"leadingComments":" The full path of the directory relative to the working directory. The path\n separator is a forward slash `/`. Since this is a relative path, it MUST\n NOT begin with a leading forward slash. The empty string value is allowed,\n and it denotes the entire working directory.\n"},{"path":[4,14,2,0,5],"span":[1244,2,8]},{"path":[4,14,2,0,1],"span":[1244,9,13]},{"path":[4,14,2,0,3],"span":[1244,16,17]},{"path":[4,14,9],"span":[1246,2,13],"trailingComments":" Used for a removed field in an earlier version of the API.\n"},{"path":[4,14,9,0],"span":[1246,11,12]},{"path":[4,14,9,0,1],"span":[1246,11,12]},{"path":[4,14,9,0,2],"span":[1246,11,12]},{"path":[4,14,2,1],"span":[1251,2,25],"leadingComments":" The digest of the encoded\n [Tree][build.bazel.remote.execution.v2.Tree] proto containing the\n directory's contents.\n"},{"path":[4,14,2,1,6],"span":[1251,2,8]},{"path":[4,14,2,1,1],"span":[1251,9,20]},{"path":[4,14,2,1,3],"span":[1251,23,24]},{"path":[4,14,2,2],"span":[1288,2,35],"leadingComments":" If set, consumers MAY make the following assumptions about the\n directories contained in the the Tree, so that it may be\n instantiated on a local file system by scanning through it\n sequentially:\n\n - All directories with the same binary representation are stored\n   exactly once.\n - All directories, apart from the root directory, are referenced by\n   at least one parent directory.\n - Directories are stored in topological order, with parents being\n   stored before the child. The root directory is thus the first to\n   be stored.\n\n Additionally, the Tree MUST be encoded as a stream of records,\n where each record has the following format:\n\n - A tag byte, having one of the following two values:\n   - (1 << 3) | 2 == 0x0a: First record (the root directory).\n   - (2 << 3) | 2 == 0x12: Any subsequent records (child directories).\n - The size of the directory, encoded as a base 128 varint.\n - The contents of the directory, encoded as a binary serialized\n   Protobuf message.\n\n This encoding is a subset of the Protobuf wire format of the Tree\n message. As it is only permitted to store data associated with\n field numbers 1 and 2, the tag MUST be encoded as a single byte.\n More details on the Protobuf wire format can be found here:\n https://developers.google.com/protocol-buffers/docs/encoding\n\n It is recommended that implementations using this feature construct\n Tree objects manually using the specification given above, as\n opposed to using a Protobuf library to marshal a full Tree message.\n As individual Directory messages already need to be marshaled to\n compute their digests, constructing the Tree object manually avoids\n redundant marshaling.\n"},{"path":[4,14,2,2,5],"span":[1288,2,6]},{"path":[4,14,2,2,1],"span":[1288,7,30]},{"path":[4,14,2,2,3],"span":[1288,33,34]},{"path":[4,15],"span":[1296,0,1313,1],"leadingComments":" An `OutputSymlink` is similar to a\n [Symlink][build.bazel.remote.execution.v2.SymlinkNode], but it is used as an\n output in an `ActionResult`.\n\n `OutputSymlink` is binary-compatible with `SymlinkNode`.\n"},{"path":[4,15,1],"span":[1296,8,21]},{"path":[4,15,2,0],"span":[1300,2,18],"leadingComments":" The full path of the symlink relative to the working directory, including the\n filename. The path separator is a forward slash `/`. Since this is a\n relative path, it MUST NOT begin with a leading forward slash.\n"},{"path":[4,15,2,0,5],"span":[1300,2,8]},{"path":[4,15,2,0,1],"span":[1300,9,13]},{"path":[4,15,2,0,3],"span":[1300,16,17]},{"path":[4,15,2,1],"span":[1307,2,20],"leadingComments":" The target path of the symlink. The path separator is a forward slash `/`.\n The target path can be relative to the parent directory of the symlink or\n it can be an absolute path starting with `/`. Support for absolute paths\n can be checked using the [Capabilities][build.bazel.remote.execution.v2.Capabilities]\n API. `..` components are allowed anywhere in the target path.\n"},{"path":[4,15,2,1,5],"span":[1307,2,8]},{"path":[4,15,2,1,1],"span":[1307,9,15]},{"path":[4,15,2,1,3],"span":[1307,18,19]},{"path":[4,15,9],"span":[1311,2,13],"leadingComments":" The supported node properties of the OutputSymlink, if requested by the\n Action.\n"},{"path":[4,15,9,0],"span":[1311,11,12]},{"path":[4,15,9,0,1],"span":[1311,11,12]},{"path":[4,15,9,0,2],"span":[1311,11,12]},{"path":[4,15,2,2],"span":[1312,2,37]},{"path":[4,15,2,2,6],"span":[1312,2,16]},{"path":[4,15,2,2,1],"span":[1312,17,32]},{"path":[4,15,2,2,3],"span":[1312,35,36]},{"path":[4,16],"span":[1316,0,1327,1],"leadingComments":" An `ExecutionPolicy` can be used to control the scheduling of the action.\n"},{"path":[4,16,1],"span":[1316,8,23]},{"path":[4,16,2,0],"span":[1326,2,21],"leadingComments":" The priority (relative importance) of this action. Generally, a lower value\n means that the action should be run sooner than actions having a greater\n priority value, but the interpretation of a given value is server-\n dependent. A priority of 0 means the *default* priority. Priorities may be\n positive or negative, and such actions should run later or sooner than\n actions having the default priority, respectively. The particular semantics\n of this field is up to the server. In particular, every server will have\n their own supported range of priorities, and will decide how these map into\n scheduling policy.\n"},{"path":[4,16,2,0,5],"span":[1326,2,7]},{"path":[4,16,2,0,1],"span":[1326,8,16]},{"path":[4,16,2,0,3],"span":[1326,19,20]},{"path":[4,17],"span":[1331,0,1341,1],"leadingComments":" A `ResultsCachePolicy` is used for fine-grained control over how action\n outputs are stored in the CAS and Action Cache.\n"},{"path":[4,17,1],"span":[1331,8,26]},{"path":[4,17,2,0],"span":[1340,2,21],"leadingComments":" The priority (relative importance) of this content in the overall cache.\n Generally, a lower value means a longer retention time or other advantage,\n but the interpretation of a given value is server-dependent. A priority of\n 0 means a *default* value, decided by the server.\n\n The particular semantics of this field is up to the server. In particular,\n every server will have their own supported range of priorities, and will\n decide how these map into retention/eviction policy.\n"},{"path":[4,17,2,0,5],"span":[1340,2,7]},{"path":[4,17,2,0,1],"span":[1340,8,16]},{"path":[4,17,2,0,3],"span":[1340,19,20]},{"path":[4,18],"span":[1345,0,1391,1],"leadingComments":" A request message for\n [Execution.Execute][build.bazel.remote.execution.v2.Execution.Execute].\n"},{"path":[4,18,1],"span":[1345,8,22]},{"path":[4,18,2,0],"span":[1351,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,18,2,0,5],"span":[1351,2,8]},{"path":[4,18,2,0,1],"span":[1351,9,22]},{"path":[4,18,2,0,3],"span":[1351,25,26]},{"path":[4,18,2,1],"span":[1366,2,29],"leadingComments":" If true, the action will be executed even if its result is already\n present in the [ActionCache][build.bazel.remote.execution.v2.ActionCache].\n The execution is still allowed to be merged with other in-flight executions\n of the same action, however - semantically, the service MUST only guarantee\n that the results of an execution with this field set were not visible\n before the corresponding execution request was sent.\n Note that actions from execution requests setting this field set are still\n eligible to be entered into the action cache upon completion, and services\n SHOULD overwrite any existing entries that may exist. This allows\n skip_cache_lookup requests to be used as a mechanism for replacing action\n cache entries that reference outputs no longer available or that are\n poisoned in any way.\n If false, the result may be served from the action cache.\n"},{"path":[4,18,2,1,5],"span":[1366,2,6]},{"path":[4,18,2,1,1],"span":[1366,7,24]},{"path":[4,18,2,1,3],"span":[1366,27,28]},{"path":[4,18,9],"span":[1368,2,19],"trailingComments":" Used for removed fields in an earlier version of the API.\n"},{"path":[4,18,9,0],"span":[1368,11,12]},{"path":[4,18,9,0,1],"span":[1368,11,12]},{"path":[4,18,9,0,2],"span":[1368,11,12]},{"path":[4,18,9,1],"span":[1368,14,15]},{"path":[4,18,9,1,1],"span":[1368,14,15]},{"path":[4,18,9,1,2],"span":[1368,14,15]},{"path":[4,18,9,2],"span":[1368,17,18]},{"path":[4,18,9,2,1],"span":[1368,17,18]},{"path":[4,18,9,2,2],"span":[1368,17,18]},{"path":[4,18,2,2],"span":[1372,2,27],"leadingComments":" The digest of the [Action][build.bazel.remote.execution.v2.Action] to\n execute.\n"},{"path":[4,18,2,2,6],"span":[1372,2,8]},{"path":[4,18,2,2,1],"span":[1372,9,22]},{"path":[4,18,2,2,3],"span":[1372,25,26]},{"path":[4,18,2,3],"span":[1376,2,39],"leadingComments":" An optional policy for execution of the action.\n The server will have a default policy if this is not provided.\n"},{"path":[4,18,2,3,6],"span":[1376,2,17]},{"path":[4,18,2,3,1],"span":[1376,18,34]},{"path":[4,18,2,3,3],"span":[1376,37,38]},{"path":[4,18,2,4],"span":[1381,2,46],"leadingComments":" An optional policy for the results of this execution in the remote cache.\n The server will have a default policy if this is not provided.\n This may be applied to both the ActionResult and the associated blobs.\n"},{"path":[4,18,2,4,6],"span":[1381,2,20]},{"path":[4,18,2,4,1],"span":[1381,21,41]},{"path":[4,18,2,4,3],"span":[1381,44,45]},{"path":[4,18,2,5],"span":[1390,2,43],"leadingComments":" The digest function that was used to compute the action digest.\n\n If the digest function used is one of MD5, MURMUR3, SHA1, SHA256,\n SHA384, SHA512, or VSO, the client MAY leave this field unset. In\n that case the server SHOULD infer the digest function using the\n length of the action digest hash and the digest functions announced\n in the server's capabilities.\n"},{"path":[4,18,2,5,6],"span":[1390,2,22]},{"path":[4,18,2,5,1],"span":[1390,23,38]},{"path":[4,18,2,5,3],"span":[1390,41,42]},{"path":[4,19],"span":[1394,0,1404,1],"leadingComments":" A `LogFile` is a log stored in the CAS.\n"},{"path":[4,19,1],"span":[1394,8,15]},{"path":[4,19,2,0],"span":[1396,2,20],"leadingComments":" The digest of the log contents.\n"},{"path":[4,19,2,0,6],"span":[1396,2,8]},{"path":[4,19,2,0,1],"span":[1396,9,15]},{"path":[4,19,2,0,3],"span":[1396,18,19]},{"path":[4,19,2,1],"span":[1403,2,26],"leadingComments":" This is a hint as to the purpose of the log, and is set to true if the log\n is human-readable text that can be usefully displayed to a user, and false\n otherwise. For instance, if a command-line client wishes to print the\n server logs to the terminal for a failed action, this allows it to avoid\n displaying a binary file.\n"},{"path":[4,19,2,1,5],"span":[1403,2,6]},{"path":[4,19,2,1,1],"span":[1403,7,21]},{"path":[4,19,2,1,3],"span":[1403,24,25]},{"path":[4,20],"span":[1411,0,1442,1],"leadingComments":" The response message for\n [Execution.Execute][build.bazel.remote.execution.v2.Execution.Execute],\n which will be contained in the [response\n field][google.longrunning.Operation.response] of the\n [Operation][google.longrunning.Operation].\n"},{"path":[4,20,1],"span":[1411,8,23]},{"path":[4,20,2,0],"span":[1413,2,26],"leadingComments":" The result of the action.\n"},{"path":[4,20,2,0,6],"span":[1413,2,14]},{"path":[4,20,2,0,1],"span":[1413,15,21]},{"path":[4,20,2,0,3],"span":[1413,24,25]},{"path":[4,20,2,1],"span":[1416,2,25],"leadingComments":" True if the result was served from cache, false if it was executed.\n"},{"path":[4,20,2,1,5],"span":[1416,2,6]},{"path":[4,20,2,1,1],"span":[1416,7,20]},{"path":[4,20,2,1,3],"span":[1416,23,24]},{"path":[4,20,2,2],"span":[1428,2,31],"leadingComments":" If the status has a code other than `OK`, it indicates that the action did\n not finish execution. For example, if the operation times out during\n execution, the status will have a `DEADLINE_EXCEEDED` code. Servers MUST\n use this field for errors in execution, rather than the error field on the\n `Operation` object.\n\n If the status code is other than `OK`, then the result MUST NOT be cached.\n For an error status, the `result` field is optional; the server may\n populate the output-, stdout-, and stderr-related fields if it has any\n information available, such as the stdout and stderr of a timed-out action.\n"},{"path":[4,20,2,2,6],"span":[1428,2,19]},{"path":[4,20,2,2,1],"span":[1428,20,26]},{"path":[4,20,2,2,3],"span":[1428,29,30]},{"path":[4,20,2,3],"span":[1437,2,39],"leadingComments":" An optional list of additional log outputs the server wishes to provide. A\n server can use this to return execution-specific logs however it wishes.\n This is intended primarily to make it easier for users to debug issues that\n may be outside of the actual job execution, such as by identifying the\n worker executing the action or by providing logs from the worker's setup\n phase. The keys SHOULD be human readable so that a client can display them\n to a user.\n"},{"path":[4,20,2,3,6],"span":[1437,2,22]},{"path":[4,20,2,3,1],"span":[1437,23,34]},{"path":[4,20,2,3,3],"span":[1437,37,38]},{"path":[4,20,2,4],"span":[1441,2,21],"leadingComments":" Freeform informational message with details on the execution of the action\n that may be displayed to the user upon failure or when requested explicitly.\n"},{"path":[4,20,2,4,5],"span":[1441,2,8]},{"path":[4,20,2,4,1],"span":[1441,9,16]},{"path":[4,20,2,4,3],"span":[1441,19,20]},{"path":[4,21],"span":[1456,0,1473,1],"leadingComments":" The current stage of action execution.\n\n Even though these stages are numbered according to the order in which\n they generally occur, there is no requirement that the remote\n execution system reports events along this order. For example, an\n operation MAY transition from the EXECUTING stage back to QUEUED\n in case the hardware on which the operation executes fails.\n\n If and only if the remote execution system reports that an operation\n has reached the COMPLETED stage, it MUST set the [done\n field][google.longrunning.Operation.done] of the\n [Operation][google.longrunning.Operation] and terminate the stream.\n"},{"path":[4,21,1],"span":[1456,8,22]},{"path":[4,21,4,0],"span":[1457,2,1472,3]},{"path":[4,21,4,0,1],"span":[1457,7,12]},{"path":[4,21,4,0,2,0],"span":[1459,4,16],"leadingComments":" Invalid value.\n"},{"path":[4,21,4,0,2,0,1],"span":[1459,4,11]},{"path":[4,21,4,0,2,0,2],"span":[1459,14,15]},{"path":[4,21,4,0,2,1],"span":[1462,4,20],"leadingComments":" Checking the result against the cache.\n"},{"path":[4,21,4,0,2,1,1],"span":[1462,4,15]},{"path":[4,21,4,0,2,1,2],"span":[1462,18,19]},{"path":[4,21,4,0,2,2],"span":[1465,4,15],"leadingComments":" Currently idle, awaiting a free machine to execute.\n"},{"path":[4,21,4,0,2,2,1],"span":[1465,4,10]},{"path":[4,21,4,0,2,2,2],"span":[1465,13,14]},{"path":[4,21,4,0,2,3],"span":[1468,4,18],"leadingComments":" Currently being executed by a worker.\n"},{"path":[4,21,4,0,2,3,1],"span":[1468,4,13]},{"path":[4,21,4,0,2,3,2],"span":[1468,16,17]},{"path":[4,21,4,0,2,4],"span":[1471,4,18],"leadingComments":" Finished execution.\n"},{"path":[4,21,4,0,2,4,1],"span":[1471,4,13]},{"path":[4,21,4,0,2,4,2],"span":[1471,16,17]},{"path":[4,22],"span":[1480,0,1501,1],"leadingComments":" Metadata about an ongoing\n [execution][build.bazel.remote.execution.v2.Execution.Execute], which\n will be contained in the [metadata\n field][google.longrunning.Operation.response] of the\n [Operation][google.longrunning.Operation].\n"},{"path":[4,22,1],"span":[1480,8,32]},{"path":[4,22,2,0],"span":[1482,2,33],"leadingComments":" The current stage of execution.\n"},{"path":[4,22,2,0,6],"span":[1482,2,22]},{"path":[4,22,2,0,1],"span":[1482,23,28]},{"path":[4,22,2,0,3],"span":[1482,31,32]},{"path":[4,22,2,1],"span":[1486,2,27],"leadingComments":" The digest of the [Action][build.bazel.remote.execution.v2.Action]\n being executed.\n"},{"path":[4,22,2,1,6],"span":[1486,2,8]},{"path":[4,22,2,1,1],"span":[1486,9,22]},{"path":[4,22,2,1,3],"span":[1486,25,26]},{"path":[4,22,2,2],"span":[1491,2,32],"leadingComments":" If set, the client can use this resource name with\n [ByteStream.Read][google.bytestream.ByteStream.Read] to stream the\n standard output from the endpoint hosting streamed responses.\n"},{"path":[4,22,2,2,5],"span":[1491,2,8]},{"path":[4,22,2,2,1],"span":[1491,9,27]},{"path":[4,22,2,2,3],"span":[1491,30,31]},{"path":[4,22,2,3],"span":[1496,2,32],"leadingComments":" If set, the client can use this resource name with\n [ByteStream.Read][google.bytestream.ByteStream.Read] to stream the\n standard error from the endpoint hosting streamed responses.\n"},{"path":[4,22,2,3,5],"span":[1496,2,8]},{"path":[4,22,2,3,1],"span":[1496,9,27]},{"path":[4,22,2,3,3],"span":[1496,30,31]},{"path":[4,22,2,4],"span":[1500,2,56],"leadingComments":" The client can read this field to view details about the ongoing\n execution.\n"},{"path":[4,22,2,4,6],"span":[1500,2,24]},{"path":[4,22,2,4,1],"span":[1500,25,51]},{"path":[4,22,2,4,3],"span":[1500,54,55]},{"path":[4,23],"span":[1505,0,1509,1],"leadingComments":" A request message for\n [WaitExecution][build.bazel.remote.execution.v2.Execution.WaitExecution].\n"},{"path":[4,23,1],"span":[1505,8,28]},{"path":[4,23,2,0],"span":[1508,2,18],"leadingComments":" The name of the [Operation][google.longrunning.Operation]\n returned by [Execute][build.bazel.remote.execution.v2.Execution.Execute].\n"},{"path":[4,23,2,0,5],"span":[1508,2,8]},{"path":[4,23,2,0,1],"span":[1508,9,13]},{"path":[4,23,2,0,3],"span":[1508,16,17]},{"path":[4,24],"span":[1513,0,1547,1],"leadingComments":" A request message for\n [ActionCache.GetActionResult][build.bazel.remote.execution.v2.ActionCache.GetActionResult].\n"},{"path":[4,24,1],"span":[1513,8,30]},{"path":[4,24,2,0],"span":[1519,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,24,2,0,5],"span":[1519,2,8]},{"path":[4,24,2,0,1],"span":[1519,9,22]},{"path":[4,24,2,0,3],"span":[1519,25,26]},{"path":[4,24,2,1],"span":[1523,2,27],"leadingComments":" The digest of the [Action][build.bazel.remote.execution.v2.Action]\n whose result is requested.\n"},{"path":[4,24,2,1,6],"span":[1523,2,8]},{"path":[4,24,2,1,1],"span":[1523,9,22]},{"path":[4,24,2,1,3],"span":[1523,25,26]},{"path":[4,24,2,2],"span":[1527,2,25],"leadingComments":" A hint to the server to request inlining stdout in the\n [ActionResult][build.bazel.remote.execution.v2.ActionResult] message.\n"},{"path":[4,24,2,2,5],"span":[1527,2,6]},{"path":[4,24,2,2,1],"span":[1527,7,20]},{"path":[4,24,2,2,3],"span":[1527,23,24]},{"path":[4,24,2,3],"span":[1531,2,25],"leadingComments":" A hint to the server to request inlining stderr in the\n [ActionResult][build.bazel.remote.execution.v2.ActionResult] message.\n"},{"path":[4,24,2,3,5],"span":[1531,2,6]},{"path":[4,24,2,3,1],"span":[1531,7,20]},{"path":[4,24,2,3,3],"span":[1531,23,24]},{"path":[4,24,2,4],"span":[1537,2,42],"leadingComments":" A hint to the server to inline the contents of the listed output files.\n Each path needs to exactly match one file path in either `output_paths` or\n `output_files` (DEPRECATED since v2.1) in the\n [Command][build.bazel.remote.execution.v2.Command] message.\n"},{"path":[4,24,2,4,4],"span":[1537,2,10]},{"path":[4,24,2,4,5],"span":[1537,11,17]},{"path":[4,24,2,4,1],"span":[1537,18,37]},{"path":[4,24,2,4,3],"span":[1537,40,41]},{"path":[4,24,2,5],"span":[1546,2,43],"leadingComments":" The digest function that was used to compute the action digest.\n\n If the digest function used is one of MD5, MURMUR3, SHA1, SHA256,\n SHA384, SHA512, or VSO, the client MAY leave this field unset. In\n that case the server SHOULD infer the digest function using the\n length of the action digest hash and the digest functions announced\n in the server's capabilities.\n"},{"path":[4,24,2,5,6],"span":[1546,2,22]},{"path":[4,24,2,5,1],"span":[1546,23,38]},{"path":[4,24,2,5,3],"span":[1546,41,42]},{"path":[4,25],"span":[1551,0,1580,1],"leadingComments":" A request message for\n [ActionCache.UpdateActionResult][build.bazel.remote.execution.v2.ActionCache.UpdateActionResult].\n"},{"path":[4,25,1],"span":[1551,8,33]},{"path":[4,25,2,0],"span":[1557,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,25,2,0,5],"span":[1557,2,8]},{"path":[4,25,2,0,1],"span":[1557,9,22]},{"path":[4,25,2,0,3],"span":[1557,25,26]},{"path":[4,25,2,1],"span":[1561,2,27],"leadingComments":" The digest of the [Action][build.bazel.remote.execution.v2.Action]\n whose result is being uploaded.\n"},{"path":[4,25,2,1,6],"span":[1561,2,8]},{"path":[4,25,2,1,1],"span":[1561,9,22]},{"path":[4,25,2,1,3],"span":[1561,25,26]},{"path":[4,25,2,2],"span":[1565,2,33],"leadingComments":" The [ActionResult][build.bazel.remote.execution.v2.ActionResult]\n to store in the cache.\n"},{"path":[4,25,2,2,6],"span":[1565,2,14]},{"path":[4,25,2,2,1],"span":[1565,15,28]},{"path":[4,25,2,2,3],"span":[1565,31,32]},{"path":[4,25,2,3],"span":[1570,2,46],"leadingComments":" An optional policy for the results of this execution in the remote cache.\n The server will have a default policy if this is not provided.\n This may be applied to both the ActionResult and the associated blobs.\n"},{"path":[4,25,2,3,6],"span":[1570,2,20]},{"path":[4,25,2,3,1],"span":[1570,21,41]},{"path":[4,25,2,3,3],"span":[1570,44,45]},{"path":[4,25,2,4],"span":[1579,2,43],"leadingComments":" The digest function that was used to compute the action digest.\n\n If the digest function used is one of MD5, MURMUR3, SHA1, SHA256,\n SHA384, SHA512, or VSO, the client MAY leave this field unset. In\n that case the server SHOULD infer the digest function using the\n length of the action digest hash and the digest functions announced\n in the server's capabilities.\n"},{"path":[4,25,2,4,6],"span":[1579,2,22]},{"path":[4,25,2,4,1],"span":[1579,23,38]},{"path":[4,25,2,4,3],"span":[1579,41,42]},{"path":[4,26],"span":[1584,0,1604,1],"leadingComments":" A request message for\n [ContentAddressableStorage.FindMissingBlobs][build.bazel.remote.execution.v2.ContentAddressableStorage.FindMissingBlobs].\n"},{"path":[4,26,1],"span":[1584,8,31]},{"path":[4,26,2,0],"span":[1590,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,26,2,0,5],"span":[1590,2,8]},{"path":[4,26,2,0,1],"span":[1590,9,22]},{"path":[4,26,2,0,3],"span":[1590,25,26]},{"path":[4,26,2,1],"span":[1594,2,35],"leadingComments":" A list of the blobs to check. All digests MUST use the same digest\n function.\n"},{"path":[4,26,2,1,4],"span":[1594,2,10]},{"path":[4,26,2,1,6],"span":[1594,11,17]},{"path":[4,26,2,1,1],"span":[1594,18,30]},{"path":[4,26,2,1,3],"span":[1594,33,34]},{"path":[4,26,2,2],"span":[1603,2,43],"leadingComments":" The digest function of the blobs whose existence is checked.\n\n If the digest function used is one of MD5, MURMUR3, SHA1, SHA256,\n SHA384, SHA512, or VSO, the client MAY leave this field unset. In\n that case the server SHOULD infer the digest function using the\n length of the blob digest hashes and the digest functions announced\n in the server's capabilities.\n"},{"path":[4,26,2,2,6],"span":[1603,2,22]},{"path":[4,26,2,2,1],"span":[1603,23,38]},{"path":[4,26,2,2,3],"span":[1603,41,42]},{"path":[4,27],"span":[1608,0,1611,1],"leadingComments":" A response message for\n [ContentAddressableStorage.FindMissingBlobs][build.bazel.remote.execution.v2.ContentAddressableStorage.FindMissingBlobs].\n"},{"path":[4,27,1],"span":[1608,8,32]},{"path":[4,27,2,0],"span":[1610,2,43],"leadingComments":" A list of the blobs requested *not* present in the storage.\n"},{"path":[4,27,2,0,4],"span":[1610,2,10]},{"path":[4,27,2,0,6],"span":[1610,11,17]},{"path":[4,27,2,0,1],"span":[1610,18,38]},{"path":[4,27,2,0,3],"span":[1610,41,42]},{"path":[4,28],"span":[1615,0,1651,1],"leadingComments":" A request message for\n [ContentAddressableStorage.BatchUpdateBlobs][build.bazel.remote.execution.v2.ContentAddressableStorage.BatchUpdateBlobs].\n"},{"path":[4,28,1],"span":[1615,8,31]},{"path":[4,28,3,0],"span":[1617,2,1630,3],"leadingComments":" A request corresponding to a single blob that the client wants to upload.\n"},{"path":[4,28,3,0,1],"span":[1617,10,17]},{"path":[4,28,3,0,2,0],"span":[1620,4,22],"leadingComments":" The digest of the blob. This MUST be the digest of `data`. All\n digests MUST use the same digest function.\n"},{"path":[4,28,3,0,2,0,6],"span":[1620,4,10]},{"path":[4,28,3,0,2,0,1],"span":[1620,11,17]},{"path":[4,28,3,0,2,0,3],"span":[1620,20,21]},{"path":[4,28,3,0,2,1],"span":[1623,4,19],"leadingComments":" The raw binary data.\n"},{"path":[4,28,3,0,2,1,5],"span":[1623,4,9]},{"path":[4,28,3,0,2,1,1],"span":[1623,10,14]},{"path":[4,28,3,0,2,1,3],"span":[1623,17,18]},{"path":[4,28,3,0,2,2],"span":[1629,4,36],"leadingComments":" The format of `data`. Must be `IDENTITY`/unspecified, or one of the\n compressors advertised by the \n [CacheCapabilities.supported_batch_compressors][build.bazel.remote.execution.v2.CacheCapabilities.supported_batch_compressors]\n field.\n"},{"path":[4,28,3,0,2,2,6],"span":[1629,4,20]},{"path":[4,28,3,0,2,2,1],"span":[1629,21,31]},{"path":[4,28,3,0,2,2,3],"span":[1629,34,35]},{"path":[4,28,2,0],"span":[1637,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,28,2,0,5],"span":[1637,2,8]},{"path":[4,28,2,0,1],"span":[1637,9,22]},{"path":[4,28,2,0,3],"span":[1637,25,26]},{"path":[4,28,2,1],"span":[1640,2,32],"leadingComments":" The individual upload requests.\n"},{"path":[4,28,2,1,4],"span":[1640,2,10]},{"path":[4,28,2,1,6],"span":[1640,11,18]},{"path":[4,28,2,1,1],"span":[1640,19,27]},{"path":[4,28,2,1,3],"span":[1640,30,31]},{"path":[4,28,2,2],"span":[1650,2,43],"leadingComments":" The digest function that was used to compute the digests of the\n blobs being uploaded.\n\n If the digest function used is one of MD5, MURMUR3, SHA1, SHA256,\n SHA384, SHA512, or VSO, the client MAY leave this field unset. In\n that case the server SHOULD infer the digest function using the\n length of the blob digest hashes and the digest functions announced\n in the server's capabilities.\n"},{"path":[4,28,2,2,6],"span":[1650,2,22]},{"path":[4,28,2,2,1],"span":[1650,23,38]},{"path":[4,28,2,2,3],"span":[1650,41,42]},{"path":[4,29],"span":[1655,0,1667,1],"leadingComments":" A response message for\n [ContentAddressableStorage.BatchUpdateBlobs][build.bazel.remote.execution.v2.ContentAddressableStorage.BatchUpdateBlobs].\n"},{"path":[4,29,1],"span":[1655,8,32]},{"path":[4,29,3,0],"span":[1657,2,1663,3],"leadingComments":" A response corresponding to a single blob that the client tried to upload.\n"},{"path":[4,29,3,0,1],"span":[1657,10,18]},{"path":[4,29,3,0,2,0],"span":[1659,4,22],"leadingComments":" The blob digest to which this response corresponds.\n"},{"path":[4,29,3,0,2,0,6],"span":[1659,4,10]},{"path":[4,29,3,0,2,0,1],"span":[1659,11,17]},{"path":[4,29,3,0,2,0,3],"span":[1659,20,21]},{"path":[4,29,3,0,2,1],"span":[1662,4,33],"leadingComments":" The result of attempting to upload that blob.\n"},{"path":[4,29,3,0,2,1,6],"span":[1662,4,21]},{"path":[4,29,3,0,2,1,1],"span":[1662,22,28]},{"path":[4,29,3,0,2,1,3],"span":[1662,31,32]},{"path":[4,29,2,0],"span":[1666,2,34],"leadingComments":" The responses to the requests.\n"},{"path":[4,29,2,0,4],"span":[1666,2,10]},{"path":[4,29,2,0,6],"span":[1666,11,19]},{"path":[4,29,2,0,1],"span":[1666,20,29]},{"path":[4,29,2,0,3],"span":[1666,32,33]},{"path":[4,30],"span":[1671,0,1695,1],"leadingComments":" A request message for\n [ContentAddressableStorage.BatchReadBlobs][build.bazel.remote.execution.v2.ContentAddressableStorage.BatchReadBlobs].\n"},{"path":[4,30,1],"span":[1671,8,29]},{"path":[4,30,2,0],"span":[1677,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,30,2,0,5],"span":[1677,2,8]},{"path":[4,30,2,0,1],"span":[1677,9,22]},{"path":[4,30,2,0,3],"span":[1677,25,26]},{"path":[4,30,2,1],"span":[1681,2,30],"leadingComments":" The individual blob digests. All digests MUST use the same digest\n function.\n"},{"path":[4,30,2,1,4],"span":[1681,2,10]},{"path":[4,30,2,1,6],"span":[1681,11,17]},{"path":[4,30,2,1,1],"span":[1681,18,25]},{"path":[4,30,2,1,3],"span":[1681,28,29]},{"path":[4,30,2,2],"span":[1685,2,55],"leadingComments":" A list of acceptable encodings for the returned inlined data, in no\n particular order. `IDENTITY` is always allowed even if not specified here.\n"},{"path":[4,30,2,2,4],"span":[1685,2,10]},{"path":[4,30,2,2,6],"span":[1685,11,27]},{"path":[4,30,2,2,1],"span":[1685,28,50]},{"path":[4,30,2,2,3],"span":[1685,53,54]},{"path":[4,30,2,3],"span":[1694,2,43],"leadingComments":" The digest function of the blobs being requested.\n\n If the digest function used is one of MD5, MURMUR3, SHA1, SHA256,\n SHA384, SHA512, or VSO, the client MAY leave this field unset. In\n that case the server SHOULD infer the digest function using the\n length of the blob digest hashes and the digest functions announced\n in the server's capabilities.\n"},{"path":[4,30,2,3,6],"span":[1694,2,22]},{"path":[4,30,2,3,1],"span":[1694,23,38]},{"path":[4,30,2,3,3],"span":[1694,41,42]},{"path":[4,31],"span":[1699,0,1718,1],"leadingComments":" A response message for\n [ContentAddressableStorage.BatchReadBlobs][build.bazel.remote.execution.v2.ContentAddressableStorage.BatchReadBlobs].\n"},{"path":[4,31,1],"span":[1699,8,30]},{"path":[4,31,3,0],"span":[1701,2,1714,3],"leadingComments":" A response corresponding to a single blob that the client tried to download.\n"},{"path":[4,31,3,0,1],"span":[1701,10,18]},{"path":[4,31,3,0,2,0],"span":[1703,4,22],"leadingComments":" The digest to which this response corresponds.\n"},{"path":[4,31,3,0,2,0,6],"span":[1703,4,10]},{"path":[4,31,3,0,2,0,1],"span":[1703,11,17]},{"path":[4,31,3,0,2,0,3],"span":[1703,20,21]},{"path":[4,31,3,0,2,1],"span":[1706,4,19],"leadingComments":" The raw binary data.\n"},{"path":[4,31,3,0,2,1,5],"span":[1706,4,9]},{"path":[4,31,3,0,2,1,1],"span":[1706,10,14]},{"path":[4,31,3,0,2,1,3],"span":[1706,17,18]},{"path":[4,31,3,0,2,2],"span":[1710,4,36],"leadingComments":" The format the data is encoded in. MUST be `IDENTITY`/unspecified,\n or one of the acceptable compressors specified in the `BatchReadBlobsRequest`.\n"},{"path":[4,31,3,0,2,2,6],"span":[1710,4,20]},{"path":[4,31,3,0,2,2,1],"span":[1710,21,31]},{"path":[4,31,3,0,2,2,3],"span":[1710,34,35]},{"path":[4,31,3,0,2,3],"span":[1713,4,33],"leadingComments":" The result of attempting to download that blob.\n"},{"path":[4,31,3,0,2,3,6],"span":[1713,4,21]},{"path":[4,31,3,0,2,3,1],"span":[1713,22,28]},{"path":[4,31,3,0,2,3,3],"span":[1713,31,32]},{"path":[4,31,2,0],"span":[1717,2,34],"leadingComments":" The responses to the requests.\n"},{"path":[4,31,2,0,4],"span":[1717,2,10]},{"path":[4,31,2,0,6],"span":[1717,11,19]},{"path":[4,31,2,0,1],"span":[1717,20,29]},{"path":[4,31,2,0,3],"span":[1717,32,33]},{"path":[4,32],"span":[1722,0,1757,1],"leadingComments":" A request message for\n [ContentAddressableStorage.GetTree][build.bazel.remote.execution.v2.ContentAddressableStorage.GetTree].\n"},{"path":[4,32,1],"span":[1722,8,22]},{"path":[4,32,2,0],"span":[1728,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,32,2,0,5],"span":[1728,2,8]},{"path":[4,32,2,0,1],"span":[1728,9,22]},{"path":[4,32,2,0,3],"span":[1728,25,26]},{"path":[4,32,2,1],"span":[1734,2,25],"leadingComments":" The digest of the root, which must be an encoded\n [Directory][build.bazel.remote.execution.v2.Directory] message\n stored in the\n [ContentAddressableStorage][build.bazel.remote.execution.v2.ContentAddressableStorage].\n"},{"path":[4,32,2,1,6],"span":[1734,2,8]},{"path":[4,32,2,1,1],"span":[1734,9,20]},{"path":[4,32,2,1,3],"span":[1734,23,24]},{"path":[4,32,2,2],"span":[1740,2,22],"leadingComments":" A maximum page size to request. If present, the server will request no more\n than this many items. Regardless of whether a page size is specified, the\n server may place its own limit on the number of items to be returned and\n require the client to retrieve more items using a subsequent request.\n"},{"path":[4,32,2,2,5],"span":[1740,2,7]},{"path":[4,32,2,2,1],"span":[1740,8,17]},{"path":[4,32,2,2,3],"span":[1740,20,21]},{"path":[4,32,2,3],"span":[1746,2,24],"leadingComments":" A page token, which must be a value received in a previous\n [GetTreeResponse][build.bazel.remote.execution.v2.GetTreeResponse].\n If present, the server will use that token as an offset, returning only\n that page and the ones that succeed it.\n"},{"path":[4,32,2,3,5],"span":[1746,2,8]},{"path":[4,32,2,3,1],"span":[1746,9,19]},{"path":[4,32,2,3,3],"span":[1746,22,23]},{"path":[4,32,2,4],"span":[1756,2,43],"leadingComments":" The digest function that was used to compute the digest of the root\n directory.\n\n If the digest function used is one of MD5, MURMUR3, SHA1, SHA256,\n SHA384, SHA512, or VSO, the client MAY leave this field unset. In\n that case the server SHOULD infer the digest function using the\n length of the root digest hash and the digest functions announced\n in the server's capabilities.\n"},{"path":[4,32,2,4,6],"span":[1756,2,22]},{"path":[4,32,2,4,1],"span":[1756,23,38]},{"path":[4,32,2,4,3],"span":[1756,41,42]},{"path":[4,33],"span":[1761,0,1770,1],"leadingComments":" A response message for\n [ContentAddressableStorage.GetTree][build.bazel.remote.execution.v2.ContentAddressableStorage.GetTree].\n"},{"path":[4,33,1],"span":[1761,8,23]},{"path":[4,33,2,0],"span":[1763,2,37],"leadingComments":" The directories descended from the requested root.\n"},{"path":[4,33,2,0,4],"span":[1763,2,10]},{"path":[4,33,2,0,6],"span":[1763,11,20]},{"path":[4,33,2,0,1],"span":[1763,21,32]},{"path":[4,33,2,0,3],"span":[1763,35,36]},{"path":[4,33,2,1],"span":[1769,2,29],"leadingComments":" If present, signifies that there are more results which the client can\n retrieve by passing this as the page_token in a subsequent\n [request][build.bazel.remote.execution.v2.GetTreeRequest].\n If empty, signifies that this is the last page of results.\n"},{"path":[4,33,2,1,5],"span":[1769,2,8]},{"path":[4,33,2,1,1],"span":[1769,9,24]},{"path":[4,33,2,1,3],"span":[1769,27,28]},{"path":[4,34],"span":[1774,0,1781,1],"leadingComments":" A request message for\n [Capabilities.GetCapabilities][build.bazel.remote.execution.v2.Capabilities.GetCapabilities].\n"},{"path":[4,34,1],"span":[1774,8,30]},{"path":[4,34,2,0],"span":[1780,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,34,2,0,5],"span":[1780,2,8]},{"path":[4,34,2,0,1],"span":[1780,9,22]},{"path":[4,34,2,0,3],"span":[1780,25,26]},{"path":[4,35],"span":[1785,0,1800,1],"leadingComments":" A response message for\n [Capabilities.GetCapabilities][build.bazel.remote.execution.v2.Capabilities.GetCapabilities].\n"},{"path":[4,35,1],"span":[1785,8,26]},{"path":[4,35,2,0],"span":[1787,2,43],"leadingComments":" Capabilities of the remote cache system.\n"},{"path":[4,35,2,0,6],"span":[1787,2,19]},{"path":[4,35,2,0,1],"span":[1787,20,38]},{"path":[4,35,2,0,3],"span":[1787,41,42]},{"path":[4,35,2,1],"span":[1790,2,51],"leadingComments":" Capabilities of the remote execution system.\n"},{"path":[4,35,2,1,6],"span":[1790,2,23]},{"path":[4,35,2,1,1],"span":[1790,24,46]},{"path":[4,35,2,1,3],"span":[1790,49,50]},{"path":[4,35,2,2],"span":[1793,2,55],"leadingComments":" Earliest RE API version supported, including deprecated versions.\n"},{"path":[4,35,2,2,6],"span":[1793,2,27]},{"path":[4,35,2,2,1],"span":[1793,28,50]},{"path":[4,35,2,2,3],"span":[1793,53,54]},{"path":[4,35,2,3],"span":[1796,2,48],"leadingComments":" Earliest non-deprecated RE API version supported.\n"},{"path":[4,35,2,3,6],"span":[1796,2,27]},{"path":[4,35,2,3,1],"span":[1796,28,43]},{"path":[4,35,2,3,3],"span":[1796,46,47]},{"path":[4,35,2,4],"span":[1799,2,49],"leadingComments":" Latest RE API version supported.\n"},{"path":[4,35,2,4,6],"span":[1799,2,27]},{"path":[4,35,2,4,1],"span":[1799,28,44]},{"path":[4,35,2,4,3],"span":[1799,47,48]},{"path":[4,36],"span":[1804,0,1893,1],"leadingComments":" The digest function used for converting values into keys for CAS and Action\n Cache.\n"},{"path":[4,36,1],"span":[1804,8,22]},{"path":[4,36,4,0],"span":[1805,2,1892,3]},{"path":[4,36,4,0,1],"span":[1805,7,12]},{"path":[4,36,4,0,2,0],"span":[1807,4,16],"leadingComments":" It is an error for the server to return this value.\n"},{"path":[4,36,4,0,2,0,1],"span":[1807,4,11]},{"path":[4,36,4,0,2,0,2],"span":[1807,14,15]},{"path":[4,36,4,0,2,1],"span":[1810,4,15],"leadingComments":" The SHA-256 digest function.\n"},{"path":[4,36,4,0,2,1,1],"span":[1810,4,10]},{"path":[4,36,4,0,2,1,2],"span":[1810,13,14]},{"path":[4,36,4,0,2,2],"span":[1813,4,13],"leadingComments":" The SHA-1 digest function.\n"},{"path":[4,36,4,0,2,2,1],"span":[1813,4,8]},{"path":[4,36,4,0,2,2,2],"span":[1813,11,12]},{"path":[4,36,4,0,2,3],"span":[1816,4,12],"leadingComments":" The MD5 digest function.\n"},{"path":[4,36,4,0,2,3,1],"span":[1816,4,7]},{"path":[4,36,4,0,2,3,2],"span":[1816,10,11]},{"path":[4,36,4,0,2,4],"span":[1820,4,12],"leadingComments":" The Microsoft \"VSO-Hash\" paged SHA256 digest function.\n See https://github.com/microsoft/BuildXL/blob/master/Documentation/Specs/PagedHash.md .\n"},{"path":[4,36,4,0,2,4,1],"span":[1820,4,7]},{"path":[4,36,4,0,2,4,2],"span":[1820,10,11]},{"path":[4,36,4,0,2,5],"span":[1823,4,15],"leadingComments":" The SHA-384 digest function.\n"},{"path":[4,36,4,0,2,5,1],"span":[1823,4,10]},{"path":[4,36,4,0,2,5,2],"span":[1823,13,14]},{"path":[4,36,4,0,2,6],"span":[1826,4,15],"leadingComments":" The SHA-512 digest function.\n"},{"path":[4,36,4,0,2,6,1],"span":[1826,4,10]},{"path":[4,36,4,0,2,6,2],"span":[1826,13,14]},{"path":[4,36,4,0,2,7],"span":[1831,4,16],"leadingComments":" Murmur3 128-bit digest function, x64 variant. Note that this is not a\n cryptographic hash function and its collision properties are not strongly guaranteed.\n See https://github.com/aappleby/smhasher/wiki/MurmurHash3 .\n"},{"path":[4,36,4,0,2,7,1],"span":[1831,4,11]},{"path":[4,36,4,0,2,7,2],"span":[1831,14,15]},{"path":[4,36,4,0,2,8],"span":[1887,4,19],"leadingComments":" The SHA-256 digest function, modified to use a Merkle tree for\n large objects. This permits implementations to store large blobs\n as a decomposed sequence of 2^j sized chunks, where j >= 10,\n while being able to validate integrity at the chunk level.\n\n Furthermore, on systems that do not offer dedicated instructions\n for computing SHA-256 hashes (e.g., the Intel SHA and ARMv8\n cryptographic extensions), SHA256TREE hashes can be computed more\n efficiently than plain SHA-256 hashes by using generic SIMD\n extensions, such as Intel AVX2 or ARM NEON.\n\n SHA256TREE hashes are computed as follows:\n\n - For blobs that are 1024 bytes or smaller, the hash is computed\n   using the regular SHA-256 digest function.\n\n - For blobs that are more than 1024 bytes in size, the hash is\n   computed as follows:\n\n   1. The blob is partitioned into a left (leading) and right\n      (trailing) blob. These blobs have lengths m and n\n      respectively, where m = 2^k and 0 < n <= m.\n\n   2. Hashes of the left and right blob, Hash(left) and\n      Hash(right) respectively, are computed by recursively\n      applying the SHA256TREE algorithm.\n\n   3. A single invocation is made to the SHA-256 block cipher with\n      the following parameters:\n\n          M = Hash(left) || Hash(right)\n          H = {\n              0xcbbb9d5d, 0x629a292a, 0x9159015a, 0x152fecd8,\n              0x67332667, 0x8eb44a87, 0xdb0c2e0d, 0x47b5481d,\n          }\n\n      The values of H are the leading fractional parts of the\n      square roots of the 9th to the 16th prime number (23 to 53).\n      This differs from plain SHA-256, where the first eight prime\n      numbers (2 to 19) are used, thereby preventing trivial hash\n      collisions between small and large objects.\n\n   4. The hash of the full blob can then be obtained by\n      concatenating the outputs of the block cipher:\n\n          Hash(blob) = a || b || c || d || e || f || g || h\n\n      Addition of the original values of H, as normally done\n      through the use of the Davies-Meyer structure, is not\n      performed. This isn't necessary, as the block cipher is only\n      invoked once.\n\n Test vectors of this digest function can be found in the\n accompanying sha256tree_test_vectors.txt file.\n"},{"path":[4,36,4,0,2,8,1],"span":[1887,4,14]},{"path":[4,36,4,0,2,8,2],"span":[1887,17,18]},{"path":[4,36,4,0,2,9],"span":[1891,4,15],"leadingComments":" The BLAKE3 hash function.\n See https://github.com/BLAKE3-team/BLAKE3.\n"},{"path":[4,36,4,0,2,9,1],"span":[1891,4,10]},{"path":[4,36,4,0,2,9,2],"span":[1891,13,14]},{"path":[4,37],"span":[1896,0,1898,1],"leadingComments":" Describes the server/instance capabilities for updating the action cache.\n"},{"path":[4,37,1],"span":[1896,8,37]},{"path":[4,37,2,0],"span":[1897,2,26]},{"path":[4,37,2,0,5],"span":[1897,2,6]},{"path":[4,37,2,0,1],"span":[1897,7,21]},{"path":[4,37,2,0,3],"span":[1897,24,25]},{"path":[4,38],"span":[1904,0,1915,1],"leadingComments":" Allowed values for priority in\n [ResultsCachePolicy][build.bazel.remoteexecution.v2.ResultsCachePolicy] and\n [ExecutionPolicy][build.bazel.remoteexecution.v2.ResultsCachePolicy]\n Used for querying both cache and execution valid priority ranges.\n"},{"path":[4,38,1],"span":[1904,8,28]},{"path":[4,38,3,0],"span":[1906,2,1913,3],"leadingComments":" Supported range of priorities, including boundaries.\n"},{"path":[4,38,3,0,1],"span":[1906,10,23]},{"path":[4,38,3,0,2,0],"span":[1909,4,27],"leadingComments":" The minimum numeric value for this priority range, which represents the\n most urgent task or longest retained item.\n"},{"path":[4,38,3,0,2,0,5],"span":[1909,4,9]},{"path":[4,38,3,0,2,0,1],"span":[1909,10,22]},{"path":[4,38,3,0,2,0,3],"span":[1909,25,26]},{"path":[4,38,3,0,2,1],"span":[1912,4,27],"leadingComments":" The maximum numeric value for this priority range, which represents the\n least urgent task or shortest retained item.\n"},{"path":[4,38,3,0,2,1,5],"span":[1912,4,9]},{"path":[4,38,3,0,2,1,1],"span":[1912,10,22]},{"path":[4,38,3,0,2,1,3],"span":[1912,25,26]},{"path":[4,38,2,0],"span":[1914,2,40]},{"path":[4,38,2,0,4],"span":[1914,2,10]},{"path":[4,38,2,0,6],"span":[1914,11,24]},{"path":[4,38,2,0,1],"span":[1914,25,35]},{"path":[4,38,2,0,3],"span":[1914,38,39]},{"path":[4,39],"span":[1918,0,1933,1],"leadingComments":" Describes how the server treats absolute symlink targets.\n"},{"path":[4,39,1],"span":[1918,8,35]},{"path":[4,39,4,0],"span":[1919,2,1932,3]},{"path":[4,39,4,0,1],"span":[1919,7,12]},{"path":[4,39,4,0,2,0],"span":[1921,4,16],"leadingComments":" Invalid value.\n"},{"path":[4,39,4,0,2,0,1],"span":[1921,4,11]},{"path":[4,39,4,0,2,0,2],"span":[1921,14,15]},{"path":[4,39,4,0,2,1],"span":[1927,4,19],"leadingComments":" Server will return an `INVALID_ARGUMENT` on input symlinks with absolute\n targets.\n If an action tries to create an output symlink with an absolute target, a\n `FAILED_PRECONDITION` will be returned.\n"},{"path":[4,39,4,0,2,1,1],"span":[1927,4,14]},{"path":[4,39,4,0,2,1,2],"span":[1927,17,18]},{"path":[4,39,4,0,2,2],"span":[1931,4,16],"leadingComments":" Server will allow symlink targets to escape the input root tree, possibly\n resulting in non-hermetic builds.\n"},{"path":[4,39,4,0,2,2,1],"span":[1931,4,11]},{"path":[4,39,4,0,2,2,2],"span":[1931,14,15]},{"path":[4,40],"span":[1936,0,1956,1],"leadingComments":" Compression formats which may be supported.\n"},{"path":[4,40,1],"span":[1936,8,18]},{"path":[4,40,4,0],"span":[1937,2,1955,3]},{"path":[4,40,4,0,1],"span":[1937,7,12]},{"path":[4,40,4,0,2,0],"span":[1940,4,17],"leadingComments":" No compression. Servers and clients MUST always support this, and do\n not need to advertise it.\n"},{"path":[4,40,4,0,2,0,1],"span":[1940,4,12]},{"path":[4,40,4,0,2,0,2],"span":[1940,15,16]},{"path":[4,40,4,0,2,1],"span":[1943,4,13],"leadingComments":" Zstandard compression.\n"},{"path":[4,40,4,0,2,1,1],"span":[1943,4,8]},{"path":[4,40,4,0,2,1,2],"span":[1943,11,12]},{"path":[4,40,4,0,2,2],"span":[1951,4,16],"leadingComments":" RFC 1951 Deflate. This format is identical to what is used by ZIP\n files. Headers such as the one generated by gzip are not\n included.\n\n It is advised to use algorithms such as Zstandard instead, as\n those are faster and/or provide a better compression ratio.\n"},{"path":[4,40,4,0,2,2,1],"span":[1951,4,11]},{"path":[4,40,4,0,2,2,2],"span":[1951,14,15]},{"path":[4,40,4,0,2,3],"span":[1954,4,15],"leadingComments":" Brotli compression.\n"},{"path":[4,40,4,0,2,3,1],"span":[1954,4,10]},{"path":[4,40,4,0,2,3,2],"span":[1954,13,14]},{"path":[4,41],"span":[1959,0,1991,1],"leadingComments":" Capabilities of the remote cache system.\n"},{"path":[4,41,1],"span":[1959,8,25]},{"path":[4,41,2,0],"span":[1962,2,53],"leadingComments":" All the digest functions supported by the remote cache.\n Remote cache may support multiple digest functions simultaneously.\n"},{"path":[4,41,2,0,4],"span":[1962,2,10]},{"path":[4,41,2,0,6],"span":[1962,11,31]},{"path":[4,41,2,0,1],"span":[1962,32,48]},{"path":[4,41,2,0,3],"span":[1962,51,52]},{"path":[4,41,2,1],"span":[1965,2,69],"leadingComments":" Capabilities for updating the action cache.\n"},{"path":[4,41,2,1,6],"span":[1965,2,31]},{"path":[4,41,2,1,1],"span":[1965,32,64]},{"path":[4,41,2,1,3],"span":[1965,67,68]},{"path":[4,41,2,2],"span":[1968,2,55],"leadingComments":" Supported cache priority range for both CAS and ActionCache.\n"},{"path":[4,41,2,2,6],"span":[1968,2,22]},{"path":[4,41,2,2,1],"span":[1968,23,50]},{"path":[4,41,2,2,3],"span":[1968,53,54]},{"path":[4,41,2,3],"span":[1974,2,39],"leadingComments":" Maximum total size of blobs to be uploaded/downloaded using\n batch methods. A value of 0 means no limit is set, although\n in practice there will always be a message size limitation\n of the protocol in use, e.g. GRPC.\n"},{"path":[4,41,2,3,5],"span":[1974,2,7]},{"path":[4,41,2,3,1],"span":[1974,8,34]},{"path":[4,41,2,3,3],"span":[1974,37,38]},{"path":[4,41,2,4],"span":[1977,2,71],"leadingComments":" Whether absolute symlink targets are supported.\n"},{"path":[4,41,2,4,6],"span":[1977,2,35]},{"path":[4,41,2,4,1],"span":[1977,36,66]},{"path":[4,41,2,4,3],"span":[1977,69,70]},{"path":[4,41,2,5],"span":[1985,2,54],"leadingComments":" Compressors supported by the \"compressed-blobs\" bytestream resources.\n Servers MUST support identity/no-compression, even if it is not listed\n here.\n\n Note that this does not imply which if any compressors are supported by\n the server at the gRPC level.\n"},{"path":[4,41,2,5,4],"span":[1985,2,10]},{"path":[4,41,2,5,6],"span":[1985,11,27]},{"path":[4,41,2,5,1],"span":[1985,28,49]},{"path":[4,41,2,5,3],"span":[1985,52,53]},{"path":[4,41,2,6],"span":[1990,2,67],"leadingComments":" Compressors supported for inlined data in\n [BatchUpdateBlobs][build.bazel.remote.execution.v2.ContentAddressableStorage.BatchUpdateBlobs]\n requests.\n"},{"path":[4,41,2,6,4],"span":[1990,2,10]},{"path":[4,41,2,6,6],"span":[1990,11,27]},{"path":[4,41,2,6,1],"span":[1990,28,62]},{"path":[4,41,2,6,3],"span":[1990,65,66]},{"path":[4,42],"span":[1994,0,2023,1],"leadingComments":" Capabilities of the remote execution system.\n"},{"path":[4,42,1],"span":[1994,8,29]},{"path":[4,42,2,0],"span":[1999,2,43],"leadingComments":" Legacy field for indicating which digest function is supported by the\n remote execution system. It MUST be set to a value other than UNKNOWN.\n Implementations should consider the repeated digest_functions field\n first, falling back to this singular field if digest_functions is unset.\n"},{"path":[4,42,2,0,6],"span":[1999,2,22]},{"path":[4,42,2,0,1],"span":[1999,23,38]},{"path":[4,42,2,0,3],"span":[1999,41,42]},{"path":[4,42,2,1],"span":[2002,2,24],"leadingComments":" Whether remote execution is enabled for the particular server/instance.\n"},{"path":[4,42,2,1,5],"span":[2002,2,6]},{"path":[4,42,2,1,1],"span":[2002,7,19]},{"path":[4,42,2,1,3],"span":[2002,22,23]},{"path":[4,42,2,2],"span":[2005,2,59],"leadingComments":" Supported execution priority range.\n"},{"path":[4,42,2,2,6],"span":[2005,2,22]},{"path":[4,42,2,2,1],"span":[2005,23,54]},{"path":[4,42,2,2,3],"span":[2005,57,58]},{"path":[4,42,2,3],"span":[2008,2,48],"leadingComments":" Supported node properties.\n"},{"path":[4,42,2,3,4],"span":[2008,2,10]},{"path":[4,42,2,3,5],"span":[2008,11,17]},{"path":[4,42,2,3,1],"span":[2008,18,43]},{"path":[4,42,2,3,3],"span":[2008,46,47]},{"path":[4,42,2,4],"span":[2022,2,53],"leadingComments":" All the digest functions supported by the remote execution system.\n If this field is set, it MUST also contain digest_function.\n\n Even if the remote execution system announces support for multiple\n digest functions, individual execution requests may only reference\n CAS objects using a single digest function. For example, it is not\n permitted to execute actions having both MD5 and SHA-256 hashed\n files in their input root.\n\n The CAS objects referenced by action results generated by the\n remote execution system MUST use the same digest function as the\n one used to construct the action.\n"},{"path":[4,42,2,4,4],"span":[2022,2,10]},{"path":[4,42,2,4,6],"span":[2022,11,31]},{"path":[4,42,2,4,1],"span":[2022,32,48]},{"path":[4,42,2,4,3],"span":[2022,51,52]},{"path":[4,43],"span":[2026,0,2032,1],"leadingComments":" Details for the tool used to call the API.\n"},{"path":[4,43,1],"span":[2026,8,19]},{"path":[4,43,2,0],"span":[2028,2,23],"leadingComments":" Name of the tool, e.g. bazel.\n"},{"path":[4,43,2,0,5],"span":[2028,2,8]},{"path":[4,43,2,0,1],"span":[2028,9,18]},{"path":[4,43,2,0,3],"span":[2028,21,22]},{"path":[4,43,2,1],"span":[2031,2,26],"leadingComments":" Version of the tool used for the request, e.g. 5.0.3.\n"},{"path":[4,43,2,1,5],"span":[2031,2,8]},{"path":[4,43,2,1,1],"span":[2031,9,21]},{"path":[4,43,2,1,3],"span":[2031,24,25]},{"path":[4,44],"span":[2046,0,2076,1],"leadingComments":" An optional Metadata to attach to any RPC request to tell the server about an\n external context of the request. The server may use this for logging or other\n purposes. To use it, the client attaches the header to the call using the\n canonical proto serialization:\n\n * name: `build.bazel.remote.execution.v2.requestmetadata-bin`\n * contents: the base64 encoded binary `RequestMetadata` message.\n Note: the gRPC library serializes binary headers encoded in base64 by\n default (https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md#requests).\n Therefore, if the gRPC library is used to pass/retrieve this\n metadata, the user may ignore the base64 encoding and assume it is simply\n serialized as a binary message.\n"},{"path":[4,44,1],"span":[2046,8,23]},{"path":[4,44,2,0],"span":[2048,2,31],"leadingComments":" The details for the tool invoking the requests.\n"},{"path":[4,44,2,0,6],"span":[2048,2,13]},{"path":[4,44,2,0,1],"span":[2048,14,26]},{"path":[4,44,2,0,3],"span":[2048,29,30]},{"path":[4,44,2,1],"span":[2053,2,23],"leadingComments":" An identifier that ties multiple requests to the same action.\n For example, multiple requests to the CAS, Action Cache, and Execution\n API are used in order to compile foo.cc.\n"},{"path":[4,44,2,1,5],"span":[2053,2,8]},{"path":[4,44,2,1,1],"span":[2053,9,18]},{"path":[4,44,2,1,3],"span":[2053,21,22]},{"path":[4,44,2,2],"span":[2057,2,32],"leadingComments":" An identifier that ties multiple actions together to a final result.\n For example, multiple actions are required to build and run foo_test.\n"},{"path":[4,44,2,2,5],"span":[2057,2,8]},{"path":[4,44,2,2,1],"span":[2057,9,27]},{"path":[4,44,2,2,3],"span":[2057,30,31]},{"path":[4,44,2,3],"span":[2061,2,39],"leadingComments":" An identifier to tie multiple tool invocations together. For example,\n runs of foo_test, bar_test and baz_test on a post-submit of a given patch.\n"},{"path":[4,44,2,3,5],"span":[2061,2,8]},{"path":[4,44,2,3,1],"span":[2061,9,34]},{"path":[4,44,2,3,3],"span":[2061,37,38]},{"path":[4,44,2,4],"span":[2065,2,29],"leadingComments":" A brief description of the kind of action, for example, CppCompile or GoLink.\n There is no standard agreed set of values for this, and they are expected to vary between different client tools.\n"},{"path":[4,44,2,4,5],"span":[2065,2,8]},{"path":[4,44,2,4,1],"span":[2065,9,24]},{"path":[4,44,2,4,3],"span":[2065,27,28]},{"path":[4,44,2,5],"span":[2069,2,23],"leadingComments":" An identifier for the target which produced this action.\n No guarantees are made around how many actions may relate to a single target.\n"},{"path":[4,44,2,5,5],"span":[2069,2,8]},{"path":[4,44,2,5,1],"span":[2069,9,18]},{"path":[4,44,2,5,3],"span":[2069,21,22]},{"path":[4,44,2,6],"span":[2075,2,30],"leadingComments":" An identifier for the configuration in which the target was built,\n e.g. for differentiating building host tools or different target platforms.\n There is no expectation that this value will have any particular structure,\n or equality across invocations, though some client tools may offer these guarantees.\n"},{"path":[4,44,2,6,5],"span":[2075,2,8]},{"path":[4,44,2,6,1],"span":[2075,9,25]},{"path":[4,44,2,6,3],"span":[2075,28,29]}]},"syntax":"proto3","bufExtension":{"isImport":false,"moduleInfo":{"name":{"remote":"buf.build","owner":"bazel","repository":"remote-apis"}},"isSyntaxUnspecified":false}},{"name":"build/bazel/remote/asset/v1/remote_asset.proto","package":"build.bazel.remote.asset.v1","dependency":["build/bazel/remote/execution/v2/remote_execution.proto","google/api/annotations.proto","google/protobuf/duration.proto","google/protobuf/timestamp.proto","google/rpc/status.proto"],"messageType":[{"name":"Qualifier","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"value"}]},{"name":"FetchBlobRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"},{"name":"timeout","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Duration","jsonName":"timeout"},{"name":"oldest_content_accepted","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"oldestContentAccepted"},{"name":"uris","number":4,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"uris"},{"name":"qualifiers","number":5,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.asset.v1.Qualifier","jsonName":"qualifiers"}]},{"name":"FetchBlobResponse","field":[{"name":"status","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.rpc.Status","jsonName":"status"},{"name":"uri","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"uri"},{"name":"qualifiers","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.asset.v1.Qualifier","jsonName":"qualifiers"},{"name":"expires_at","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"expiresAt"},{"name":"blob_digest","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"blobDigest"}]},{"name":"FetchDirectoryRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"},{"name":"timeout","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Duration","jsonName":"timeout"},{"name":"oldest_content_accepted","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"oldestContentAccepted"},{"name":"uris","number":4,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"uris"},{"name":"qualifiers","number":5,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.asset.v1.Qualifier","jsonName":"qualifiers"}]},{"name":"FetchDirectoryResponse","field":[{"name":"status","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.rpc.Status","jsonName":"status"},{"name":"uri","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"uri"},{"name":"qualifiers","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.asset.v1.Qualifier","jsonName":"qualifiers"},{"name":"expires_at","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"expiresAt"},{"name":"root_directory_digest","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"rootDirectoryDigest"}]},{"name":"PushBlobRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"},{"name":"uris","number":2,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"uris"},{"name":"qualifiers","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.asset.v1.Qualifier","jsonName":"qualifiers"},{"name":"expire_at","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"expireAt"},{"name":"blob_digest","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"blobDigest"},{"name":"references_blobs","number":6,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"referencesBlobs"},{"name":"references_directories","number":7,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"referencesDirectories"}]},{"name":"PushBlobResponse"},{"name":"PushDirectoryRequest","field":[{"name":"instance_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"instanceName"},{"name":"uris","number":2,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"uris"},{"name":"qualifiers","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.asset.v1.Qualifier","jsonName":"qualifiers"},{"name":"expire_at","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Timestamp","jsonName":"expireAt"},{"name":"root_directory_digest","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"rootDirectoryDigest"},{"name":"references_blobs","number":6,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"referencesBlobs"},{"name":"references_directories","number":7,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".build.bazel.remote.execution.v2.Digest","jsonName":"referencesDirectories"}]},{"name":"PushDirectoryResponse"}],"service":[{"name":"Fetch","method":[{"name":"FetchBlob","inputType":".build.bazel.remote.asset.v1.FetchBlobRequest","outputType":".build.bazel.remote.asset.v1.FetchBlobResponse","options":{"[google.api.http]":{"post":"/v1/{instance_name=**}/assets:fetchBlob","body":"*"}}},{"name":"FetchDirectory","inputType":".build.bazel.remote.asset.v1.FetchDirectoryRequest","outputType":".build.bazel.remote.asset.v1.FetchDirectoryResponse","options":{"[google.api.http]":{"post":"/v1/{instance_name=**}/assets:fetchDirectory","body":"*"}}}]},{"name":"Push","method":[{"name":"PushBlob","inputType":".build.bazel.remote.asset.v1.PushBlobRequest","outputType":".build.bazel.remote.asset.v1.PushBlobResponse","options":{"[google.api.http]":{"post":"/v1/{instance_name=**}/assets:pushBlob","body":"*"}}},{"name":"PushDirectory","inputType":".build.bazel.remote.asset.v1.PushDirectoryRequest","outputType":".build.bazel.remote.asset.v1.PushDirectoryResponse","options":{"[google.api.http]":{"post":"/v1/{instance_name=**}/assets:pushDirectory","body":"*"}}}]}],"options":{"javaPackage":"build.bazel.remote.asset.v1","javaOuterClassname":"RemoteAssetProto","javaMultipleFiles":true,"goPackage":"github.com/bazelbuild/remote-apis/build/bazel/remote/asset/v1;remoteasset","objcClassPrefix":"RA","csharpNamespace":"Build.Bazel.Remote.Asset.v1"},"sourceCodeInfo":{"location":[{"span":[14,0,448,45]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2020 The Bazel Authors.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,36]},{"path":[3,0],"span":[18,0,64]},{"path":[3,1],"span":[19,0,38]},{"path":[3,2],"span":[20,0,40]},{"path":[3,3],"span":[21,0,41]},{"path":[3,4],"span":[22,0,33]},{"path":[8],"span":[24,0,56]},{"path":[8,37],"span":[24,0,56]},{"path":[8],"span":[25,0,96]},{"path":[8,11],"span":[25,0,96]},{"path":[8],"span":[26,0,34]},{"path":[8,10],"span":[26,0,34]},{"path":[8],"span":[27,0,49]},{"path":[8,8],"span":[27,0,49]},{"path":[8],"span":[28,0,52]},{"path":[8,1],"span":[28,0,52]},{"path":[8],"span":[29,0,32]},{"path":[8,36],"span":[29,0,32]},{"path":[4,0],"span":[66,0,75,1],"leadingComments":" Qualifiers are used to disambiguate or sub-select content that shares a URI.\n This may include specifying a particular commit or branch, in the case of\n URIs referencing a repository; they could also be used to specify a\n particular subdirectory of a repository or tarball. Qualifiers may also be\n used to ensure content matches what the client expects, even when there is\n no ambiguity to be had - for example, a qualifier specifying a checksum\n value.\n\n In cases where the semantics of the request are not immediately clear from\n the URL and/or qualifiers - e.g. dictated by URL scheme - it is recommended\n to use an additional qualifier to remove the ambiguity. The `resource_type`\n qualifier is recommended for this purpose.\n\n Qualifiers may be supplied in any order.\n","leadingDetachedComments":[" The Remote Asset API provides a mapping from a URI and Qualifiers to\n Digests.  \n\n Multiple URIs may be used to refer to the same content.  For example, the\n same tarball may exist at multiple mirrors and thus be retrievable from\n multiple URLs.  When URLs are used, these should refer to actual content as\n Fetch service implementations may choose to fetch the content directly\n from the origin.  For example, the HEAD of a git repository's active branch\n can be referred to as:\n\n     uri: https://github.com/bazelbuild/remote-apis.git\n\n URNs may be used to strongly identify content, for instance by using the\n uuid namespace identifier: urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6.\n This is most applicable to named content that is Push'd, where the URN\n serves as an agreed-upon key, but carries no other inherent meaning.\n\n Service implementations may choose to support only URLs, only URNs for\n Push'd content, only other URIs for which the server and client agree upon\n semantics of, or any mixture of the above.\n"]},{"path":[4,0,1],"span":[66,8,17]},{"path":[4,0,2,0],"span":[71,2,18],"leadingComments":" The \"name\" of the qualifier, for example \"resource_type\".\n No separation is made between 'standard' and 'nonstandard'\n qualifiers, in accordance with https://tools.ietf.org/html/rfc6648,\n however implementers *SHOULD* take care to avoid ambiguity.\n"},{"path":[4,0,2,0,5],"span":[71,2,8]},{"path":[4,0,2,0,1],"span":[71,9,13]},{"path":[4,0,2,0,3],"span":[71,16,17]},{"path":[4,0,2,1],"span":[74,2,19],"leadingComments":" The \"value\" of the qualifier. Semantics will be dictated by the name.\n"},{"path":[4,0,2,1,5],"span":[74,2,8]},{"path":[4,0,2,1,1],"span":[74,9,14]},{"path":[4,0,2,1,3],"span":[74,17,18]},{"path":[6,0],"span":[85,0,149,1],"leadingComments":" The Fetch service resolves or fetches assets referenced by URI and\n Qualifiers, returning a Digest for the content in \n [ContentAddressableStorage][build.bazel.remote.execution.v2.ContentAddressableStorage].\n\n As with other services in the Remote Execution API, any call may return an\n error with a [RetryInfo][google.rpc.RetryInfo] error detail providing\n information about when the client should retry the request; clients SHOULD\n respect the information provided.\n"},{"path":[6,0,1],"span":[85,8,13]},{"path":[6,0,2,0],"span":[143,2,145,3],"leadingComments":" Resolve or fetch referenced assets, making them available to the caller and\n other consumers in the [ContentAddressableStorage][build.bazel.remote.execution.v2.ContentAddressableStorage].\n\n Servers *MAY* fetch content that they do not already have cached, for any\n URLs they support.\n\n Servers *SHOULD* ensure that referenced files are present in the CAS at the\n time of the response, and (if supported) that they will remain available\n for a reasonable period of time. The lifetimes of the referenced blobs *SHOULD*\n be increased if necessary and applicable.\n In the event that a client receives a reference to content that is no\n longer present, it *MAY* re-issue the request with\n `oldest_content_accepted` set to a more recent timestamp than the original\n attempt, to induce a re-fetch from origin.\n\n Servers *MAY* cache fetched content and reuse it for subsequent requests,\n subject to `oldest_content_accepted`.\n\n Servers *MAY* support the complementary [Push][build.bazel.remote.asset.v1.Push]\n API and allow content to be directly inserted for use in future fetch\n responses.\n\n Servers *MUST* ensure Fetch'd content matches all the specified\n qualifiers except in the case of previously Push'd resources, for which\n the server *MAY* trust the pushing client to have set the qualifiers\n correctly, without validation.\n\n Servers not implementing the complementary [Push][build.bazel.remote.asset.v1.Push]\n API *MUST* reject requests containing qualifiers it does not support.\n\n Servers *MAY* transform assets as part of the fetch. For example a\n tarball fetched by [FetchDirectory][build.bazel.remote.asset.v1.Fetch.FetchDirectory]\n might be unpacked, or a Git repository\n fetched by [FetchBlob][build.bazel.remote.asset.v1.Fetch.FetchBlob]\n might be passed through `git-archive`.\n\n Errors handling the requested assets will be returned as gRPC Status errors\n here; errors outside the server's control will be returned inline in the\n `status` field of the response (see comment there for details).\n The possible RPC errors include:\n * `INVALID_ARGUMENT`: One or more arguments were invalid, such as a\n   qualifier that is not supported by the server.\n * `RESOURCE_EXHAUSTED`: There is insufficient quota of some resource to\n   perform the requested operation. The client may retry after a delay.\n * `UNAVAILABLE`: Due to a transient condition the operation could not be\n   completed. The client should retry.\n * `INTERNAL`: An internal error occurred while performing the operation.\n   The client should retry.\n * `DEADLINE_EXCEEDED`: The fetch could not be completed within the given\n   RPC deadline. The client should retry for at least as long as the value\n   provided in `timeout` field of the request.\n\n In the case of unsupported qualifiers, the server *SHOULD* additionally\n send a [BadRequest][google.rpc.BadRequest] error detail where, for each\n unsupported qualifier, there is a `FieldViolation` with a `field` of\n `qualifiers.name` and a `description` of `\"{qualifier}\" not supported`\n indicating the name of the unsupported qualifier.\n"},{"path":[6,0,2,0,1],"span":[143,6,15]},{"path":[6,0,2,0,2],"span":[143,16,32]},{"path":[6,0,2,0,3],"span":[143,43,60]},{"path":[6,0,2,0,4],"span":[144,4,93]},{"path":[6,0,2,0,4,72295728],"span":[144,4,93]},{"path":[6,0,2,1],"span":[146,2,148,3]},{"path":[6,0,2,1,1],"span":[146,6,20]},{"path":[6,0,2,1,2],"span":[146,21,42]},{"path":[6,0,2,1,3],"span":[146,53,75]},{"path":[6,0,2,1,4],"span":[147,4,98]},{"path":[6,0,2,1,4,72295728],"span":[147,4,98]},{"path":[4,1],"span":[153,0,203,1],"leadingComments":" A request message for\n [Fetch.FetchBlob][build.bazel.remote.asset.v1.Fetch.FetchBlob].\n"},{"path":[4,1,1],"span":[153,8,24]},{"path":[4,1,2,0],"span":[159,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,1,2,0,5],"span":[159,2,8]},{"path":[4,1,2,0,1],"span":[159,9,22]},{"path":[4,1,2,0,3],"span":[159,25,26]},{"path":[4,1,2,1],"span":[174,2,39],"leadingComments":" The timeout for the underlying fetch, if content needs to be retrieved from\n origin.\n\n If unset, the server *MAY* apply an implementation-defined timeout.\n\n If set, and the user-provided timeout exceeds the RPC deadline, the server\n *SHOULD* keep the fetch going after the RPC completes, to be made\n available for future Fetch calls. The server may also enforce (via clamping\n and/or an INVALID_ARGUMENT error) implementation-defined minimum and\n maximum timeout values.\n\n If this timeout is exceeded on an attempt to retrieve content from origin\n the client will receive DEADLINE_EXCEEDED in [FetchBlobResponse.status].\n"},{"path":[4,1,2,1,6],"span":[174,2,26]},{"path":[4,1,2,1,1],"span":[174,27,34]},{"path":[4,1,2,1,3],"span":[174,37,38]},{"path":[4,1,2,2],"span":[184,2,56],"leadingComments":" The oldest content the client is willing to accept, as measured from the\n time it was Push'd or when the underlying retrieval from origin was \n started.\n Upon retries of Fetch requests that cannot be completed within a single\n RPC, clients *SHOULD* provide the same value for subsequent requests as the\n original, to simplify combining the request with the previous attempt.\n\n If unset, the client *SHOULD* accept content of any age.\n"},{"path":[4,1,2,2,6],"span":[184,2,27]},{"path":[4,1,2,2,1],"span":[184,28,51]},{"path":[4,1,2,2,3],"span":[184,54,55]},{"path":[4,1,2,3],"span":[195,2,27],"leadingComments":" The URI(s) of the content to fetch. These may be resources that the server\n can directly fetch from origin, in which case multiple URIs *SHOULD*\n represent the same content available at different locations (such as an\n origin and secondary mirrors). These may also be URIs for content known to\n the server through other mechanisms, e.g. pushed via the [Push][build.bazel.remote.asset.v1.Push]\n service.\n\n Clients *MUST* supply at least one URI. Servers *MAY* match any one of the\n supplied URIs.\n"},{"path":[4,1,2,3,4],"span":[195,2,10]},{"path":[4,1,2,3,5],"span":[195,11,17]},{"path":[4,1,2,3,1],"span":[195,18,22]},{"path":[4,1,2,3,3],"span":[195,25,26]},{"path":[4,1,2,4],"span":[202,2,36],"leadingComments":" Qualifiers sub-specifying the content to fetch - see comments on\n [Qualifier][build.bazel.remote.asset.v1.Qualifier].\n The same qualifiers apply to all URIs.\n\n Specified qualifier names *MUST* be unique.\n"},{"path":[4,1,2,4,4],"span":[202,2,10]},{"path":[4,1,2,4,6],"span":[202,11,20]},{"path":[4,1,2,4,1],"span":[202,21,31]},{"path":[4,1,2,4,3],"span":[202,34,35]},{"path":[4,2],"span":[207,0,236,1],"leadingComments":" A response message for\n [Fetch.FetchBlob][build.bazel.remote.asset.v1.Fetch.FetchBlob].\n"},{"path":[4,2,1],"span":[207,8,25]},{"path":[4,2,2,0],"span":[220,2,31],"leadingComments":" If the status has a code other than `OK`, it indicates that the operation\n was unable to be completed for reasons outside the servers' control.\n The possible fetch errors include:\n * `DEADLINE_EXCEEDED`: The operation could not be completed within the\n   specified timeout.\n * `NOT_FOUND`: The requested asset was not found at the specified location.\n * `PERMISSION_DENIED`: The request was rejected by a remote server, or\n   requested an asset from a disallowed origin.\n * `ABORTED`: The operation could not be completed, typically due to a\n   failed consistency check.\n * `RESOURCE_EXHAUSTED`: There is insufficient quota of some resource to\n   perform the requested operation. The client may retry after a delay.\n"},{"path":[4,2,2,0,6],"span":[220,2,19]},{"path":[4,2,2,0,1],"span":[220,20,26]},{"path":[4,2,2,0,3],"span":[220,29,30]},{"path":[4,2,2,1],"span":[224,2,17],"leadingComments":" The uri from the request that resulted in a successful retrieval, or from\n which the error indicated in `status` was obtained.\n"},{"path":[4,2,2,1,5],"span":[224,2,8]},{"path":[4,2,2,1,1],"span":[224,9,12]},{"path":[4,2,2,1,3],"span":[224,15,16]},{"path":[4,2,2,2],"span":[227,2,36],"leadingComments":" Any qualifiers known to the server and of interest to clients.\n"},{"path":[4,2,2,2,4],"span":[227,2,10]},{"path":[4,2,2,2,6],"span":[227,11,20]},{"path":[4,2,2,2,1],"span":[227,21,31]},{"path":[4,2,2,2,3],"span":[227,34,35]},{"path":[4,2,2,3],"span":[231,2,43],"leadingComments":" A minimum timestamp the content is expected to be available through.\n Servers *MAY* omit this field, if not known with confidence.\n"},{"path":[4,2,2,3,6],"span":[231,2,27]},{"path":[4,2,2,3,1],"span":[231,28,38]},{"path":[4,2,2,3,3],"span":[231,41,42]},{"path":[4,2,2,4],"span":[235,2,57],"leadingComments":" The result of the fetch, if the status had code `OK`.\n The digest of the file's contents, available for download through the CAS.\n"},{"path":[4,2,2,4,6],"span":[235,2,40]},{"path":[4,2,2,4,1],"span":[235,41,52]},{"path":[4,2,2,4,3],"span":[235,55,56]},{"path":[4,3],"span":[240,0,284,1],"leadingComments":" A request message for\n [Fetch.FetchDirectory][build.bazel.remote.asset.v1.Fetch.FetchDirectory].\n"},{"path":[4,3,1],"span":[240,8,29]},{"path":[4,3,2,0],"span":[246,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,3,2,0,5],"span":[246,2,8]},{"path":[4,3,2,0,1],"span":[246,9,22]},{"path":[4,3,2,0,3],"span":[246,25,26]},{"path":[4,3,2,1],"span":[255,2,39],"leadingComments":" The timeout for the underlying fetch, if content needs to be retrieved from\n origin. This value is allowed to exceed the RPC deadline, in which case the\n server *SHOULD* keep the fetch going after the RPC completes, to be made\n available for future Fetch calls.\n\n If this timeout is exceeded on an attempt to retrieve content from origin\n the client will receive DEADLINE_EXCEEDED in [FetchDirectoryResponse.status].\n"},{"path":[4,3,2,1,6],"span":[255,2,26]},{"path":[4,3,2,1,1],"span":[255,27,34]},{"path":[4,3,2,1,3],"span":[255,37,38]},{"path":[4,3,2,2],"span":[265,2,56],"leadingComments":" The oldest content the client is willing to accept, as measured from the\n time it was Push'd or when the underlying retrieval from origin was\n started.\n Upon retries of Fetch requests that cannot be completed within a single\n RPC, clients *SHOULD* provide the same value for subsequent requests as the\n original, to simplify combining the request with the previous attempt.\n\n If unset, the client *SHOULD* accept content of any age.\n"},{"path":[4,3,2,2,6],"span":[265,2,27]},{"path":[4,3,2,2,1],"span":[265,28,51]},{"path":[4,3,2,2,3],"span":[265,54,55]},{"path":[4,3,2,3],"span":[276,2,27],"leadingComments":" The URI(s) of the content to fetch. These may be resources that the server\n can directly fetch from origin, in which case multiple URIs *SHOULD*\n represent the same content available at different locations (such as an\n origin and secondary mirrors). These may also be URIs for content known to\n the server through other mechanisms, e.g. pushed via the [Push][build.bazel.remote.asset.v1.Push]\n service.\n\n Clients *MUST* supply at least one URI. Servers *MAY* match any one of the\n supplied URIs.\n"},{"path":[4,3,2,3,4],"span":[276,2,10]},{"path":[4,3,2,3,5],"span":[276,11,17]},{"path":[4,3,2,3,1],"span":[276,18,22]},{"path":[4,3,2,3,3],"span":[276,25,26]},{"path":[4,3,2,4],"span":[283,2,36],"leadingComments":" Qualifiers sub-specifying the content to fetch - see comments on\n [Qualifier][build.bazel.remote.asset.v1.Qualifier].\n The same qualifiers apply to all URIs.\n\n Specified qualifier names *MUST* be unique.\n"},{"path":[4,3,2,4,4],"span":[283,2,10]},{"path":[4,3,2,4,6],"span":[283,11,20]},{"path":[4,3,2,4,1],"span":[283,21,31]},{"path":[4,3,2,4,3],"span":[283,34,35]},{"path":[4,4],"span":[288,0,318,1],"leadingComments":" A response message for\n [Fetch.FetchDirectory][build.bazel.remote.asset.v1.Fetch.FetchDirectory].\n"},{"path":[4,4,1],"span":[288,8,30]},{"path":[4,4,2,0],"span":[301,2,31],"leadingComments":" If the status has a code other than `OK`, it indicates that the operation\n was unable to be completed for reasons outside the servers' control.\n The possible fetch errors include:\n * `DEADLINE_EXCEEDED`: The operation could not be completed within the\n   specified timeout.\n * `NOT_FOUND`: The requested asset was not found at the specified location.\n * `PERMISSION_DENIED`: The request was rejected by a remote server, or\n   requested an asset from a disallowed origin.\n * `ABORTED`: The operation could not be completed, typically due to a\n   failed consistency check.\n * `RESOURCE_EXHAUSTED`: There is insufficient quota of some resource to\n   perform the requested operation. The client may retry after a delay.\n"},{"path":[4,4,2,0,6],"span":[301,2,19]},{"path":[4,4,2,0,1],"span":[301,20,26]},{"path":[4,4,2,0,3],"span":[301,29,30]},{"path":[4,4,2,1],"span":[305,2,17],"leadingComments":" The uri from the request that resulted in a successful retrieval, or from\n which the error indicated in `status` was obtained.\n"},{"path":[4,4,2,1,5],"span":[305,2,8]},{"path":[4,4,2,1,1],"span":[305,9,12]},{"path":[4,4,2,1,3],"span":[305,15,16]},{"path":[4,4,2,2],"span":[308,2,36],"leadingComments":" Any qualifiers known to the server and of interest to clients.\n"},{"path":[4,4,2,2,4],"span":[308,2,10]},{"path":[4,4,2,2,6],"span":[308,11,20]},{"path":[4,4,2,2,1],"span":[308,21,31]},{"path":[4,4,2,2,3],"span":[308,34,35]},{"path":[4,4,2,3],"span":[312,2,43],"leadingComments":" A minimum timestamp the content is expected to be available through.\n Servers *MAY* omit this field, if not known with confidence.\n"},{"path":[4,4,2,3,6],"span":[312,2,27]},{"path":[4,4,2,3,1],"span":[312,28,38]},{"path":[4,4,2,3,3],"span":[312,41,42]},{"path":[4,4,2,4],"span":[317,2,67],"leadingComments":" The result of the fetch, if the status had code `OK`.\n the root digest of a directory tree, suitable for fetching via\n [ContentAddressableStorage.GetTree].\n"},{"path":[4,4,2,4,6],"span":[317,2,40]},{"path":[4,4,2,4,1],"span":[317,41,62]},{"path":[4,4,2,4,3],"span":[317,65,66]},{"path":[6,1],"span":[327,0,369,1],"leadingComments":" The Push service is complementary to the Fetch, and allows for\n associating contents of URLs to be returned in future Fetch API calls.\n\n As with other services in the Remote Execution API, any call may return an\n error with a [RetryInfo][google.rpc.RetryInfo] error detail providing\n information about when the client should retry the request; clients SHOULD\n respect the information provided.\n"},{"path":[6,1,1],"span":[327,8,12]},{"path":[6,1,2,0],"span":[362,2,364,3],"leadingComments":" These APIs associate the identifying information of a resource, as\n indicated by URI and optionally Qualifiers, with content available in the\n CAS. For example, associating a repository url and a commit id with a\n Directory Digest.\n\n Servers *SHOULD* only allow trusted clients to associate content, and *MAY*\n only allow certain URIs to be pushed.\n\n Clients *MUST* ensure associated content is available in CAS prior to\n pushing.\n\n Clients *MUST* ensure the Qualifiers listed correctly match the contents,\n and Servers *MAY* trust these values without validation.\n Fetch servers *MAY* require exact match of all qualifiers when returning\n content previously pushed, or allow fetching content with only a subset of\n the qualifiers specified on Push.\n\n Clients can specify expiration information that the server *SHOULD*\n respect. Subsequent requests can be used to alter the expiration time.\n\n A minimal compliant Fetch implementation may support only Push'd content\n and return `NOT_FOUND` for any resource that was not pushed first.\n Alternatively, a compliant implementation may choose to not support Push\n and only return resources that can be Fetch'd from origin.\n\n Errors will be returned as gRPC Status errors.\n The possible RPC errors include:\n * `INVALID_ARGUMENT`: One or more arguments to the RPC were invalid.\n * `RESOURCE_EXHAUSTED`: There is insufficient quota of some resource to\n   perform the requested operation. The client may retry after a delay.\n * `UNAVAILABLE`: Due to a transient condition the operation could not be\n   completed. The client should retry.\n * `INTERNAL`: An internal error occurred while performing the operation.\n   The client should retry.\n"},{"path":[6,1,2,0,1],"span":[362,6,14]},{"path":[6,1,2,0,2],"span":[362,15,30]},{"path":[6,1,2,0,3],"span":[362,41,57]},{"path":[6,1,2,0,4],"span":[363,4,92]},{"path":[6,1,2,0,4,72295728],"span":[363,4,92]},{"path":[6,1,2,1],"span":[366,2,368,3]},{"path":[6,1,2,1,1],"span":[366,6,19]},{"path":[6,1,2,1,2],"span":[366,20,40]},{"path":[6,1,2,1,3],"span":[366,51,72]},{"path":[6,1,2,1,4],"span":[367,4,97]},{"path":[6,1,2,1,4,72295728],"span":[367,4,97]},{"path":[4,5],"span":[373,0,404,1],"leadingComments":" A request message for\n [Push.PushBlob][build.bazel.remote.asset.v1.Push.PushBlob].\n"},{"path":[4,5,1],"span":[373,8,23]},{"path":[4,5,2,0],"span":[379,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,5,2,0,5],"span":[379,2,8]},{"path":[4,5,2,0,1],"span":[379,9,22]},{"path":[4,5,2,0,3],"span":[379,25,26]},{"path":[4,5,2,1],"span":[383,2,27],"leadingComments":" The URI(s) of the content to associate. If multiple URIs are specified, the\n pushed content will be available to fetch by specifying any of them.\n"},{"path":[4,5,2,1,4],"span":[383,2,10]},{"path":[4,5,2,1,5],"span":[383,11,17]},{"path":[4,5,2,1,1],"span":[383,18,22]},{"path":[4,5,2,1,3],"span":[383,25,26]},{"path":[4,5,2,2],"span":[388,2,36],"leadingComments":" Qualifiers sub-specifying the content that is being pushed - see comments\n on [Qualifier][build.bazel.remote.asset.v1.Qualifier].\n The same qualifiers apply to all URIs.\n"},{"path":[4,5,2,2,4],"span":[388,2,10]},{"path":[4,5,2,2,6],"span":[388,11,20]},{"path":[4,5,2,2,1],"span":[388,21,31]},{"path":[4,5,2,2,3],"span":[388,34,35]},{"path":[4,5,2,3],"span":[392,2,42],"leadingComments":" A time after which this content should stop being returned via [FetchBlob][build.bazel.remote.asset.v1.Fetch.FetchBlob].\n Servers *MAY* expire content early, e.g. due to storage pressure.\n"},{"path":[4,5,2,3,6],"span":[392,2,27]},{"path":[4,5,2,3,1],"span":[392,28,37]},{"path":[4,5,2,3,3],"span":[392,40,41]},{"path":[4,5,2,4],"span":[395,2,57],"leadingComments":" The blob to associate.\n"},{"path":[4,5,2,4,6],"span":[395,2,40]},{"path":[4,5,2,4,1],"span":[395,41,52]},{"path":[4,5,2,4,3],"span":[395,55,56]},{"path":[4,5,2,5],"span":[402,2,71],"leadingComments":" Referenced blobs or directories that need to not expire before expiration\n of this association, in addition to `blob_digest` itself.\n These fields are hints - clients *MAY* omit them, and servers *SHOULD*\n respect them, at the risk of increased incidents of Fetch responses\n indirectly referencing unavailable blobs.\n"},{"path":[4,5,2,5,4],"span":[402,2,10]},{"path":[4,5,2,5,6],"span":[402,11,49]},{"path":[4,5,2,5,1],"span":[402,50,66]},{"path":[4,5,2,5,3],"span":[402,69,70]},{"path":[4,5,2,6],"span":[403,2,77]},{"path":[4,5,2,6,4],"span":[403,2,10]},{"path":[4,5,2,6,6],"span":[403,11,49]},{"path":[4,5,2,6,1],"span":[403,50,72]},{"path":[4,5,2,6,3],"span":[403,75,76]},{"path":[4,6],"span":[408,0,40],"leadingComments":" A response message for\n [Push.PushBlob][build.bazel.remote.asset.v1.Push.PushBlob].\n"},{"path":[4,6,1],"span":[408,8,24]},{"path":[4,7],"span":[412,0,444,1],"leadingComments":" A request message for\n [Push.PushDirectory][build.bazel.remote.asset.v1.Push.PushDirectory].\n"},{"path":[4,7,1],"span":[412,8,28]},{"path":[4,7,2,0],"span":[418,2,27],"leadingComments":" The instance of the execution system to operate against. A server may\n support multiple instances of the execution system (with their own workers,\n storage, caches, etc.). The server MAY require use of this field to select\n between them in an implementation-defined fashion, otherwise it can be\n omitted.\n"},{"path":[4,7,2,0,5],"span":[418,2,8]},{"path":[4,7,2,0,1],"span":[418,9,22]},{"path":[4,7,2,0,3],"span":[418,25,26]},{"path":[4,7,2,1],"span":[422,2,27],"leadingComments":" The URI(s) of the content to associate. If multiple URIs are specified, the\n pushed content will be available to fetch by specifying any of them.\n"},{"path":[4,7,2,1,4],"span":[422,2,10]},{"path":[4,7,2,1,5],"span":[422,11,17]},{"path":[4,7,2,1,1],"span":[422,18,22]},{"path":[4,7,2,1,3],"span":[422,25,26]},{"path":[4,7,2,2],"span":[427,2,36],"leadingComments":" Qualifiers sub-specifying the content that is being pushed - see comments\n on [Qualifier][build.bazel.remote.asset.v1.Qualifier].\n The same qualifiers apply to all URIs.\n"},{"path":[4,7,2,2,4],"span":[427,2,10]},{"path":[4,7,2,2,6],"span":[427,11,20]},{"path":[4,7,2,2,1],"span":[427,21,31]},{"path":[4,7,2,2,3],"span":[427,34,35]},{"path":[4,7,2,3],"span":[432,2,42],"leadingComments":" A time after which this content should stop being returned via\n [FetchDirectory][build.bazel.remote.asset.v1.Fetch.FetchDirectory].\n Servers *MAY* expire content early, e.g. due to storage pressure.\n"},{"path":[4,7,2,3,6],"span":[432,2,27]},{"path":[4,7,2,3,1],"span":[432,28,37]},{"path":[4,7,2,3,3],"span":[432,40,41]},{"path":[4,7,2,4],"span":[435,2,67],"leadingComments":" Directory to associate\n"},{"path":[4,7,2,4,6],"span":[435,2,40]},{"path":[4,7,2,4,1],"span":[435,41,62]},{"path":[4,7,2,4,3],"span":[435,65,66]},{"path":[4,7,2,5],"span":[442,2,71],"leadingComments":" Referenced blobs or directories that need to not expire before expiration\n of this association, in addition to `root_directory_digest` itself.\n These fields are hints - clients *MAY* omit them, and servers *SHOULD*\n respect them, at the risk of increased incidents of Fetch responses\n indirectly referencing unavailable blobs.\n"},{"path":[4,7,2,5,4],"span":[442,2,10]},{"path":[4,7,2,5,6],"span":[442,11,49]},{"path":[4,7,2,5,1],"span":[442,50,66]},{"path":[4,7,2,5,3],"span":[442,69,70]},{"path":[4,7,2,6],"span":[443,2,77]},{"path":[4,7,2,6,4],"span":[443,2,10]},{"path":[4,7,2,6,6],"span":[443,11,49]},{"path":[4,7,2,6,1],"span":[443,50,72]},{"path":[4,7,2,6,3],"span":[443,75,76]},{"path":[4,8],"span":[448,0,45],"leadingComments":" A response message for\n [Push.PushDirectory][build.bazel.remote.asset.v1.Push.PushDirectory].\n"},{"path":[4,8,1],"span":[448,8,29]}]},"syntax":"proto3","bufExtension":{"isImport":false,"moduleInfo":{"name":{"remote":"buf.build","owner":"bazel","repository":"remote-apis"}},"isSyntaxUnspecified":false}},{"name":"build/bazel/remote/logstream/v1/remote_logstream.proto","package":"build.bazel.remote.logstream.v1","messageType":[{"name":"CreateLogStreamRequest","field":[{"name":"parent","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"parent"}]},{"name":"LogStream","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"write_resource_name","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"writeResourceName"}]}],"service":[{"name":"LogStreamService","method":[{"name":"CreateLogStream","inputType":".build.bazel.remote.logstream.v1.CreateLogStreamRequest","outputType":".build.bazel.remote.logstream.v1.LogStream","options":{}}]}],"options":{"javaPackage":"build.bazel.remote.logstream.v1","javaOuterClassname":"RemoteLogStreamProto","javaMultipleFiles":true,"goPackage":"github.com/bazelbuild/remote-apis/build/bazel/remote/logstream/v1;remotelogstream","objcClassPrefix":"RL","csharpNamespace":"Build.Bazel.Remote.LogStream.v1"},"sourceCodeInfo":{"location":[{"span":[16,0,138,1]},{"path":[12],"span":[16,0,18],"leadingDetachedComments":[" Copyright 2020 The Bazel Authors.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"," Log Stream API\n"]},{"path":[2],"span":[18,0,40]},{"path":[8],"span":[20,0,60]},{"path":[8,37],"span":[20,0,60]},{"path":[8],"span":[21,0,104]},{"path":[8,11],"span":[21,0,104]},{"path":[8],"span":[22,0,34]},{"path":[8,10],"span":[22,0,34]},{"path":[8],"span":[23,0,53]},{"path":[8,8],"span":[23,0,53]},{"path":[8],"span":[24,0,56]},{"path":[8,1],"span":[24,0,56]},{"path":[8],"span":[25,0,32]},{"path":[8,36],"span":[25,0,32]},{"path":[6,0],"span":[90,0,98,1],"leadingComments":" #### Introduction\n\n The Log Stream API manages LogStream resources which are used to stream\n writes and reads of an ordered sequence of bytes of unknown eventual length.\n\n Note that this is an API Interface and not an API Service, per the definitons\n at: https://cloud.google.com/apis/design/glossary\n\n Log Stream API supports the reading of unfinalized LogStreams either by\n seeking or in \"tail\" mode, for example by end-users browsing to a build\n result UI interested in seeing logs from a build action as soon as they are\n (or as they become) available.\n\n Reads and Writes of LogStreams are done via the Byte Stream API:\n https://cloud.google.com/dataproc/docs/reference/rpc/google.bytestream\n https://github.com/googleapis/googleapis/blob/master/google/bytestream/bytestream.proto\n\n #### Writing LogStreams\n\n LogStreams are written to via the Byte Stream API's `Write` RPC. Bytes\n written to LogStreams are expected to be committed and available for reading\n within a reasonable period of time (implementation-defined). Committed bytes\n to a LogStream cannot be overwritten, and finalized LogStreams - indicated by\n setting `finish_write` field in the final WriteRequest - also cannot be\n appended to.\n\n When calling the Byte Stream API's `Write` RPC to write LogStreams, writers\n must pass the `write_resource_name` of a LogStream as\n `ByteStream.WriteRequest.resource_name` rather than the LogStream's `name`.\n Separate resource names for reading and writing allows for broadcasting the\n read resource name widely while simultaneously ensuring that only writer(s)\n with knowledge of the write resource name may have written bytes to the\n LogStream.\n\n #### Reading LogStreams\n\n Use the Byte Stream API's `Read` RPC to read LogStreams. When reading\n finalized LogStreams the server will stream all contents of the LogStream\n starting at `ByteStream.ReadRequest.read_offset`.\n\n When reading unfinalized LogStreams the server must keep the streaming\n `ByteStream.Read` RPC open and send `ByteStream.ReadResponse` messages as\n more bytes become available or the LogStream is finalized.\n\n #### Example Multi-Party Read/Write Flow\n\n 1. LogStream Writer calls `CreateLogStream`\n 2. LogStream Writer publishes `LogStream.name`\n 3. LogStream Writer calls `ByteStream.Write` with\n    `LogStream.write_resource_name` as\n    `ByteStream.WriteRequest.resource_name`,\n    `ByteStream.WriteRequest.finish_write`=false.\n 4. LogStream Reader(s) call `ByteStream.Read` with the published\n    `LogStream.name` as `ByteStream.ReadRequest.resource_name`.\n 5. LogStream Service streams all committed bytes to LogStream Reader(s),\n    leave the stream open.\n 6. LogStream Writer calls `ByteStream.Write` with\n    `LogStream.write_resource_name` as\n    `ByteStream.WriteRequest.resource_name`,\n    `ByteStream.WriteRequest.finish_write`=true.\n 7. LogStream Service streams all remaining bytes to LogStream Reader(s),\n    terminates the stream.\n"},{"path":[6,0,1],"span":[90,8,24]},{"path":[6,0,2,0],"span":[97,2,68],"leadingComments":" Create a LogStream which may be written to.\n\n The returned LogStream resource name will include a `write_resource_name`\n which is the resource to use when writing to the LogStream.\n Callers of CreateLogStream are expected to NOT publish the\n `write_resource_name`.\n"},{"path":[6,0,2,0,1],"span":[97,6,21]},{"path":[6,0,2,0,2],"span":[97,22,44]},{"path":[6,0,2,0,3],"span":[97,55,64]},{"path":[4,0],"span":[101,0,107,1],"leadingComments":" Contains all information necessary to create a new LogStream resource.\n"},{"path":[4,0,1],"span":[101,8,30]},{"path":[4,0,2,0],"span":[106,2,20],"leadingComments":" Required. The parent resource of the created LogStream.\n The list of valid types of parent resources of LogStreams is up to the\n implementing server.\n Example: projects/123\n"},{"path":[4,0,2,0,5],"span":[106,2,8]},{"path":[4,0,2,0,1],"span":[106,9,15]},{"path":[4,0,2,0,3],"span":[106,18,19]},{"path":[4,1],"span":[110,0,138,1],"leadingComments":" A handle to a log (an ordered sequence of bytes).\n"},{"path":[4,1,1],"span":[110,8,17]},{"path":[4,1,2,0],"span":[116,2,18],"leadingComments":" Structured name of the resource in the format:\n   {parent=**}/logstreams/{logstream_id}\n   Example: projects/123/logstreams/456-def\n Attempting to call the Byte Stream API's `Write` RPC with a LogStream's\n   `name` as the value for `ByteStream.Write.resource_name` is an error.\n"},{"path":[4,1,2,0,5],"span":[116,2,8]},{"path":[4,1,2,0,1],"span":[116,9,13]},{"path":[4,1,2,0,3],"span":[116,16,17]},{"path":[4,1,2,1],"span":[137,2,33],"leadingComments":" Resource name to pass to `ByteStream.Write` in the format:\n   {parent=**}/logstreams/{logstream_id}/{write_token}\n   Example: projects/123/logstreams/456-def/789-ghi\n Attempting to call the Byte Stream API's `Read` RPC with a LogStream's\n   `write_resource_name` as the value for `ByteStream.Write.resource_name`\n   is an error.\n\n `write_resource_name` is separate from `name` to ensure that only the\n intended writers can write to a given LogStream. Writers must address write\n operations to the `write_resource_name`, not the `name`, and must have\n permission to write LogStreams. `write_resource_name` embeds a secret token\n and should be protected accordingly; a mishandled `write_resource_name` can\n result in unintended writers corrupting the LogStream. Therefore, the field\n should be excluded from calls to any calls which retrieve LogStream\n metadata (i.e.: `GetLogStream`).\n\n Bytes written to this resource must to be readable when `ByteStream.Read`\n is called with the `name` resource.\n Reading a write_resource_name must return an INVALID_ARGUMENT error.\n"},{"path":[4,1,2,1,5],"span":[137,2,8]},{"path":[4,1,2,1,1],"span":[137,9,28]},{"path":[4,1,2,1,3],"span":[137,31,32]}]},"syntax":"proto3","bufExtension":{"isImport":false,"moduleInfo":{"name":{"remote":"buf.build","owner":"bazel","repository":"remote-apis"}},"isSyntaxUnspecified":false}}]}