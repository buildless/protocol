// Copyright 2023 Elide Ventures LLC
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

syntax = "proto3";

package buildless.authz;

import "buildless/authz/authz.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";

option cc_enable_arenas = true;
option go_package = "github.com/elide-dev/buildless;buildless.api";
option java_multiple_files = true;
option java_package = "cloud.elide.cache.proto.api";
option java_string_check_utf8 = true;
option optimize_for = SPEED;

// ## API Key Info
//
// Specifies information about a single API key record.
message ApiKeyInfo {
  // Unique ID for the API key record being described.
  string id = 1 [
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // API key value; note that this value is masked with Base64.
  string key = 2 [
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // Label to show for this API key.
  string label = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Privilege level for this key.
  buildless.authz.PrivilegeLevel privilege = 4;

  // Whether this key is currently active.
  bool active = 5;

  // Expiration of this key, if applicable.
  google.protobuf.Timestamp expires_at = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Revocation time of this key, if applicable.
  google.protobuf.Timestamp revoked_at = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ## API Credentials
//
// Specifies a set of API credentials for a given tenant, including primary API keys and "publishable" telemetry API
// keys, which are meant for write-only operations.
message ApiCredentials {
  // Primary API keys for the current tenant.
  repeated ApiKeyInfo primary = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // "Publishable" (telemetry) API keys for the current tenant.
  repeated ApiKeyInfo events = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
}
