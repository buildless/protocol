// Copyright 2023 Elide Ventures LLC
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

syntax = "proto3";

/* Provides definitions for Buildless traffic and data metering; these values are re-used in billing data structures and
 * telemetry events.
 *
 * **Note:** Because plan objects in Buildless' model are not versioned, records should only be placed here which
 *           outlive individual API versions. Care must be exercised to maintain forward and backward compatibility.
 */
package buildless.billing;

option cc_enable_arenas = true;
option go_package = "github.com/elide-dev/buildless/billing;billing";
option java_multiple_files = true;
option java_package = "cloud.elide.cache.proto";
option java_string_check_utf8 = true;
option optimize_for = SPEED;

// ## Consumable Dimension
//
// Describes a "consumable" billing dimension, against which metering values are recorded.
enum Consumable {
  // Specifies an unknown consumable datapoint; this value should not be used by new code.
  UNKNOWN_CONSUMABLE = 0;

  // Specifies byte ingress, i.e. data moving into the Buildless system.
  BYTES_IN = 110;

  // Specifies byte egress, i.e. data moving out of the Buildless system.
  BYTES_OUT = 120;

  // Specifies bytes stored within the Buildless generic cache.
  GENERIC_CACHE_BYTES = 210;

  // Specifies items (count) stored within the Buildless generic cache, regardless of size.
  GENERIC_CACHE_ITEMS = 220;
}
